DOC OFFICIELLE https://git-scm.com/book/fr/v1/D%C3%A9marrage-rapide

git status // donne info sur la branche actuelle

git add Mecanique // ajoute un dossier fichier à l'archive

git commit -m "commentaire" // commit une piece creer un wrapper autourd de tout les fichiers add

git config --global user.email "loibl.vincent@gmail.com"

git push origin master // envoie sur le git tout ce qui a été commit, vous devrez vous identifier

git clone https://github.com/YOUR-USERNAME/YOUR-REPOSITORY // permet de clone (avec le .git dossier caché) directement dans un dossier

git checkout SHADuCommitOuDeLaBranche // deplace la view sur un commit precedent

git log // affiche tout les commit que vous avez realise

git commit -a -m "commentaire" // est equivalent a un_ git add fichier _git commit -m "commentaire" (git fait ca pour tout les fichier DEJA present)

git commit --amend -m "Votre nouveau message" // permet de changer le commentaire du dernier commit

git reset --hard // annulle tous les commits fait depuis le dernier push attention HARDCORE

git remote -v // montre les serveurs où sont stockés les push le -v est optionnel, il affiche les adresses des remotes

git fetch nom // tire les données depuis un remote mais les clones sous une branche differente

git init // permet de creer un repository git (sans github) ca cest pour les loups solitaires

git branch // affiche les branches présentes (* etoile sur celle ou vous etes place)

git branch nomDeBranche // cree une branche

git checkout nomDeBranche // se deplace sur la branche

git checkout -b nomDeBranche // synthetise les deux lignes precedentes

git merge brancheB // merge la brancheB avec la branche ou vous vous situez

git blame nomdufichier.extension // liste toutes les modifs faites a un fichier

git reset HEAD --hard // quand tu as supprime les fichiers en local et que cest le bordel

