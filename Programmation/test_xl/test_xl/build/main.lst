ARM GAS  /tmp/ccERuhj0.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 1
   4              		.eabi_attribute 28, 1
   5              		.fpu fpv4-sp-d16
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.thumb
  16              		.syntax unified
  17              		.file	"main.c"
  18              		.text
  19              	.Ltext0:
  20              		.cfi_sections	.debug_frame
  21              		.section	.text.XL_320_Send_HAL,"ax",%progbits
  22              		.align	2
  23              		.global	XL_320_Send_HAL
  24              		.thumb
  25              		.thumb_func
  27              	XL_320_Send_HAL:
  28              	.LFB124:
  29              		.file 1 "Src/main.c"
   1:Src/main.c    **** /**
   2:Src/main.c    ****   ******************************************************************************
   3:Src/main.c    ****   * File Name          : main.c
   4:Src/main.c    ****   * Description        : Main program body
   5:Src/main.c    ****   ******************************************************************************
   6:Src/main.c    ****   ** This notice applies to any and all portions of this file
   7:Src/main.c    ****   * that are not between comment pairs USER CODE BEGIN and
   8:Src/main.c    ****   * USER CODE END. Other portions of this file, whether 
   9:Src/main.c    ****   * inserted by the user or by software development tools
  10:Src/main.c    ****   * are owned by their respective copyright owners.
  11:Src/main.c    ****   *
  12:Src/main.c    ****   * COPYRIGHT(c) 2018 STMicroelectronics
  13:Src/main.c    ****   *
  14:Src/main.c    ****   * Redistribution and use in source and binary forms, with or without modification,
  15:Src/main.c    ****   * are permitted provided that the following conditions are met:
  16:Src/main.c    ****   *   1. Redistributions of source code must retain the above copyright notice,
  17:Src/main.c    ****   *      this list of conditions and the following disclaimer.
  18:Src/main.c    ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  19:Src/main.c    ****   *      this list of conditions and the following disclaimer in the documentation
  20:Src/main.c    ****   *      and/or other materials provided with the distribution.
  21:Src/main.c    ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  22:Src/main.c    ****   *      may be used to endorse or promote products derived from this software
  23:Src/main.c    ****   *      without specific prior written permission.
  24:Src/main.c    ****   *
  25:Src/main.c    ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  26:Src/main.c    ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  27:Src/main.c    ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  28:Src/main.c    ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  29:Src/main.c    ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
ARM GAS  /tmp/ccERuhj0.s 			page 2


  30:Src/main.c    ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  31:Src/main.c    ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  32:Src/main.c    ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  33:Src/main.c    ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  34:Src/main.c    ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  35:Src/main.c    ****   *
  36:Src/main.c    ****   ******************************************************************************
  37:Src/main.c    ****   */
  38:Src/main.c    **** 
  39:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
  40:Src/main.c    **** #include "main.h"
  41:Src/main.c    **** #include "stm32f4xx_hal.h"
  42:Src/main.c    **** 
  43:Src/main.c    **** /* USER CODE BEGIN Includes */
  44:Src/main.c    **** #include "xl_320.h"
  45:Src/main.c    **** /* USER CODE END Includes */
  46:Src/main.c    **** 
  47:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  48:Src/main.c    **** UART_HandleTypeDef huart1;
  49:Src/main.c    **** 
  50:Src/main.c    **** /* USER CODE BEGIN PV */
  51:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  52:Src/main.c    **** #define CONFIG 0
  53:Src/main.c    **** /* USER CODE END PV */
  54:Src/main.c    **** 
  55:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  56:Src/main.c    **** void SystemClock_Config(void);
  57:Src/main.c    **** static void MX_GPIO_Init(void);
  58:Src/main.c    **** static void MX_USART1_UART_Init(void);
  59:Src/main.c    **** 
  60:Src/main.c    **** /* USER CODE BEGIN PFP */
  61:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  62:Src/main.c    **** 
  63:Src/main.c    **** /* USER CODE END PFP */
  64:Src/main.c    **** 
  65:Src/main.c    **** /* USER CODE BEGIN 0 */
  66:Src/main.c    **** XL_Interface interface;
  67:Src/main.c    **** 
  68:Src/main.c    **** uint8_t XL_320_Send_HAL(uint8_t *data, uint16_t size, uint32_t timeout){
  30              		.loc 1 68 0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              	.LVL0:
  35 0000 08B5     		push	{r3, lr}
  36              	.LCFI0:
  37              		.cfi_def_cfa_offset 8
  38              		.cfi_offset 3, -8
  39              		.cfi_offset 14, -4
  69:Src/main.c    ****   HAL_StatusTypeDef status = HAL_UART_Transmit(&huart1, data, size, timeout);
  40              		.loc 1 69 0
  41 0002 1346     		mov	r3, r2
  42 0004 0A46     		mov	r2, r1
  43              	.LVL1:
  44 0006 0146     		mov	r1, r0
  45              	.LVL2:
  46 0008 0348     		ldr	r0, .L3
ARM GAS  /tmp/ccERuhj0.s 			page 3


  47              	.LVL3:
  48 000a FFF7FEFF 		bl	HAL_UART_Transmit
  49              	.LVL4:
  70:Src/main.c    ****   return (status==HAL_OK)?0:1;
  71:Src/main.c    **** }
  50              		.loc 1 71 0
  51 000e 0030     		adds	r0, r0, #0
  52              	.LVL5:
  53 0010 18BF     		it	ne
  54 0012 0120     		movne	r0, #1
  55 0014 08BD     		pop	{r3, pc}
  56              	.L4:
  57 0016 00BF     		.align	2
  58              	.L3:
  59 0018 00000000 		.word	huart1
  60              		.cfi_endproc
  61              	.LFE124:
  63              		.section	.text.XL_320_Set_Direction_HAL,"ax",%progbits
  64              		.align	2
  65              		.global	XL_320_Set_Direction_HAL
  66              		.thumb
  67              		.thumb_func
  69              	XL_320_Set_Direction_HAL:
  70              	.LFB125:
  72:Src/main.c    **** 
  73:Src/main.c    **** void XL_320_Set_Direction_HAL(XL_Direction dir){
  71              		.loc 1 73 0
  72              		.cfi_startproc
  73              		@ args = 0, pretend = 0, frame = 0
  74              		@ frame_needed = 0, uses_anonymous_args = 0
  75              	.LVL6:
  76 0000 08B5     		push	{r3, lr}
  77              	.LCFI1:
  78              		.cfi_def_cfa_offset 8
  79              		.cfi_offset 3, -8
  80              		.cfi_offset 14, -4
  74:Src/main.c    ****   HAL_GPIO_WritePin(USART1_DIR_GPIO_Port, USART1_DIR_Pin, (dir==XL_SEND)?GPIO_PIN_SET:GPIO_PIN_RESE
  81              		.loc 1 74 0
  82 0002 B0FA80F2 		clz	r2, r0
  83 0006 5209     		lsrs	r2, r2, #5
  84 0008 4FF40071 		mov	r1, #512
  85 000c 0148     		ldr	r0, .L7
  86              	.LVL7:
  87 000e FFF7FEFF 		bl	HAL_GPIO_WritePin
  88              	.LVL8:
  89 0012 08BD     		pop	{r3, pc}
  90              	.L8:
  91              		.align	2
  92              	.L7:
  93 0014 00080240 		.word	1073874944
  94              		.cfi_endproc
  95              	.LFE125:
  97              		.section	.text.XL_320_Receive_HAL,"ax",%progbits
  98              		.align	2
  99              		.global	XL_320_Receive_HAL
 100              		.thumb
 101              		.thumb_func
ARM GAS  /tmp/ccERuhj0.s 			page 4


 103              	XL_320_Receive_HAL:
 104              	.LFB126:
  75:Src/main.c    **** }
  76:Src/main.c    **** 
  77:Src/main.c    **** uint8_t XL_320_Receive_HAL(uint8_t *buffer, uint16_t size, uint32_t timeout){
 105              		.loc 1 77 0
 106              		.cfi_startproc
 107              		@ args = 0, pretend = 0, frame = 0
 108              		@ frame_needed = 0, uses_anonymous_args = 0
 109              	.LVL9:
 110 0000 08B5     		push	{r3, lr}
 111              	.LCFI2:
 112              		.cfi_def_cfa_offset 8
 113              		.cfi_offset 3, -8
 114              		.cfi_offset 14, -4
  78:Src/main.c    ****   HAL_StatusTypeDef status = HAL_UART_Receive(&huart1, buffer, size, timeout);
 115              		.loc 1 78 0
 116 0002 1346     		mov	r3, r2
 117 0004 0A46     		mov	r2, r1
 118              	.LVL10:
 119 0006 0146     		mov	r1, r0
 120              	.LVL11:
 121 0008 0348     		ldr	r0, .L11
 122              	.LVL12:
 123 000a FFF7FEFF 		bl	HAL_UART_Receive
 124              	.LVL13:
  79:Src/main.c    ****   return (status==HAL_OK)?0:1;
  80:Src/main.c    **** }
 125              		.loc 1 80 0
 126 000e 0030     		adds	r0, r0, #0
 127              	.LVL14:
 128 0010 18BF     		it	ne
 129 0012 0120     		movne	r0, #1
 130 0014 08BD     		pop	{r3, pc}
 131              	.L12:
 132 0016 00BF     		.align	2
 133              	.L11:
 134 0018 00000000 		.word	huart1
 135              		.cfi_endproc
 136              	.LFE126:
 138              		.section	.text.XL_320_Delay_HAL,"ax",%progbits
 139              		.align	2
 140              		.global	XL_320_Delay_HAL
 141              		.thumb
 142              		.thumb_func
 144              	XL_320_Delay_HAL:
 145              	.LFB127:
  81:Src/main.c    **** 
  82:Src/main.c    **** void XL_320_Delay_HAL(uint32_t t){
 146              		.loc 1 82 0
 147              		.cfi_startproc
 148              		@ args = 0, pretend = 0, frame = 0
 149              		@ frame_needed = 0, uses_anonymous_args = 0
 150              	.LVL15:
 151 0000 08B5     		push	{r3, lr}
 152              	.LCFI3:
 153              		.cfi_def_cfa_offset 8
ARM GAS  /tmp/ccERuhj0.s 			page 5


 154              		.cfi_offset 3, -8
 155              		.cfi_offset 14, -4
  83:Src/main.c    ****   HAL_Delay(t);
 156              		.loc 1 83 0
 157 0002 FFF7FEFF 		bl	HAL_Delay
 158              	.LVL16:
 159 0006 08BD     		pop	{r3, pc}
 160              		.cfi_endproc
 161              	.LFE127:
 163              		.section	.text.MX_GPIO_Init,"ax",%progbits
 164              		.align	2
 165              		.thumb
 166              		.thumb_func
 168              	MX_GPIO_Init:
 169              	.LFB131:
  84:Src/main.c    **** }
  85:Src/main.c    **** /* USER CODE END 0 */
  86:Src/main.c    **** 
  87:Src/main.c    **** int main(void)
  88:Src/main.c    **** {
  89:Src/main.c    **** 
  90:Src/main.c    ****   /* USER CODE BEGIN 1 */
  91:Src/main.c    **** 
  92:Src/main.c    ****   /* USER CODE END 1 */
  93:Src/main.c    **** 
  94:Src/main.c    ****   /* MCU Configuration----------------------------------------------------------*/
  95:Src/main.c    **** 
  96:Src/main.c    ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  97:Src/main.c    ****   HAL_Init();
  98:Src/main.c    **** 
  99:Src/main.c    ****   /* USER CODE BEGIN Init */
 100:Src/main.c    **** 
 101:Src/main.c    ****   /* USER CODE END Init */
 102:Src/main.c    **** 
 103:Src/main.c    ****   /* Configure the system clock */
 104:Src/main.c    ****   SystemClock_Config();
 105:Src/main.c    **** 
 106:Src/main.c    ****   /* USER CODE BEGIN SysInit */
 107:Src/main.c    **** 
 108:Src/main.c    ****   /* USER CODE END SysInit */
 109:Src/main.c    **** 
 110:Src/main.c    ****   /* Initialize all configured peripherals */
 111:Src/main.c    ****   MX_GPIO_Init();
 112:Src/main.c    ****   MX_USART1_UART_Init();
 113:Src/main.c    **** 
 114:Src/main.c    ****   /* USER CODE BEGIN 2 */
 115:Src/main.c    **** 
 116:Src/main.c    ****   interface.send = XL_320_Send_HAL;
 117:Src/main.c    ****   interface.set_direction = XL_320_Set_Direction_HAL;
 118:Src/main.c    ****   interface.receive = XL_320_Receive_HAL;
 119:Src/main.c    ****   interface.delay = XL_320_Delay_HAL;
 120:Src/main.c    **** 
 121:Src/main.c    ****   HAL_Delay(1000);
 122:Src/main.c    **** 
 123:Src/main.c    ****   XL broadcast = (XL) {.interface = &interface, .id = XL_BROADCAST};
 124:Src/main.c    **** 
 125:Src/main.c    ****   XL servo[2];
ARM GAS  /tmp/ccERuhj0.s 			page 6


 126:Src/main.c    ****   uint16_t nb_servos = 0;
 127:Src/main.c    **** 
 128:Src/main.c    ****   XL_Discover(&interface, servo, 2, &nb_servos);
 129:Src/main.c    ****   int i;
 130:Src/main.c    ****   for (i=1; i<=nb_servos; i++){
 131:Src/main.c    ****     HAL_GPIO_WritePin(LD2_GPIO_Port, LD2_Pin, 1);
 132:Src/main.c    ****     HAL_Delay(1000);
 133:Src/main.c    ****     HAL_GPIO_WritePin(LD2_GPIO_Port, LD2_Pin, 0);
 134:Src/main.c    ****     HAL_Delay(1000);
 135:Src/main.c    ****   }
 136:Src/main.c    ****   #if CONFIG==1
 137:Src/main.c    ****     XL_Configure_ID(&servo[0],3);
 138:Src/main.c    ****   #endif
 139:Src/main.c    **** 
 140:Src/main.c    ****   XL_Say_Hello(&servo[0]);
 141:Src/main.c    ****   HAL_Delay(1000);
 142:Src/main.c    ****   XL_Say_Hello(&servo[1]);
 143:Src/main.c    **** 
 144:Src/main.c    ****   HAL_Delay(1000);
 145:Src/main.c    **** 
 146:Src/main.c    ****   uint16_t data;
 147:Src/main.c    ****   XL_Power_On(&broadcast, XL_NOW);
 148:Src/main.c    ****   /* USER CODE END 2 */
 149:Src/main.c    **** 
 150:Src/main.c    ****   /* Infinite loop */
 151:Src/main.c    ****   /* USER CODE BEGIN WHILE */
 152:Src/main.c    ****   while (1)
 153:Src/main.c    ****   {
 154:Src/main.c    ****   /* USER CODE END WHILE */
 155:Src/main.c    ****   HAL_Delay(1000);
 156:Src/main.c    ****   //XL_Set_Goal_Position(&servo[1], 400, XL_NOW);
 157:Src/main.c    ****   XL_Set_Goal_Position(&servo[0], 600, XL_NOW);
 158:Src/main.c    ****   HAL_Delay(1000);
 159:Src/main.c    ****   //XL_Set_Goal_Position(&servo[1], 600, XL_NOW);
 160:Src/main.c    ****   XL_Set_Goal_Position(&servo[0], 400, XL_NOW);
 161:Src/main.c    ****   /* USER CODE BEGIN 3 */
 162:Src/main.c    **** 
 163:Src/main.c    ****   }
 164:Src/main.c    ****   /* USER CODE END 3 */
 165:Src/main.c    **** 
 166:Src/main.c    **** }
 167:Src/main.c    **** 
 168:Src/main.c    **** /** System Clock Configuration
 169:Src/main.c    **** */
 170:Src/main.c    **** void SystemClock_Config(void)
 171:Src/main.c    **** {
 172:Src/main.c    **** 
 173:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct;
 174:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct;
 175:Src/main.c    **** 
 176:Src/main.c    ****     /**Configure the main internal regulator output voltage 
 177:Src/main.c    ****     */
 178:Src/main.c    ****   __HAL_RCC_PWR_CLK_ENABLE();
 179:Src/main.c    **** 
 180:Src/main.c    ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE2);
 181:Src/main.c    **** 
 182:Src/main.c    ****     /**Initializes the CPU, AHB and APB busses clocks 
ARM GAS  /tmp/ccERuhj0.s 			page 7


 183:Src/main.c    ****     */
 184:Src/main.c    ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 185:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 186:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = 16;
 187:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 188:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 189:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLM = 16;
 190:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLN = 336;
 191:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV4;
 192:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLQ = 7;
 193:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 194:Src/main.c    ****   {
 195:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 196:Src/main.c    ****   }
 197:Src/main.c    **** 
 198:Src/main.c    ****     /**Initializes the CPU, AHB and APB busses clocks 
 199:Src/main.c    ****     */
 200:Src/main.c    ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 201:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 202:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 203:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 204:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 205:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 206:Src/main.c    **** 
 207:Src/main.c    ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 208:Src/main.c    ****   {
 209:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 210:Src/main.c    ****   }
 211:Src/main.c    **** 
 212:Src/main.c    ****     /**Configure the Systick interrupt time 
 213:Src/main.c    ****     */
 214:Src/main.c    ****   HAL_SYSTICK_Config(HAL_RCC_GetHCLKFreq()/1000);
 215:Src/main.c    **** 
 216:Src/main.c    ****     /**Configure the Systick 
 217:Src/main.c    ****     */
 218:Src/main.c    ****   HAL_SYSTICK_CLKSourceConfig(SYSTICK_CLKSOURCE_HCLK);
 219:Src/main.c    **** 
 220:Src/main.c    ****   /* SysTick_IRQn interrupt configuration */
 221:Src/main.c    ****   HAL_NVIC_SetPriority(SysTick_IRQn, 0, 0);
 222:Src/main.c    **** }
 223:Src/main.c    **** 
 224:Src/main.c    **** /* USART1 init function */
 225:Src/main.c    **** static void MX_USART1_UART_Init(void)
 226:Src/main.c    **** {
 227:Src/main.c    **** 
 228:Src/main.c    ****   huart1.Instance = USART1;
 229:Src/main.c    ****   huart1.Init.BaudRate = 1000000;
 230:Src/main.c    ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 231:Src/main.c    ****   huart1.Init.StopBits = UART_STOPBITS_1;
 232:Src/main.c    ****   huart1.Init.Parity = UART_PARITY_NONE;
 233:Src/main.c    ****   huart1.Init.Mode = UART_MODE_TX_RX;
 234:Src/main.c    ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 235:Src/main.c    ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 236:Src/main.c    ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 237:Src/main.c    ****   {
 238:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 239:Src/main.c    ****   }
ARM GAS  /tmp/ccERuhj0.s 			page 8


 240:Src/main.c    **** 
 241:Src/main.c    **** }
 242:Src/main.c    **** 
 243:Src/main.c    **** /** Configure pins as 
 244:Src/main.c    ****         * Analog 
 245:Src/main.c    ****         * Input 
 246:Src/main.c    ****         * Output
 247:Src/main.c    ****         * EVENT_OUT
 248:Src/main.c    ****         * EXTI
 249:Src/main.c    ****         * Free pins are configured automatically as Analog (this feature is enabled through 
 250:Src/main.c    ****         * the Code Generation settings)
 251:Src/main.c    ****      PA2   ------> USART2_TX
 252:Src/main.c    ****      PA3   ------> USART2_RX
 253:Src/main.c    **** */
 254:Src/main.c    **** static void MX_GPIO_Init(void)
 255:Src/main.c    **** {
 170              		.loc 1 255 0
 171              		.cfi_startproc
 172              		@ args = 0, pretend = 0, frame = 40
 173              		@ frame_needed = 0, uses_anonymous_args = 0
 174 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 175              	.LCFI4:
 176              		.cfi_def_cfa_offset 24
 177              		.cfi_offset 4, -24
 178              		.cfi_offset 5, -20
 179              		.cfi_offset 6, -16
 180              		.cfi_offset 7, -12
 181              		.cfi_offset 8, -8
 182              		.cfi_offset 14, -4
 183 0004 8AB0     		sub	sp, sp, #40
 184              	.LCFI5:
 185              		.cfi_def_cfa_offset 64
 186              	.LBB2:
 256:Src/main.c    **** 
 257:Src/main.c    ****   GPIO_InitTypeDef GPIO_InitStruct;
 258:Src/main.c    **** 
 259:Src/main.c    ****   /* GPIO Ports Clock Enable */
 260:Src/main.c    ****   __HAL_RCC_GPIOC_CLK_ENABLE();
 187              		.loc 1 260 0
 188 0006 0024     		movs	r4, #0
 189 0008 0094     		str	r4, [sp]
 190 000a 494B     		ldr	r3, .L17
 191 000c 1A6B     		ldr	r2, [r3, #48]
 192 000e 42F00402 		orr	r2, r2, #4
 193 0012 1A63     		str	r2, [r3, #48]
 194 0014 1A6B     		ldr	r2, [r3, #48]
 195 0016 02F00402 		and	r2, r2, #4
 196 001a 0092     		str	r2, [sp]
 197 001c 009A     		ldr	r2, [sp]
 198              	.LBE2:
 199              	.LBB3:
 261:Src/main.c    ****   __HAL_RCC_GPIOH_CLK_ENABLE();
 200              		.loc 1 261 0
 201 001e 0194     		str	r4, [sp, #4]
 202 0020 1A6B     		ldr	r2, [r3, #48]
 203 0022 42F08002 		orr	r2, r2, #128
 204 0026 1A63     		str	r2, [r3, #48]
ARM GAS  /tmp/ccERuhj0.s 			page 9


 205 0028 1A6B     		ldr	r2, [r3, #48]
 206 002a 02F08002 		and	r2, r2, #128
 207 002e 0192     		str	r2, [sp, #4]
 208 0030 019A     		ldr	r2, [sp, #4]
 209              	.LBE3:
 210              	.LBB4:
 262:Src/main.c    ****   __HAL_RCC_GPIOA_CLK_ENABLE();
 211              		.loc 1 262 0
 212 0032 0294     		str	r4, [sp, #8]
 213 0034 1A6B     		ldr	r2, [r3, #48]
 214 0036 42F00102 		orr	r2, r2, #1
 215 003a 1A63     		str	r2, [r3, #48]
 216 003c 1A6B     		ldr	r2, [r3, #48]
 217 003e 02F00102 		and	r2, r2, #1
 218 0042 0292     		str	r2, [sp, #8]
 219 0044 029A     		ldr	r2, [sp, #8]
 220              	.LBE4:
 221              	.LBB5:
 263:Src/main.c    ****   __HAL_RCC_GPIOB_CLK_ENABLE();
 222              		.loc 1 263 0
 223 0046 0394     		str	r4, [sp, #12]
 224 0048 1A6B     		ldr	r2, [r3, #48]
 225 004a 42F00202 		orr	r2, r2, #2
 226 004e 1A63     		str	r2, [r3, #48]
 227 0050 1A6B     		ldr	r2, [r3, #48]
 228 0052 02F00202 		and	r2, r2, #2
 229 0056 0392     		str	r2, [sp, #12]
 230 0058 039A     		ldr	r2, [sp, #12]
 231              	.LBE5:
 232              	.LBB6:
 264:Src/main.c    ****   __HAL_RCC_GPIOD_CLK_ENABLE();
 233              		.loc 1 264 0
 234 005a 0494     		str	r4, [sp, #16]
 235 005c 1A6B     		ldr	r2, [r3, #48]
 236 005e 42F00802 		orr	r2, r2, #8
 237 0062 1A63     		str	r2, [r3, #48]
 238 0064 1B6B     		ldr	r3, [r3, #48]
 239 0066 03F00803 		and	r3, r3, #8
 240 006a 0493     		str	r3, [sp, #16]
 241 006c 049B     		ldr	r3, [sp, #16]
 242              	.LBE6:
 265:Src/main.c    **** 
 266:Src/main.c    ****   /*Configure GPIO pin Output Level */
 267:Src/main.c    ****   HAL_GPIO_WritePin(LD2_GPIO_Port, LD2_Pin, GPIO_PIN_RESET);
 243              		.loc 1 267 0
 244 006e 314F     		ldr	r7, .L17+4
 245 0070 2246     		mov	r2, r4
 246 0072 2021     		movs	r1, #32
 247 0074 3846     		mov	r0, r7
 248 0076 FFF7FEFF 		bl	HAL_GPIO_WritePin
 249              	.LVL17:
 268:Src/main.c    **** 
 269:Src/main.c    ****   /*Configure GPIO pin Output Level */
 270:Src/main.c    ****   HAL_GPIO_WritePin(USART1_DIR_GPIO_Port, USART1_DIR_Pin, GPIO_PIN_RESET);
 250              		.loc 1 270 0
 251 007a 2F4E     		ldr	r6, .L17+8
 252 007c 2246     		mov	r2, r4
ARM GAS  /tmp/ccERuhj0.s 			page 10


 253 007e 4FF40071 		mov	r1, #512
 254 0082 3046     		mov	r0, r6
 255 0084 FFF7FEFF 		bl	HAL_GPIO_WritePin
 256              	.LVL18:
 271:Src/main.c    **** 
 272:Src/main.c    ****   /*Configure GPIO pin : B1_Pin */
 273:Src/main.c    ****   GPIO_InitStruct.Pin = B1_Pin;
 257              		.loc 1 273 0
 258 0088 4FF40053 		mov	r3, #8192
 259 008c 0593     		str	r3, [sp, #20]
 274:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_IT_FALLING;
 260              		.loc 1 274 0
 261 008e 2B4B     		ldr	r3, .L17+12
 262 0090 0693     		str	r3, [sp, #24]
 275:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 263              		.loc 1 275 0
 264 0092 0794     		str	r4, [sp, #28]
 276:Src/main.c    ****   HAL_GPIO_Init(B1_GPIO_Port, &GPIO_InitStruct);
 265              		.loc 1 276 0
 266 0094 05A9     		add	r1, sp, #20
 267 0096 3046     		mov	r0, r6
 268 0098 FFF7FEFF 		bl	HAL_GPIO_Init
 269              	.LVL19:
 277:Src/main.c    **** 
 278:Src/main.c    ****   /*Configure GPIO pins : PC0 PC1 PC2 PC3 
 279:Src/main.c    ****                            PC4 PC5 PC6 PC7 
 280:Src/main.c    ****                            PC8 PC10 PC11 PC12 */
 281:Src/main.c    ****   GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3 
 270              		.loc 1 281 0
 271 009c 41F6FF53 		movw	r3, #7679
 272 00a0 0593     		str	r3, [sp, #20]
 282:Src/main.c    ****                           |GPIO_PIN_4|GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7 
 283:Src/main.c    ****                           |GPIO_PIN_8|GPIO_PIN_10|GPIO_PIN_11|GPIO_PIN_12;
 284:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 273              		.loc 1 284 0
 274 00a2 0325     		movs	r5, #3
 275 00a4 0695     		str	r5, [sp, #24]
 285:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 276              		.loc 1 285 0
 277 00a6 0794     		str	r4, [sp, #28]
 286:Src/main.c    ****   HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 278              		.loc 1 286 0
 279 00a8 05A9     		add	r1, sp, #20
 280 00aa 3046     		mov	r0, r6
 281 00ac FFF7FEFF 		bl	HAL_GPIO_Init
 282              	.LVL20:
 287:Src/main.c    **** 
 288:Src/main.c    ****   /*Configure GPIO pins : PA0 PA1 PA4 PA6 
 289:Src/main.c    ****                            PA7 PA8 PA11 PA12 
 290:Src/main.c    ****                            PA15 */
 291:Src/main.c    ****   GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_4|GPIO_PIN_6 
 283              		.loc 1 291 0
 284 00b0 49F6D313 		movw	r3, #39379
 285 00b4 0593     		str	r3, [sp, #20]
 292:Src/main.c    ****                           |GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_11|GPIO_PIN_12 
 293:Src/main.c    ****                           |GPIO_PIN_15;
 294:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
ARM GAS  /tmp/ccERuhj0.s 			page 11


 286              		.loc 1 294 0
 287 00b6 0695     		str	r5, [sp, #24]
 295:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 288              		.loc 1 295 0
 289 00b8 0794     		str	r4, [sp, #28]
 296:Src/main.c    ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 290              		.loc 1 296 0
 291 00ba 05A9     		add	r1, sp, #20
 292 00bc 3846     		mov	r0, r7
 293 00be FFF7FEFF 		bl	HAL_GPIO_Init
 294              	.LVL21:
 297:Src/main.c    **** 
 298:Src/main.c    ****   /*Configure GPIO pins : USART_TX_Pin USART_RX_Pin */
 299:Src/main.c    ****   GPIO_InitStruct.Pin = USART_TX_Pin|USART_RX_Pin;
 295              		.loc 1 299 0
 296 00c2 0C23     		movs	r3, #12
 297 00c4 0593     		str	r3, [sp, #20]
 300:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 298              		.loc 1 300 0
 299 00c6 0223     		movs	r3, #2
 300 00c8 0693     		str	r3, [sp, #24]
 301:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 301              		.loc 1 301 0
 302 00ca 0794     		str	r4, [sp, #28]
 302:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 303              		.loc 1 302 0
 304 00cc 0894     		str	r4, [sp, #32]
 303:Src/main.c    ****   GPIO_InitStruct.Alternate = GPIO_AF7_USART2;
 305              		.loc 1 303 0
 306 00ce 0723     		movs	r3, #7
 307 00d0 0993     		str	r3, [sp, #36]
 304:Src/main.c    ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 308              		.loc 1 304 0
 309 00d2 05A9     		add	r1, sp, #20
 310 00d4 3846     		mov	r0, r7
 311 00d6 FFF7FEFF 		bl	HAL_GPIO_Init
 312              	.LVL22:
 305:Src/main.c    **** 
 306:Src/main.c    ****   /*Configure GPIO pin : LD2_Pin */
 307:Src/main.c    ****   GPIO_InitStruct.Pin = LD2_Pin;
 313              		.loc 1 307 0
 314 00da 2023     		movs	r3, #32
 315 00dc 0593     		str	r3, [sp, #20]
 308:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 316              		.loc 1 308 0
 317 00de 4FF00108 		mov	r8, #1
 318 00e2 CDF81880 		str	r8, [sp, #24]
 309:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 319              		.loc 1 309 0
 320 00e6 0794     		str	r4, [sp, #28]
 310:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 321              		.loc 1 310 0
 322 00e8 0894     		str	r4, [sp, #32]
 311:Src/main.c    ****   HAL_GPIO_Init(LD2_GPIO_Port, &GPIO_InitStruct);
 323              		.loc 1 311 0
 324 00ea 05A9     		add	r1, sp, #20
 325 00ec 3846     		mov	r0, r7
ARM GAS  /tmp/ccERuhj0.s 			page 12


 326 00ee FFF7FEFF 		bl	HAL_GPIO_Init
 327              	.LVL23:
 312:Src/main.c    **** 
 313:Src/main.c    ****   /*Configure GPIO pins : PB0 PB1 PB2 PB10 
 314:Src/main.c    ****                            PB12 PB13 PB14 PB15 
 315:Src/main.c    ****                            PB4 PB5 PB6 PB7 
 316:Src/main.c    ****                            PB8 PB9 */
 317:Src/main.c    ****   GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_10 
 328              		.loc 1 317 0
 329 00f2 4FF2F773 		movw	r3, #63479
 330 00f6 0593     		str	r3, [sp, #20]
 318:Src/main.c    ****                           |GPIO_PIN_12|GPIO_PIN_13|GPIO_PIN_14|GPIO_PIN_15 
 319:Src/main.c    ****                           |GPIO_PIN_4|GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7 
 320:Src/main.c    ****                           |GPIO_PIN_8|GPIO_PIN_9;
 321:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 331              		.loc 1 321 0
 332 00f8 0695     		str	r5, [sp, #24]
 322:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 333              		.loc 1 322 0
 334 00fa 0794     		str	r4, [sp, #28]
 323:Src/main.c    ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 335              		.loc 1 323 0
 336 00fc 05A9     		add	r1, sp, #20
 337 00fe 1048     		ldr	r0, .L17+16
 338 0100 FFF7FEFF 		bl	HAL_GPIO_Init
 339              	.LVL24:
 324:Src/main.c    **** 
 325:Src/main.c    ****   /*Configure GPIO pin : USART1_DIR_Pin */
 326:Src/main.c    ****   GPIO_InitStruct.Pin = USART1_DIR_Pin;
 340              		.loc 1 326 0
 341 0104 4FF40073 		mov	r3, #512
 342 0108 0593     		str	r3, [sp, #20]
 327:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 343              		.loc 1 327 0
 344 010a CDF81880 		str	r8, [sp, #24]
 328:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 345              		.loc 1 328 0
 346 010e 0794     		str	r4, [sp, #28]
 329:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 347              		.loc 1 329 0
 348 0110 0894     		str	r4, [sp, #32]
 330:Src/main.c    ****   HAL_GPIO_Init(USART1_DIR_GPIO_Port, &GPIO_InitStruct);
 349              		.loc 1 330 0
 350 0112 05A9     		add	r1, sp, #20
 351 0114 3046     		mov	r0, r6
 352 0116 FFF7FEFF 		bl	HAL_GPIO_Init
 353              	.LVL25:
 331:Src/main.c    **** 
 332:Src/main.c    ****   /*Configure GPIO pin : PD2 */
 333:Src/main.c    ****   GPIO_InitStruct.Pin = GPIO_PIN_2;
 354              		.loc 1 333 0
 355 011a 0423     		movs	r3, #4
 356 011c 0593     		str	r3, [sp, #20]
 334:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 357              		.loc 1 334 0
 358 011e 0695     		str	r5, [sp, #24]
 335:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
ARM GAS  /tmp/ccERuhj0.s 			page 13


 359              		.loc 1 335 0
 360 0120 0794     		str	r4, [sp, #28]
 336:Src/main.c    ****   HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 361              		.loc 1 336 0
 362 0122 05A9     		add	r1, sp, #20
 363 0124 0748     		ldr	r0, .L17+20
 364 0126 FFF7FEFF 		bl	HAL_GPIO_Init
 365              	.LVL26:
 337:Src/main.c    **** 
 338:Src/main.c    **** }
 366              		.loc 1 338 0
 367 012a 0AB0     		add	sp, sp, #40
 368              	.LCFI6:
 369              		.cfi_def_cfa_offset 24
 370              		@ sp needed
 371 012c BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 372              	.L18:
 373              		.align	2
 374              	.L17:
 375 0130 00380240 		.word	1073887232
 376 0134 00000240 		.word	1073872896
 377 0138 00080240 		.word	1073874944
 378 013c 00002110 		.word	270598144
 379 0140 00040240 		.word	1073873920
 380 0144 000C0240 		.word	1073875968
 381              		.cfi_endproc
 382              	.LFE131:
 384              		.section	.text._Error_Handler,"ax",%progbits
 385              		.align	2
 386              		.global	_Error_Handler
 387              		.thumb
 388              		.thumb_func
 390              	_Error_Handler:
 391              	.LFB132:
 339:Src/main.c    **** 
 340:Src/main.c    **** /* USER CODE BEGIN 4 */
 341:Src/main.c    **** 
 342:Src/main.c    **** /* USER CODE END 4 */
 343:Src/main.c    **** 
 344:Src/main.c    **** /**
 345:Src/main.c    ****   * @brief  This function is executed in case of error occurrence.
 346:Src/main.c    ****   * @param  None
 347:Src/main.c    ****   * @retval None
 348:Src/main.c    ****   */
 349:Src/main.c    **** void _Error_Handler(char * file, int line)
 350:Src/main.c    **** {
 392              		.loc 1 350 0
 393              		.cfi_startproc
 394              		@ Volatile: function does not return.
 395              		@ args = 0, pretend = 0, frame = 0
 396              		@ frame_needed = 0, uses_anonymous_args = 0
 397              		@ link register save eliminated.
 398              	.LVL27:
 399              	.L20:
 400 0000 FEE7     		b	.L20
 401              		.cfi_endproc
 402              	.LFE132:
ARM GAS  /tmp/ccERuhj0.s 			page 14


 404 0002 00BF     		.section	.text.MX_USART1_UART_Init,"ax",%progbits
 405              		.align	2
 406              		.thumb
 407              		.thumb_func
 409              	MX_USART1_UART_Init:
 410              	.LFB130:
 226:Src/main.c    **** 
 411              		.loc 1 226 0
 412              		.cfi_startproc
 413              		@ args = 0, pretend = 0, frame = 0
 414              		@ frame_needed = 0, uses_anonymous_args = 0
 226:Src/main.c    **** 
 415              		.loc 1 226 0
 416 0000 08B5     		push	{r3, lr}
 417              	.LCFI7:
 418              		.cfi_def_cfa_offset 8
 419              		.cfi_offset 3, -8
 420              		.cfi_offset 14, -4
 228:Src/main.c    ****   huart1.Init.BaudRate = 1000000;
 421              		.loc 1 228 0
 422 0002 0A48     		ldr	r0, .L24
 423 0004 0A4B     		ldr	r3, .L24+4
 424 0006 0360     		str	r3, [r0]
 229:Src/main.c    ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 425              		.loc 1 229 0
 426 0008 0A4B     		ldr	r3, .L24+8
 427 000a 4360     		str	r3, [r0, #4]
 230:Src/main.c    ****   huart1.Init.StopBits = UART_STOPBITS_1;
 428              		.loc 1 230 0
 429 000c 0023     		movs	r3, #0
 430 000e 8360     		str	r3, [r0, #8]
 231:Src/main.c    ****   huart1.Init.Parity = UART_PARITY_NONE;
 431              		.loc 1 231 0
 432 0010 C360     		str	r3, [r0, #12]
 232:Src/main.c    ****   huart1.Init.Mode = UART_MODE_TX_RX;
 433              		.loc 1 232 0
 434 0012 0361     		str	r3, [r0, #16]
 233:Src/main.c    ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 435              		.loc 1 233 0
 436 0014 0C22     		movs	r2, #12
 437 0016 4261     		str	r2, [r0, #20]
 234:Src/main.c    ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 438              		.loc 1 234 0
 439 0018 8361     		str	r3, [r0, #24]
 235:Src/main.c    ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 440              		.loc 1 235 0
 441 001a C361     		str	r3, [r0, #28]
 236:Src/main.c    ****   {
 442              		.loc 1 236 0
 443 001c FFF7FEFF 		bl	HAL_UART_Init
 444              	.LVL28:
 445 0020 18B1     		cbz	r0, .L21
 238:Src/main.c    ****   }
 446              		.loc 1 238 0
 447 0022 EE21     		movs	r1, #238
 448 0024 0448     		ldr	r0, .L24+12
 449 0026 FFF7FEFF 		bl	_Error_Handler
ARM GAS  /tmp/ccERuhj0.s 			page 15


 450              	.LVL29:
 451              	.L21:
 452 002a 08BD     		pop	{r3, pc}
 453              	.L25:
 454              		.align	2
 455              	.L24:
 456 002c 00000000 		.word	huart1
 457 0030 00100140 		.word	1073811456
 458 0034 40420F00 		.word	1000000
 459 0038 00000000 		.word	.LC1
 460              		.cfi_endproc
 461              	.LFE130:
 463              		.section	.text.SystemClock_Config,"ax",%progbits
 464              		.align	2
 465              		.global	SystemClock_Config
 466              		.thumb
 467              		.thumb_func
 469              	SystemClock_Config:
 470              	.LFB129:
 171:Src/main.c    **** 
 471              		.loc 1 171 0
 472              		.cfi_startproc
 473              		@ args = 0, pretend = 0, frame = 80
 474              		@ frame_needed = 0, uses_anonymous_args = 0
 475 0000 00B5     		push	{lr}
 476              	.LCFI8:
 477              		.cfi_def_cfa_offset 4
 478              		.cfi_offset 14, -4
 479 0002 95B0     		sub	sp, sp, #84
 480              	.LCFI9:
 481              		.cfi_def_cfa_offset 88
 482              	.LBB7:
 178:Src/main.c    **** 
 483              		.loc 1 178 0
 484 0004 0022     		movs	r2, #0
 485 0006 0192     		str	r2, [sp, #4]
 486 0008 2A4B     		ldr	r3, .L30
 487 000a 196C     		ldr	r1, [r3, #64]
 488 000c 41F08051 		orr	r1, r1, #268435456
 489 0010 1964     		str	r1, [r3, #64]
 490 0012 1B6C     		ldr	r3, [r3, #64]
 491 0014 03F08053 		and	r3, r3, #268435456
 492 0018 0193     		str	r3, [sp, #4]
 493 001a 019B     		ldr	r3, [sp, #4]
 494              	.LBE7:
 495              	.LBB8:
 180:Src/main.c    **** 
 496              		.loc 1 180 0
 497 001c 0292     		str	r2, [sp, #8]
 498 001e 2649     		ldr	r1, .L30+4
 499 0020 0B68     		ldr	r3, [r1]
 500 0022 23F44043 		bic	r3, r3, #49152
 501 0026 43F40043 		orr	r3, r3, #32768
 502 002a 0B60     		str	r3, [r1]
 503 002c 0B68     		ldr	r3, [r1]
 504 002e 03F44043 		and	r3, r3, #49152
 505 0032 0293     		str	r3, [sp, #8]
ARM GAS  /tmp/ccERuhj0.s 			page 16


 506 0034 029B     		ldr	r3, [sp, #8]
 507              	.LBE8:
 184:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 508              		.loc 1 184 0
 509 0036 0221     		movs	r1, #2
 510 0038 0891     		str	r1, [sp, #32]
 185:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = 16;
 511              		.loc 1 185 0
 512 003a 0123     		movs	r3, #1
 513 003c 0B93     		str	r3, [sp, #44]
 186:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 514              		.loc 1 186 0
 515 003e 1023     		movs	r3, #16
 516 0040 0C93     		str	r3, [sp, #48]
 187:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 517              		.loc 1 187 0
 518 0042 0E91     		str	r1, [sp, #56]
 188:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLM = 16;
 519              		.loc 1 188 0
 520 0044 0F92     		str	r2, [sp, #60]
 189:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLN = 336;
 521              		.loc 1 189 0
 522 0046 1093     		str	r3, [sp, #64]
 190:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV4;
 523              		.loc 1 190 0
 524 0048 4FF4A873 		mov	r3, #336
 525 004c 1193     		str	r3, [sp, #68]
 191:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLQ = 7;
 526              		.loc 1 191 0
 527 004e 0423     		movs	r3, #4
 528 0050 1293     		str	r3, [sp, #72]
 192:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 529              		.loc 1 192 0
 530 0052 0723     		movs	r3, #7
 531 0054 1393     		str	r3, [sp, #76]
 193:Src/main.c    ****   {
 532              		.loc 1 193 0
 533 0056 08A8     		add	r0, sp, #32
 534 0058 FFF7FEFF 		bl	HAL_RCC_OscConfig
 535              	.LVL30:
 536 005c 18B1     		cbz	r0, .L27
 195:Src/main.c    ****   }
 537              		.loc 1 195 0
 538 005e C321     		movs	r1, #195
 539 0060 1648     		ldr	r0, .L30+8
 540 0062 FFF7FEFF 		bl	_Error_Handler
 541              	.LVL31:
 542              	.L27:
 200:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 543              		.loc 1 200 0
 544 0066 0F23     		movs	r3, #15
 545 0068 0393     		str	r3, [sp, #12]
 202:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 546              		.loc 1 202 0
 547 006a 0221     		movs	r1, #2
 548 006c 0491     		str	r1, [sp, #16]
 203:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
ARM GAS  /tmp/ccERuhj0.s 			page 17


 549              		.loc 1 203 0
 550 006e 0023     		movs	r3, #0
 551 0070 0593     		str	r3, [sp, #20]
 204:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 552              		.loc 1 204 0
 553 0072 4FF48052 		mov	r2, #4096
 554 0076 0692     		str	r2, [sp, #24]
 205:Src/main.c    **** 
 555              		.loc 1 205 0
 556 0078 0793     		str	r3, [sp, #28]
 207:Src/main.c    ****   {
 557              		.loc 1 207 0
 558 007a 03A8     		add	r0, sp, #12
 559 007c FFF7FEFF 		bl	HAL_RCC_ClockConfig
 560              	.LVL32:
 561 0080 18B1     		cbz	r0, .L28
 209:Src/main.c    ****   }
 562              		.loc 1 209 0
 563 0082 D121     		movs	r1, #209
 564 0084 0D48     		ldr	r0, .L30+8
 565 0086 FFF7FEFF 		bl	_Error_Handler
 566              	.LVL33:
 567              	.L28:
 214:Src/main.c    **** 
 568              		.loc 1 214 0
 569 008a FFF7FEFF 		bl	HAL_RCC_GetHCLKFreq
 570              	.LVL34:
 571 008e 0C4B     		ldr	r3, .L30+12
 572 0090 A3FB0030 		umull	r3, r0, r3, r0
 573 0094 8009     		lsrs	r0, r0, #6
 574 0096 FFF7FEFF 		bl	HAL_SYSTICK_Config
 575              	.LVL35:
 218:Src/main.c    **** 
 576              		.loc 1 218 0
 577 009a 0420     		movs	r0, #4
 578 009c FFF7FEFF 		bl	HAL_SYSTICK_CLKSourceConfig
 579              	.LVL36:
 221:Src/main.c    **** }
 580              		.loc 1 221 0
 581 00a0 0022     		movs	r2, #0
 582 00a2 1146     		mov	r1, r2
 583 00a4 4FF0FF30 		mov	r0, #-1
 584 00a8 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 585              	.LVL37:
 222:Src/main.c    **** 
 586              		.loc 1 222 0
 587 00ac 15B0     		add	sp, sp, #84
 588              	.LCFI10:
 589              		.cfi_def_cfa_offset 4
 590              		@ sp needed
 591 00ae 5DF804FB 		ldr	pc, [sp], #4
 592              	.L31:
 593 00b2 00BF     		.align	2
 594              	.L30:
 595 00b4 00380240 		.word	1073887232
 596 00b8 00700040 		.word	1073770496
 597 00bc 00000000 		.word	.LC1
ARM GAS  /tmp/ccERuhj0.s 			page 18


 598 00c0 D34D6210 		.word	274877907
 599              		.cfi_endproc
 600              	.LFE129:
 602              		.section	.text.main,"ax",%progbits
 603              		.align	2
 604              		.global	main
 605              		.thumb
 606              		.thumb_func
 608              	main:
 609              	.LFB128:
  88:Src/main.c    **** 
 610              		.loc 1 88 0
 611              		.cfi_startproc
 612              		@ args = 0, pretend = 0, frame = 32
 613              		@ frame_needed = 0, uses_anonymous_args = 0
 614 0000 30B5     		push	{r4, r5, lr}
 615              	.LCFI11:
 616              		.cfi_def_cfa_offset 12
 617              		.cfi_offset 4, -12
 618              		.cfi_offset 5, -8
 619              		.cfi_offset 14, -4
 620 0002 89B0     		sub	sp, sp, #36
 621              	.LCFI12:
 622              		.cfi_def_cfa_offset 48
  97:Src/main.c    **** 
 623              		.loc 1 97 0
 624 0004 FFF7FEFF 		bl	HAL_Init
 625              	.LVL38:
 104:Src/main.c    **** 
 626              		.loc 1 104 0
 627 0008 FFF7FEFF 		bl	SystemClock_Config
 628              	.LVL39:
 111:Src/main.c    ****   MX_USART1_UART_Init();
 629              		.loc 1 111 0
 630 000c FFF7FEFF 		bl	MX_GPIO_Init
 631              	.LVL40:
 112:Src/main.c    **** 
 632              		.loc 1 112 0
 633 0010 FFF7FEFF 		bl	MX_USART1_UART_Init
 634              	.LVL41:
 116:Src/main.c    ****   interface.set_direction = XL_320_Set_Direction_HAL;
 635              		.loc 1 116 0
 636 0014 2D4C     		ldr	r4, .L37
 637 0016 2E4B     		ldr	r3, .L37+4
 638 0018 2360     		str	r3, [r4]
 117:Src/main.c    ****   interface.receive = XL_320_Receive_HAL;
 639              		.loc 1 117 0
 640 001a 2E4B     		ldr	r3, .L37+8
 641 001c A360     		str	r3, [r4, #8]
 118:Src/main.c    ****   interface.delay = XL_320_Delay_HAL;
 642              		.loc 1 118 0
 643 001e 2E4B     		ldr	r3, .L37+12
 644 0020 6360     		str	r3, [r4, #4]
 119:Src/main.c    **** 
 645              		.loc 1 119 0
 646 0022 2E4B     		ldr	r3, .L37+16
 647 0024 E360     		str	r3, [r4, #12]
ARM GAS  /tmp/ccERuhj0.s 			page 19


 121:Src/main.c    **** 
 648              		.loc 1 121 0
 649 0026 4FF47A70 		mov	r0, #1000
 650 002a FFF7FEFF 		bl	HAL_Delay
 651              	.LVL42:
 123:Src/main.c    **** 
 652              		.loc 1 123 0
 653 002e 2C4B     		ldr	r3, .L37+20
 654 0030 93E80300 		ldmia	r3, {r0, r1}
 655 0034 08AB     		add	r3, sp, #32
 656 0036 03E90300 		stmdb	r3, {r0, r1}
 126:Src/main.c    **** 
 657              		.loc 1 126 0
 658 003a 0022     		movs	r2, #0
 659 003c 23F81A2D 		strh	r2, [r3, #-26]!	@ movhi
 128:Src/main.c    ****   int i;
 660              		.loc 1 128 0
 661 0040 0222     		movs	r2, #2
 662 0042 02A9     		add	r1, sp, #8
 663 0044 2046     		mov	r0, r4
 664 0046 FFF7FEFF 		bl	XL_Discover
 665              	.LVL43:
 130:Src/main.c    ****     HAL_GPIO_WritePin(LD2_GPIO_Port, LD2_Pin, 1);
 666              		.loc 1 130 0
 667 004a 0124     		movs	r4, #1
 668 004c 13E0     		b	.L33
 669              	.LVL44:
 670              	.L34:
 131:Src/main.c    ****     HAL_Delay(1000);
 671              		.loc 1 131 0 discriminator 3
 672 004e 254D     		ldr	r5, .L37+24
 673 0050 0122     		movs	r2, #1
 674 0052 2021     		movs	r1, #32
 675 0054 2846     		mov	r0, r5
 676 0056 FFF7FEFF 		bl	HAL_GPIO_WritePin
 677              	.LVL45:
 132:Src/main.c    ****     HAL_GPIO_WritePin(LD2_GPIO_Port, LD2_Pin, 0);
 678              		.loc 1 132 0 discriminator 3
 679 005a 4FF47A70 		mov	r0, #1000
 680 005e FFF7FEFF 		bl	HAL_Delay
 681              	.LVL46:
 133:Src/main.c    ****     HAL_Delay(1000);
 682              		.loc 1 133 0 discriminator 3
 683 0062 0022     		movs	r2, #0
 684 0064 2021     		movs	r1, #32
 685 0066 2846     		mov	r0, r5
 686 0068 FFF7FEFF 		bl	HAL_GPIO_WritePin
 687              	.LVL47:
 134:Src/main.c    ****   }
 688              		.loc 1 134 0 discriminator 3
 689 006c 4FF47A70 		mov	r0, #1000
 690 0070 FFF7FEFF 		bl	HAL_Delay
 691              	.LVL48:
 130:Src/main.c    ****     HAL_GPIO_WritePin(LD2_GPIO_Port, LD2_Pin, 1);
 692              		.loc 1 130 0 discriminator 3
 693 0074 0134     		adds	r4, r4, #1
 694              	.LVL49:
ARM GAS  /tmp/ccERuhj0.s 			page 20


 695              	.L33:
 130:Src/main.c    ****     HAL_GPIO_WritePin(LD2_GPIO_Port, LD2_Pin, 1);
 696              		.loc 1 130 0 is_stmt 0 discriminator 1
 697 0076 BDF80630 		ldrh	r3, [sp, #6]
 698 007a 9C42     		cmp	r4, r3
 699 007c E7DD     		ble	.L34
 140:Src/main.c    ****   HAL_Delay(1000);
 700              		.loc 1 140 0 is_stmt 1
 701 007e 02A8     		add	r0, sp, #8
 702 0080 FFF7FEFF 		bl	XL_Say_Hello
 703              	.LVL50:
 141:Src/main.c    ****   XL_Say_Hello(&servo[1]);
 704              		.loc 1 141 0
 705 0084 4FF47A70 		mov	r0, #1000
 706 0088 FFF7FEFF 		bl	HAL_Delay
 707              	.LVL51:
 142:Src/main.c    **** 
 708              		.loc 1 142 0
 709 008c 04A8     		add	r0, sp, #16
 710 008e FFF7FEFF 		bl	XL_Say_Hello
 711              	.LVL52:
 144:Src/main.c    **** 
 712              		.loc 1 144 0
 713 0092 4FF47A70 		mov	r0, #1000
 714 0096 FFF7FEFF 		bl	HAL_Delay
 715              	.LVL53:
 147:Src/main.c    ****   /* USER CODE END 2 */
 716              		.loc 1 147 0
 717 009a 0121     		movs	r1, #1
 718 009c 06A8     		add	r0, sp, #24
 719 009e FFF7FEFF 		bl	XL_Power_On
 720              	.LVL54:
 721              	.L35:
 155:Src/main.c    ****   //XL_Set_Goal_Position(&servo[1], 400, XL_NOW);
 722              		.loc 1 155 0 discriminator 1
 723 00a2 4FF47A70 		mov	r0, #1000
 724 00a6 FFF7FEFF 		bl	HAL_Delay
 725              	.LVL55:
 157:Src/main.c    ****   HAL_Delay(1000);
 726              		.loc 1 157 0 discriminator 1
 727 00aa 0122     		movs	r2, #1
 728 00ac 4FF41671 		mov	r1, #600
 729 00b0 02A8     		add	r0, sp, #8
 730 00b2 FFF7FEFF 		bl	XL_Set_Goal_Position
 731              	.LVL56:
 158:Src/main.c    ****   //XL_Set_Goal_Position(&servo[1], 600, XL_NOW);
 732              		.loc 1 158 0 discriminator 1
 733 00b6 4FF47A70 		mov	r0, #1000
 734 00ba FFF7FEFF 		bl	HAL_Delay
 735              	.LVL57:
 160:Src/main.c    ****   /* USER CODE BEGIN 3 */
 736              		.loc 1 160 0 discriminator 1
 737 00be 0122     		movs	r2, #1
 738 00c0 4FF4C871 		mov	r1, #400
 739 00c4 02A8     		add	r0, sp, #8
 740 00c6 FFF7FEFF 		bl	XL_Set_Goal_Position
 741              	.LVL58:
ARM GAS  /tmp/ccERuhj0.s 			page 21


 742 00ca EAE7     		b	.L35
 743              	.L38:
 744              		.align	2
 745              	.L37:
 746 00cc 00000000 		.word	interface
 747 00d0 00000000 		.word	XL_320_Send_HAL
 748 00d4 00000000 		.word	XL_320_Set_Direction_HAL
 749 00d8 00000000 		.word	XL_320_Receive_HAL
 750 00dc 00000000 		.word	XL_320_Delay_HAL
 751 00e0 00000000 		.word	.LANCHOR0
 752 00e4 00000240 		.word	1073872896
 753              		.cfi_endproc
 754              	.LFE128:
 756              		.comm	interface,104,4
 757              		.comm	huart1,64,4
 758              		.section	.rodata
 759              		.align	2
 760              		.set	.LANCHOR0,. + 0
 761              	.LC0:
 762 0000 FE       		.byte	-2
 763 0001 000000   		.space	3
 764 0004 00000000 		.word	interface
 765              		.section	.rodata.str1.4,"aMS",%progbits,1
 766              		.align	2
 767              	.LC1:
 768 0000 5372632F 		.ascii	"Src/main.c\000"
 768      6D61696E 
 768      2E6300
 769              		.text
 770              	.Letext0:
 771              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 772              		.file 3 "/usr/include/newlib/sys/_stdint.h"
 773              		.file 4 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f401xe.h"
 774              		.file 5 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 775              		.file 6 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 776              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 777              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 778              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 779              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_uart.h"
 780              		.file 11 "Inc/xl_320.h"
 781              		.file 12 "Drivers/CMSIS/Include/core_cm4.h"
 782              		.file 13 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 783              		.file 14 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_cortex.h"
ARM GAS  /tmp/ccERuhj0.s 			page 22


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
     /tmp/ccERuhj0.s:22     .text.XL_320_Send_HAL:00000000 $t
     /tmp/ccERuhj0.s:27     .text.XL_320_Send_HAL:00000000 XL_320_Send_HAL
     /tmp/ccERuhj0.s:59     .text.XL_320_Send_HAL:00000018 $d
                            *COM*:00000040 huart1
     /tmp/ccERuhj0.s:64     .text.XL_320_Set_Direction_HAL:00000000 $t
     /tmp/ccERuhj0.s:69     .text.XL_320_Set_Direction_HAL:00000000 XL_320_Set_Direction_HAL
     /tmp/ccERuhj0.s:93     .text.XL_320_Set_Direction_HAL:00000014 $d
     /tmp/ccERuhj0.s:98     .text.XL_320_Receive_HAL:00000000 $t
     /tmp/ccERuhj0.s:103    .text.XL_320_Receive_HAL:00000000 XL_320_Receive_HAL
     /tmp/ccERuhj0.s:134    .text.XL_320_Receive_HAL:00000018 $d
     /tmp/ccERuhj0.s:139    .text.XL_320_Delay_HAL:00000000 $t
     /tmp/ccERuhj0.s:144    .text.XL_320_Delay_HAL:00000000 XL_320_Delay_HAL
     /tmp/ccERuhj0.s:164    .text.MX_GPIO_Init:00000000 $t
     /tmp/ccERuhj0.s:168    .text.MX_GPIO_Init:00000000 MX_GPIO_Init
     /tmp/ccERuhj0.s:375    .text.MX_GPIO_Init:00000130 $d
     /tmp/ccERuhj0.s:385    .text._Error_Handler:00000000 $t
     /tmp/ccERuhj0.s:390    .text._Error_Handler:00000000 _Error_Handler
     /tmp/ccERuhj0.s:405    .text.MX_USART1_UART_Init:00000000 $t
     /tmp/ccERuhj0.s:409    .text.MX_USART1_UART_Init:00000000 MX_USART1_UART_Init
     /tmp/ccERuhj0.s:456    .text.MX_USART1_UART_Init:0000002c $d
     /tmp/ccERuhj0.s:464    .text.SystemClock_Config:00000000 $t
     /tmp/ccERuhj0.s:469    .text.SystemClock_Config:00000000 SystemClock_Config
     /tmp/ccERuhj0.s:595    .text.SystemClock_Config:000000b4 $d
     /tmp/ccERuhj0.s:603    .text.main:00000000 $t
     /tmp/ccERuhj0.s:608    .text.main:00000000 main
     /tmp/ccERuhj0.s:746    .text.main:000000cc $d
                            *COM*:00000068 interface
     /tmp/ccERuhj0.s:759    .rodata:00000000 $d
     /tmp/ccERuhj0.s:766    .rodata.str1.4:00000000 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
HAL_UART_Transmit
HAL_GPIO_WritePin
HAL_UART_Receive
HAL_Delay
HAL_GPIO_Init
HAL_UART_Init
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCC_GetHCLKFreq
HAL_SYSTICK_Config
HAL_SYSTICK_CLKSourceConfig
HAL_NVIC_SetPriority
HAL_Init
XL_Discover
XL_Say_Hello
XL_Power_On
XL_Set_Goal_Position
