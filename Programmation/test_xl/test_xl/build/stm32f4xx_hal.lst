ARM GAS  /tmp/ccgtywtP.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 1
   4              		.eabi_attribute 28, 1
   5              		.fpu fpv4-sp-d16
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.thumb
  16              		.syntax unified
  17              		.file	"stm32f4xx_hal.c"
  18              		.text
  19              	.Ltext0:
  20              		.cfi_sections	.debug_frame
  21              		.section	.text.HAL_MspInit,"ax",%progbits
  22              		.align	2
  23              		.weak	HAL_MspInit
  24              		.thumb
  25              		.thumb_func
  27              	HAL_MspInit:
  28              	.LFB126:
  29              		.file 1 "Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c"
   1:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** /**
   2:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   ******************************************************************************
   3:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @file    stm32f4xx_hal.c
   4:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @author  MCD Application Team
   5:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @brief   HAL module driver.
   6:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   *          This is the common part of the HAL initialization
   7:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   *
   8:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   @verbatim
   9:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   ==============================================================================
  10:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****                      ##### How to use this driver #####
  11:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   ==============================================================================
  12:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****     [..]
  13:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****     The common HAL driver contains a set of generic and common APIs that can be
  14:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****     used by the PPP peripheral drivers and the user to start using the HAL. 
  15:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****     [..]
  16:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****     The HAL contains two APIs' categories: 
  17:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****          (+) Common HAL APIs
  18:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****          (+) Services HAL APIs
  19:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
  20:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   @endverbatim
  21:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   ******************************************************************************
  22:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @attention
  23:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   *
  24:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * <h2><center>&copy; COPYRIGHT(c) 2017 STMicroelectronics</center></h2>
  25:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   *
  26:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * Redistribution and use in source and binary forms, with or without modification,
  27:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * are permitted provided that the following conditions are met:
  28:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   *   1. Redistributions of source code must retain the above copyright notice,
  29:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   *      this list of conditions and the following disclaimer.
ARM GAS  /tmp/ccgtywtP.s 			page 2


  30:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  31:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   *      this list of conditions and the following disclaimer in the documentation
  32:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   *      and/or other materials provided with the distribution.
  33:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  34:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   *      may be used to endorse or promote products derived from this software
  35:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   *      without specific prior written permission.
  36:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   *
  37:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  38:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  39:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  40:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  41:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  42:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  43:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  44:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  45:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  46:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  47:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   *
  48:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   ******************************************************************************
  49:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   */ 
  50:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
  51:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** /* Includes ------------------------------------------------------------------*/
  52:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** #include "stm32f4xx_hal.h"
  53:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
  54:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** /** @addtogroup STM32F4xx_HAL_Driver
  55:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @{
  56:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   */
  57:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
  58:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** /** @defgroup HAL HAL
  59:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @brief HAL module driver.
  60:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @{
  61:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   */
  62:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
  63:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** /* Private typedef -----------------------------------------------------------*/
  64:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** /* Private define ------------------------------------------------------------*/
  65:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** /** @addtogroup HAL_Private_Constants
  66:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @{
  67:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   */
  68:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** /**
  69:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @brief STM32F4xx HAL Driver version number V1.7.2
  70:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   */
  71:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** #define __STM32F4xx_HAL_VERSION_MAIN   (0x01U) /*!< [31:24] main version */
  72:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** #define __STM32F4xx_HAL_VERSION_SUB1   (0x07U) /*!< [23:16] sub1 version */
  73:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** #define __STM32F4xx_HAL_VERSION_SUB2   (0x02U) /*!< [15:8]  sub2 version */
  74:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** #define __STM32F4xx_HAL_VERSION_RC     (0x00U) /*!< [7:0]  release candidate */ 
  75:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** #define __STM32F4xx_HAL_VERSION         ((__STM32F4xx_HAL_VERSION_MAIN << 24U)\
  76:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****                                         |(__STM32F4xx_HAL_VERSION_SUB1 << 16U)\
  77:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****                                         |(__STM32F4xx_HAL_VERSION_SUB2 << 8U )\
  78:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****                                         |(__STM32F4xx_HAL_VERSION_RC))
  79:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****                                         
  80:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** #define IDCODE_DEVID_MASK    0x00000FFFU
  81:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
  82:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** /* ------------ RCC registers bit address in the alias region ----------- */
  83:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** #define SYSCFG_OFFSET             (SYSCFG_BASE - PERIPH_BASE)
  84:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** /* ---  MEMRMP Register ---*/ 
  85:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** /* Alias word address of UFB_MODE bit */ 
  86:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** #define MEMRMP_OFFSET             SYSCFG_OFFSET 
ARM GAS  /tmp/ccgtywtP.s 			page 3


  87:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** #define UFB_MODE_BIT_NUMBER       SYSCFG_MEMRMP_UFB_MODE_Pos
  88:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** #define UFB_MODE_BB               (uint32_t)(PERIPH_BB_BASE + (MEMRMP_OFFSET * 32U) + (UFB_MODE_BIT
  89:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
  90:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** /* ---  CMPCR Register ---*/ 
  91:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** /* Alias word address of CMP_PD bit */ 
  92:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** #define CMPCR_OFFSET              (SYSCFG_OFFSET + 0x20U) 
  93:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** #define CMP_PD_BIT_NUMBER         SYSCFG_CMPCR_CMP_PD_Pos
  94:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** #define CMPCR_CMP_PD_BB           (uint32_t)(PERIPH_BB_BASE + (CMPCR_OFFSET * 32U) + (CMP_PD_BIT_NU
  95:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
  96:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** /* ---  MCHDLYCR Register ---*/ 
  97:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** /* Alias word address of BSCKSEL bit */ 
  98:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** #define MCHDLYCR_OFFSET            (SYSCFG_OFFSET + 0x30U) 
  99:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** #define BSCKSEL_BIT_NUMBER         SYSCFG_MCHDLYCR_BSCKSEL_Pos
 100:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** #define MCHDLYCR_BSCKSEL_BB        (uint32_t)(PERIPH_BB_BASE + (MCHDLYCR_OFFSET * 32U) + (BSCKSEL_B
 101:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** /**
 102:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @}
 103:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   */
 104:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
 105:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** /* Private macro -------------------------------------------------------------*/
 106:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** /* Private variables ---------------------------------------------------------*/
 107:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** /** @addtogroup HAL_Private_Variables
 108:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @{
 109:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   */
 110:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** __IO uint32_t uwTick;
 111:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** /**
 112:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @}
 113:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   */
 114:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** /* Private function prototypes -----------------------------------------------*/
 115:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** /* Private functions ---------------------------------------------------------*/
 116:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
 117:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** /** @defgroup HAL_Exported_Functions HAL Exported Functions
 118:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @{
 119:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   */
 120:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
 121:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** /** @defgroup HAL_Exported_Functions_Group1 Initialization and de-initialization Functions 
 122:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****  *  @brief    Initialization and de-initialization functions
 123:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****  *
 124:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** @verbatim    
 125:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****  ===============================================================================
 126:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****               ##### Initialization and de-initialization functions #####
 127:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****  ===============================================================================
 128:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****     [..]  This section provides functions allowing to:
 129:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****       (+) Initializes the Flash interface the NVIC allocation and initial clock 
 130:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****           configuration. It initializes the systick also when timeout is needed 
 131:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****           and the backup domain when enabled.
 132:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****       (+) de-Initializes common part of the HAL
 133:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****       (+) Configure The time base source to have 1ms time base with a dedicated 
 134:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****           Tick interrupt priority. 
 135:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****         (++) Systick timer is used by default as source of time base, but user 
 136:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****              can eventually implement his proper time base source (a general purpose 
 137:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****              timer for example or other time source), keeping in mind that Time base 
 138:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****              duration should be kept 1ms since PPP_TIMEOUT_VALUEs are defined and 
 139:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****              handled in milliseconds basis.
 140:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****         (++) Time base configuration function (HAL_InitTick ()) is called automatically 
 141:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****              at the beginning of the program after reset by HAL_Init() or at any time 
 142:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****              when clock is configured, by HAL_RCC_ClockConfig(). 
 143:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****         (++) Source of time base is configured  to generate interrupts at regular 
ARM GAS  /tmp/ccgtywtP.s 			page 4


 144:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****              time intervals. Care must be taken if HAL_Delay() is called from a 
 145:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****              peripheral ISR process, the Tick interrupt line must have higher priority 
 146:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****             (numerically lower) than the peripheral interrupt. Otherwise the caller 
 147:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****             ISR process will be blocked. 
 148:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****        (++) functions affecting time base configurations are declared as __weak  
 149:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****              to make  override possible  in case of other  implementations in user file.
 150:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** @endverbatim
 151:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @{
 152:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   */
 153:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
 154:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** /**
 155:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @brief  This function is used to initialize the HAL Library; it must be the first 
 156:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   *         instruction to be executed in the main program (before to call any other
 157:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   *         HAL function), it performs the following:
 158:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   *           Configure the Flash prefetch, instruction and Data caches.
 159:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   *           Configures the SysTick to generate an interrupt each 1 millisecond,
 160:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   *           which is clocked by the HSI (at this stage, the clock is not yet
 161:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   *           configured and thus the system is running from the internal HSI at 16 MHz).
 162:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   *           Set NVIC Group Priority to 4.
 163:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   *           Calls the HAL_MspInit() callback function defined in user file 
 164:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   *           "stm32f4xx_hal_msp.c" to do the global low level hardware initialization 
 165:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   *            
 166:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @note   SysTick is used as time base for the HAL_Delay() function, the application
 167:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   *         need to ensure that the SysTick time base is always set to 1 millisecond
 168:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   *         to have correct HAL operation.
 169:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @retval HAL status
 170:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   */
 171:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** HAL_StatusTypeDef HAL_Init(void)
 172:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** {
 173:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   /* Configure Flash prefetch, Instruction cache, Data cache */ 
 174:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** #if (INSTRUCTION_CACHE_ENABLE != 0U)
 175:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****    __HAL_FLASH_INSTRUCTION_CACHE_ENABLE();
 176:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** #endif /* INSTRUCTION_CACHE_ENABLE */
 177:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
 178:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** #if (DATA_CACHE_ENABLE != 0U)
 179:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****    __HAL_FLASH_DATA_CACHE_ENABLE();
 180:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** #endif /* DATA_CACHE_ENABLE */
 181:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
 182:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** #if (PREFETCH_ENABLE != 0U)
 183:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 184:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** #endif /* PREFETCH_ENABLE */
 185:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
 186:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   /* Set Interrupt Group Priority */
 187:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 188:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
 189:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
 190:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   HAL_InitTick(TICK_INT_PRIORITY);
 191:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   
 192:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   /* Init the low level hardware */
 193:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   HAL_MspInit();
 194:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   
 195:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   /* Return function status */
 196:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   return HAL_OK;
 197:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** }
 198:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
 199:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** /**
 200:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @brief  This function de-Initializes common part of the HAL and stops the systick.
ARM GAS  /tmp/ccgtywtP.s 			page 5


 201:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   *         This function is optional.   
 202:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @retval HAL status
 203:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   */
 204:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** HAL_StatusTypeDef HAL_DeInit(void)
 205:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** {
 206:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   /* Reset of all peripherals */
 207:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   __HAL_RCC_APB1_FORCE_RESET();
 208:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   __HAL_RCC_APB1_RELEASE_RESET();
 209:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
 210:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   __HAL_RCC_APB2_FORCE_RESET();
 211:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   __HAL_RCC_APB2_RELEASE_RESET();
 212:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
 213:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   __HAL_RCC_AHB1_FORCE_RESET();
 214:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   __HAL_RCC_AHB1_RELEASE_RESET();
 215:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
 216:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   __HAL_RCC_AHB2_FORCE_RESET();
 217:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   __HAL_RCC_AHB2_RELEASE_RESET();
 218:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
 219:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   __HAL_RCC_AHB3_FORCE_RESET();
 220:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   __HAL_RCC_AHB3_RELEASE_RESET();
 221:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
 222:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   /* De-Init the low level hardware */
 223:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   HAL_MspDeInit();
 224:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****     
 225:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   /* Return function status */
 226:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   return HAL_OK;
 227:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** }
 228:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
 229:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** /**
 230:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @brief  Initializes the MSP.
 231:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @retval None
 232:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   */
 233:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** __weak void HAL_MspInit(void)
 234:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** {
  30              		.loc 1 234 0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
  35 0000 7047     		bx	lr
  36              		.cfi_endproc
  37              	.LFE126:
  39 0002 00BF     		.section	.text.HAL_MspDeInit,"ax",%progbits
  40              		.align	2
  41              		.weak	HAL_MspDeInit
  42              		.thumb
  43              		.thumb_func
  45              	HAL_MspDeInit:
  46              	.LFB127:
 235:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
 236:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****             the HAL_MspInit could be implemented in the user file
 237:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****    */
 238:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** }
 239:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
 240:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** /**
 241:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @brief  DeInitializes the MSP.
 242:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @retval None
ARM GAS  /tmp/ccgtywtP.s 			page 6


 243:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   */
 244:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** __weak void HAL_MspDeInit(void)
 245:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** {
  47              		.loc 1 245 0
  48              		.cfi_startproc
  49              		@ args = 0, pretend = 0, frame = 0
  50              		@ frame_needed = 0, uses_anonymous_args = 0
  51              		@ link register save eliminated.
  52 0000 7047     		bx	lr
  53              		.cfi_endproc
  54              	.LFE127:
  56 0002 00BF     		.section	.text.HAL_DeInit,"ax",%progbits
  57              		.align	2
  58              		.global	HAL_DeInit
  59              		.thumb
  60              		.thumb_func
  62              	HAL_DeInit:
  63              	.LFB125:
 205:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   /* Reset of all peripherals */
  64              		.loc 1 205 0
  65              		.cfi_startproc
  66              		@ args = 0, pretend = 0, frame = 0
  67              		@ frame_needed = 0, uses_anonymous_args = 0
 205:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   /* Reset of all peripherals */
  68              		.loc 1 205 0
  69 0000 10B5     		push	{r4, lr}
  70              	.LCFI0:
  71              		.cfi_def_cfa_offset 8
  72              		.cfi_offset 4, -8
  73              		.cfi_offset 14, -4
 207:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   __HAL_RCC_APB1_RELEASE_RESET();
  74              		.loc 1 207 0
  75 0002 094B     		ldr	r3, .L5
  76 0004 4FF0FF32 		mov	r2, #-1
  77 0008 1A62     		str	r2, [r3, #32]
 208:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
  78              		.loc 1 208 0
  79 000a 0024     		movs	r4, #0
  80 000c 1C62     		str	r4, [r3, #32]
 210:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   __HAL_RCC_APB2_RELEASE_RESET();
  81              		.loc 1 210 0
  82 000e 5A62     		str	r2, [r3, #36]
 211:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
  83              		.loc 1 211 0
  84 0010 5C62     		str	r4, [r3, #36]
 213:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   __HAL_RCC_AHB1_RELEASE_RESET();
  85              		.loc 1 213 0
  86 0012 1A61     		str	r2, [r3, #16]
 214:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
  87              		.loc 1 214 0
  88 0014 1C61     		str	r4, [r3, #16]
 216:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   __HAL_RCC_AHB2_RELEASE_RESET();
  89              		.loc 1 216 0
  90 0016 5A61     		str	r2, [r3, #20]
 217:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
  91              		.loc 1 217 0
  92 0018 5C61     		str	r4, [r3, #20]
ARM GAS  /tmp/ccgtywtP.s 			page 7


 219:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   __HAL_RCC_AHB3_RELEASE_RESET();
  93              		.loc 1 219 0
  94 001a 9A61     		str	r2, [r3, #24]
 220:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
  95              		.loc 1 220 0
  96 001c 9C61     		str	r4, [r3, #24]
 223:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****     
  97              		.loc 1 223 0
  98 001e FFF7FEFF 		bl	HAL_MspDeInit
  99              	.LVL0:
 227:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
 100              		.loc 1 227 0
 101 0022 2046     		mov	r0, r4
 102 0024 10BD     		pop	{r4, pc}
 103              	.L6:
 104 0026 00BF     		.align	2
 105              	.L5:
 106 0028 00380240 		.word	1073887232
 107              		.cfi_endproc
 108              	.LFE125:
 110              		.section	.text.HAL_InitTick,"ax",%progbits
 111              		.align	2
 112              		.weak	HAL_InitTick
 113              		.thumb
 114              		.thumb_func
 116              	HAL_InitTick:
 117              	.LFB128:
 246:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
 247:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****             the HAL_MspDeInit could be implemented in the user file
 248:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****    */ 
 249:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** }
 250:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
 251:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** /**
 252:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @brief This function configures the source of the time base.
 253:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   *        The time source is configured  to have 1ms time base with a dedicated 
 254:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   *        Tick interrupt priority.
 255:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @note This function is called  automatically at the beginning of program after
 256:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   *       reset by HAL_Init() or at any time when clock is reconfigured  by HAL_RCC_ClockConfig().
 257:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @note In the default implementation, SysTick timer is the source of time base. 
 258:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   *       It is used to generate interrupts at regular time intervals. 
 259:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   *       Care must be taken if HAL_Delay() is called from a peripheral ISR process, 
 260:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   *       The the SysTick interrupt must have higher priority (numerically lower) 
 261:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   *       than the peripheral interrupt. Otherwise the caller ISR process will be blocked.
 262:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   *       The function is declared as __weak  to be overwritten  in case of other
 263:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   *       implementation  in user file.
 264:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @param TickPriority Tick interrupt priority.
 265:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @retval HAL status
 266:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   */
 267:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** __weak HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
 268:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** {
 118              		.loc 1 268 0
 119              		.cfi_startproc
 120              		@ args = 0, pretend = 0, frame = 0
 121              		@ frame_needed = 0, uses_anonymous_args = 0
 122              	.LVL1:
 123 0000 10B5     		push	{r4, lr}
 124              	.LCFI1:
ARM GAS  /tmp/ccgtywtP.s 			page 8


 125              		.cfi_def_cfa_offset 8
 126              		.cfi_offset 4, -8
 127              		.cfi_offset 14, -4
 128 0002 0446     		mov	r4, r0
 269:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   /*Configure the SysTick to have interrupt in 1ms time basis*/
 270:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   HAL_SYSTICK_Config(SystemCoreClock/1000U);
 129              		.loc 1 270 0
 130 0004 074B     		ldr	r3, .L9
 131 0006 1B68     		ldr	r3, [r3]
 132 0008 0748     		ldr	r0, .L9+4
 133              	.LVL2:
 134 000a A0FB0330 		umull	r3, r0, r0, r3
 135 000e 8009     		lsrs	r0, r0, #6
 136 0010 FFF7FEFF 		bl	HAL_SYSTICK_Config
 137              	.LVL3:
 271:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
 272:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   /*Configure the SysTick IRQ priority */
 273:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   HAL_NVIC_SetPriority(SysTick_IRQn, TickPriority, 0U);
 138              		.loc 1 273 0
 139 0014 0022     		movs	r2, #0
 140 0016 2146     		mov	r1, r4
 141 0018 4FF0FF30 		mov	r0, #-1
 142 001c FFF7FEFF 		bl	HAL_NVIC_SetPriority
 143              	.LVL4:
 274:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
 275:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   /* Return function status */
 276:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   return HAL_OK;
 277:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** }
 144              		.loc 1 277 0
 145 0020 0020     		movs	r0, #0
 146 0022 10BD     		pop	{r4, pc}
 147              	.LVL5:
 148              	.L10:
 149              		.align	2
 150              	.L9:
 151 0024 00000000 		.word	SystemCoreClock
 152 0028 D34D6210 		.word	274877907
 153              		.cfi_endproc
 154              	.LFE128:
 156              		.section	.text.HAL_Init,"ax",%progbits
 157              		.align	2
 158              		.global	HAL_Init
 159              		.thumb
 160              		.thumb_func
 162              	HAL_Init:
 163              	.LFB124:
 172:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   /* Configure Flash prefetch, Instruction cache, Data cache */ 
 164              		.loc 1 172 0
 165              		.cfi_startproc
 166              		@ args = 0, pretend = 0, frame = 0
 167              		@ frame_needed = 0, uses_anonymous_args = 0
 168 0000 08B5     		push	{r3, lr}
 169              	.LCFI2:
 170              		.cfi_def_cfa_offset 8
 171              		.cfi_offset 3, -8
 172              		.cfi_offset 14, -4
 175:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** #endif /* INSTRUCTION_CACHE_ENABLE */
ARM GAS  /tmp/ccgtywtP.s 			page 9


 173              		.loc 1 175 0
 174 0002 0B4B     		ldr	r3, .L13
 175 0004 1A68     		ldr	r2, [r3]
 176 0006 42F40072 		orr	r2, r2, #512
 177 000a 1A60     		str	r2, [r3]
 179:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** #endif /* DATA_CACHE_ENABLE */
 178              		.loc 1 179 0
 179 000c 1A68     		ldr	r2, [r3]
 180 000e 42F48062 		orr	r2, r2, #1024
 181 0012 1A60     		str	r2, [r3]
 183:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** #endif /* PREFETCH_ENABLE */
 182              		.loc 1 183 0
 183 0014 1A68     		ldr	r2, [r3]
 184 0016 42F48072 		orr	r2, r2, #256
 185 001a 1A60     		str	r2, [r3]
 187:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
 186              		.loc 1 187 0
 187 001c 0320     		movs	r0, #3
 188 001e FFF7FEFF 		bl	HAL_NVIC_SetPriorityGrouping
 189              	.LVL6:
 190:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   
 190              		.loc 1 190 0
 191 0022 0020     		movs	r0, #0
 192 0024 FFF7FEFF 		bl	HAL_InitTick
 193              	.LVL7:
 193:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   
 194              		.loc 1 193 0
 195 0028 FFF7FEFF 		bl	HAL_MspInit
 196              	.LVL8:
 197:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
 197              		.loc 1 197 0
 198 002c 0020     		movs	r0, #0
 199 002e 08BD     		pop	{r3, pc}
 200              	.L14:
 201              		.align	2
 202              	.L13:
 203 0030 003C0240 		.word	1073888256
 204              		.cfi_endproc
 205              	.LFE124:
 207              		.section	.text.HAL_IncTick,"ax",%progbits
 208              		.align	2
 209              		.weak	HAL_IncTick
 210              		.thumb
 211              		.thumb_func
 213              	HAL_IncTick:
 214              	.LFB129:
 278:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
 279:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** /**
 280:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @}
 281:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   */
 282:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
 283:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** /** @defgroup HAL_Exported_Functions_Group2 HAL Control functions 
 284:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****  *  @brief    HAL Control functions
 285:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****  *
 286:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** @verbatim
 287:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****  ===============================================================================
 288:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****                       ##### HAL Control functions #####
ARM GAS  /tmp/ccgtywtP.s 			page 10


 289:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****  ===============================================================================
 290:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****     [..]  This section provides functions allowing to:
 291:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****       (+) Provide a tick value in millisecond
 292:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****       (+) Provide a blocking delay in millisecond
 293:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****       (+) Suspend the time base source interrupt
 294:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****       (+) Resume the time base source interrupt
 295:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****       (+) Get the HAL API driver version
 296:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****       (+) Get the device identifier
 297:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****       (+) Get the device revision identifier
 298:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****       (+) Enable/Disable Debug module during SLEEP mode
 299:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****       (+) Enable/Disable Debug module during STOP mode
 300:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****       (+) Enable/Disable Debug module during STANDBY mode
 301:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
 302:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** @endverbatim
 303:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @{
 304:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   */
 305:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
 306:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** /**
 307:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @brief This function is called to increment  a global variable "uwTick"
 308:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   *        used as application time base.
 309:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @note In the default implementation, this variable is incremented each 1ms
 310:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   *       in Systick ISR.
 311:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****  * @note This function is declared as __weak to be overwritten in case of other 
 312:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   *      implementations in user file.
 313:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @retval None
 314:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   */
 315:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** __weak void HAL_IncTick(void)
 316:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** {
 215              		.loc 1 316 0
 216              		.cfi_startproc
 217              		@ args = 0, pretend = 0, frame = 0
 218              		@ frame_needed = 0, uses_anonymous_args = 0
 219              		@ link register save eliminated.
 317:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   uwTick++;
 220              		.loc 1 317 0
 221 0000 024A     		ldr	r2, .L16
 222 0002 1368     		ldr	r3, [r2]
 223 0004 0133     		adds	r3, r3, #1
 224 0006 1360     		str	r3, [r2]
 225 0008 7047     		bx	lr
 226              	.L17:
 227 000a 00BF     		.align	2
 228              	.L16:
 229 000c 00000000 		.word	uwTick
 230              		.cfi_endproc
 231              	.LFE129:
 233              		.section	.text.HAL_GetTick,"ax",%progbits
 234              		.align	2
 235              		.weak	HAL_GetTick
 236              		.thumb
 237              		.thumb_func
 239              	HAL_GetTick:
 240              	.LFB130:
 318:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** }
 319:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
 320:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** /**
 321:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @brief Provides a tick value in millisecond.
ARM GAS  /tmp/ccgtywtP.s 			page 11


 322:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @note This function is declared as __weak to be overwritten in case of other 
 323:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   *       implementations in user file.
 324:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @retval tick value
 325:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   */
 326:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** __weak uint32_t HAL_GetTick(void)
 327:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** {
 241              		.loc 1 327 0
 242              		.cfi_startproc
 243              		@ args = 0, pretend = 0, frame = 0
 244              		@ frame_needed = 0, uses_anonymous_args = 0
 245              		@ link register save eliminated.
 328:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   return uwTick;
 246              		.loc 1 328 0
 247 0000 014B     		ldr	r3, .L19
 248 0002 1868     		ldr	r0, [r3]
 329:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** }
 249              		.loc 1 329 0
 250 0004 7047     		bx	lr
 251              	.L20:
 252 0006 00BF     		.align	2
 253              	.L19:
 254 0008 00000000 		.word	uwTick
 255              		.cfi_endproc
 256              	.LFE130:
 258              		.section	.text.HAL_Delay,"ax",%progbits
 259              		.align	2
 260              		.weak	HAL_Delay
 261              		.thumb
 262              		.thumb_func
 264              	HAL_Delay:
 265              	.LFB131:
 330:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
 331:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** /**
 332:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @brief This function provides minimum delay (in milliseconds) based 
 333:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   *        on variable incremented.
 334:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @note In the default implementation , SysTick timer is the source of time base.
 335:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   *       It is used to generate interrupts at regular time intervals where uwTick
 336:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   *       is incremented.
 337:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @note This function is declared as __weak to be overwritten in case of other
 338:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   *       implementations in user file.
 339:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @param Delay specifies the delay time length, in milliseconds.
 340:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @retval None
 341:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   */
 342:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** __weak void HAL_Delay(__IO uint32_t Delay)
 343:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** {
 266              		.loc 1 343 0
 267              		.cfi_startproc
 268              		@ args = 0, pretend = 0, frame = 8
 269              		@ frame_needed = 0, uses_anonymous_args = 0
 270              	.LVL9:
 271 0000 30B5     		push	{r4, r5, lr}
 272              	.LCFI3:
 273              		.cfi_def_cfa_offset 12
 274              		.cfi_offset 4, -12
 275              		.cfi_offset 5, -8
 276              		.cfi_offset 14, -4
 277 0002 83B0     		sub	sp, sp, #12
ARM GAS  /tmp/ccgtywtP.s 			page 12


 278              	.LCFI4:
 279              		.cfi_def_cfa_offset 24
 280 0004 0190     		str	r0, [sp, #4]
 344:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   uint32_t tickstart = HAL_GetTick();
 281              		.loc 1 344 0
 282 0006 FFF7FEFF 		bl	HAL_GetTick
 283              	.LVL10:
 284 000a 0546     		mov	r5, r0
 285              	.LVL11:
 345:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   uint32_t wait = Delay;
 286              		.loc 1 345 0
 287 000c 019C     		ldr	r4, [sp, #4]
 288              	.LVL12:
 346:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   
 347:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   /* Add a period to guarantee minimum wait */
 348:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   if (wait < HAL_MAX_DELAY)
 289              		.loc 1 348 0
 290 000e B4F1FF3F 		cmp	r4, #-1
 291 0012 00D0     		beq	.L23
 349:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   {
 350:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****      wait++;
 292              		.loc 1 350 0
 293 0014 0134     		adds	r4, r4, #1
 294              	.LVL13:
 295              	.L23:
 351:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   }
 352:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   
 353:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   while((HAL_GetTick() - tickstart) < wait)
 296              		.loc 1 353 0 discriminator 1
 297 0016 FFF7FEFF 		bl	HAL_GetTick
 298              	.LVL14:
 299 001a 401B     		subs	r0, r0, r5
 300 001c A042     		cmp	r0, r4
 301 001e FAD3     		bcc	.L23
 354:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   {
 355:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   }
 356:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** }
 302              		.loc 1 356 0
 303 0020 03B0     		add	sp, sp, #12
 304              	.LCFI5:
 305              		.cfi_def_cfa_offset 12
 306              		@ sp needed
 307 0022 30BD     		pop	{r4, r5, pc}
 308              		.cfi_endproc
 309              	.LFE131:
 311              		.section	.text.HAL_SuspendTick,"ax",%progbits
 312              		.align	2
 313              		.weak	HAL_SuspendTick
 314              		.thumb
 315              		.thumb_func
 317              	HAL_SuspendTick:
 318              	.LFB132:
 357:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
 358:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** /**
 359:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @brief Suspend Tick increment.
 360:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @note In the default implementation , SysTick timer is the source of time base. It is
 361:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   *       used to generate interrupts at regular time intervals. Once HAL_SuspendTick()
ARM GAS  /tmp/ccgtywtP.s 			page 13


 362:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   *       is called, the SysTick interrupt will be disabled and so Tick increment 
 363:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   *       is suspended.
 364:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @note This function is declared as __weak to be overwritten in case of other
 365:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   *       implementations in user file.
 366:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @retval None
 367:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   */
 368:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** __weak void HAL_SuspendTick(void)
 369:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** {
 319              		.loc 1 369 0
 320              		.cfi_startproc
 321              		@ args = 0, pretend = 0, frame = 0
 322              		@ frame_needed = 0, uses_anonymous_args = 0
 323              		@ link register save eliminated.
 370:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   /* Disable SysTick Interrupt */
 371:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   SysTick->CTRL &= ~SysTick_CTRL_TICKINT_Msk;
 324              		.loc 1 371 0
 325 0000 024A     		ldr	r2, .L26
 326 0002 1368     		ldr	r3, [r2]
 327 0004 23F00203 		bic	r3, r3, #2
 328 0008 1360     		str	r3, [r2]
 329 000a 7047     		bx	lr
 330              	.L27:
 331              		.align	2
 332              	.L26:
 333 000c 10E000E0 		.word	-536813552
 334              		.cfi_endproc
 335              	.LFE132:
 337              		.section	.text.HAL_ResumeTick,"ax",%progbits
 338              		.align	2
 339              		.weak	HAL_ResumeTick
 340              		.thumb
 341              		.thumb_func
 343              	HAL_ResumeTick:
 344              	.LFB133:
 372:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** }
 373:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
 374:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** /**
 375:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @brief Resume Tick increment.
 376:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @note In the default implementation , SysTick timer is the source of time base. It is
 377:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   *       used to generate interrupts at regular time intervals. Once HAL_ResumeTick()
 378:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   *       is called, the SysTick interrupt will be enabled and so Tick increment 
 379:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   *       is resumed.
 380:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @note This function is declared as __weak to be overwritten in case of other
 381:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   *       implementations in user file.
 382:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @retval None
 383:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   */
 384:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** __weak void HAL_ResumeTick(void)
 385:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** {
 345              		.loc 1 385 0
 346              		.cfi_startproc
 347              		@ args = 0, pretend = 0, frame = 0
 348              		@ frame_needed = 0, uses_anonymous_args = 0
 349              		@ link register save eliminated.
 386:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   /* Enable SysTick Interrupt */
 387:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   SysTick->CTRL  |= SysTick_CTRL_TICKINT_Msk;
 350              		.loc 1 387 0
 351 0000 024A     		ldr	r2, .L29
ARM GAS  /tmp/ccgtywtP.s 			page 14


 352 0002 1368     		ldr	r3, [r2]
 353 0004 43F00203 		orr	r3, r3, #2
 354 0008 1360     		str	r3, [r2]
 355 000a 7047     		bx	lr
 356              	.L30:
 357              		.align	2
 358              	.L29:
 359 000c 10E000E0 		.word	-536813552
 360              		.cfi_endproc
 361              	.LFE133:
 363              		.section	.text.HAL_GetHalVersion,"ax",%progbits
 364              		.align	2
 365              		.global	HAL_GetHalVersion
 366              		.thumb
 367              		.thumb_func
 369              	HAL_GetHalVersion:
 370              	.LFB134:
 388:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** }
 389:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
 390:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** /**
 391:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @brief  Returns the HAL revision
 392:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @retval version : 0xXYZR (8bits for each decimal, R for RC)
 393:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   */
 394:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** uint32_t HAL_GetHalVersion(void)
 395:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** {
 371              		.loc 1 395 0
 372              		.cfi_startproc
 373              		@ args = 0, pretend = 0, frame = 0
 374              		@ frame_needed = 0, uses_anonymous_args = 0
 375              		@ link register save eliminated.
 396:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****  return __STM32F4xx_HAL_VERSION;
 397:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** }
 376              		.loc 1 397 0
 377 0000 0048     		ldr	r0, .L32
 378 0002 7047     		bx	lr
 379              	.L33:
 380              		.align	2
 381              	.L32:
 382 0004 00020701 		.word	17236480
 383              		.cfi_endproc
 384              	.LFE134:
 386              		.section	.text.HAL_GetREVID,"ax",%progbits
 387              		.align	2
 388              		.global	HAL_GetREVID
 389              		.thumb
 390              		.thumb_func
 392              	HAL_GetREVID:
 393              	.LFB135:
 398:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
 399:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** /**
 400:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @brief  Returns the device revision identifier.
 401:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @retval Device revision identifier
 402:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   */
 403:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** uint32_t HAL_GetREVID(void)
 404:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** {
 394              		.loc 1 404 0
 395              		.cfi_startproc
ARM GAS  /tmp/ccgtywtP.s 			page 15


 396              		@ args = 0, pretend = 0, frame = 0
 397              		@ frame_needed = 0, uses_anonymous_args = 0
 398              		@ link register save eliminated.
 405:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****    return((DBGMCU->IDCODE) >> 16U);
 399              		.loc 1 405 0
 400 0000 014B     		ldr	r3, .L35
 401 0002 1868     		ldr	r0, [r3]
 406:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** }
 402              		.loc 1 406 0
 403 0004 000C     		lsrs	r0, r0, #16
 404 0006 7047     		bx	lr
 405              	.L36:
 406              		.align	2
 407              	.L35:
 408 0008 002004E0 		.word	-536600576
 409              		.cfi_endproc
 410              	.LFE135:
 412              		.section	.text.HAL_GetDEVID,"ax",%progbits
 413              		.align	2
 414              		.global	HAL_GetDEVID
 415              		.thumb
 416              		.thumb_func
 418              	HAL_GetDEVID:
 419              	.LFB136:
 407:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
 408:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** /**
 409:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @brief  Returns the device identifier.
 410:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @retval Device identifier
 411:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   */
 412:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** uint32_t HAL_GetDEVID(void)
 413:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** {
 420              		.loc 1 413 0
 421              		.cfi_startproc
 422              		@ args = 0, pretend = 0, frame = 0
 423              		@ frame_needed = 0, uses_anonymous_args = 0
 424              		@ link register save eliminated.
 414:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****    return((DBGMCU->IDCODE) & IDCODE_DEVID_MASK);
 425              		.loc 1 414 0
 426 0000 024B     		ldr	r3, .L38
 427 0002 1868     		ldr	r0, [r3]
 415:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** }
 428              		.loc 1 415 0
 429 0004 C0F30B00 		ubfx	r0, r0, #0, #12
 430 0008 7047     		bx	lr
 431              	.L39:
 432 000a 00BF     		.align	2
 433              	.L38:
 434 000c 002004E0 		.word	-536600576
 435              		.cfi_endproc
 436              	.LFE136:
 438              		.section	.text.HAL_DBGMCU_EnableDBGSleepMode,"ax",%progbits
 439              		.align	2
 440              		.global	HAL_DBGMCU_EnableDBGSleepMode
 441              		.thumb
 442              		.thumb_func
 444              	HAL_DBGMCU_EnableDBGSleepMode:
 445              	.LFB137:
ARM GAS  /tmp/ccgtywtP.s 			page 16


 416:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
 417:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** /**
 418:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @brief  Enable the Debug Module during SLEEP mode
 419:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @retval None
 420:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   */
 421:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** void HAL_DBGMCU_EnableDBGSleepMode(void)
 422:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** {
 446              		.loc 1 422 0
 447              		.cfi_startproc
 448              		@ args = 0, pretend = 0, frame = 0
 449              		@ frame_needed = 0, uses_anonymous_args = 0
 450              		@ link register save eliminated.
 423:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   SET_BIT(DBGMCU->CR, DBGMCU_CR_DBG_SLEEP);
 451              		.loc 1 423 0
 452 0000 024A     		ldr	r2, .L41
 453 0002 5368     		ldr	r3, [r2, #4]
 454 0004 43F00103 		orr	r3, r3, #1
 455 0008 5360     		str	r3, [r2, #4]
 456 000a 7047     		bx	lr
 457              	.L42:
 458              		.align	2
 459              	.L41:
 460 000c 002004E0 		.word	-536600576
 461              		.cfi_endproc
 462              	.LFE137:
 464              		.section	.text.HAL_DBGMCU_DisableDBGSleepMode,"ax",%progbits
 465              		.align	2
 466              		.global	HAL_DBGMCU_DisableDBGSleepMode
 467              		.thumb
 468              		.thumb_func
 470              	HAL_DBGMCU_DisableDBGSleepMode:
 471              	.LFB138:
 424:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** }
 425:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
 426:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** /**
 427:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @brief  Disable the Debug Module during SLEEP mode
 428:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @retval None
 429:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   */
 430:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** void HAL_DBGMCU_DisableDBGSleepMode(void)
 431:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** {
 472              		.loc 1 431 0
 473              		.cfi_startproc
 474              		@ args = 0, pretend = 0, frame = 0
 475              		@ frame_needed = 0, uses_anonymous_args = 0
 476              		@ link register save eliminated.
 432:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   CLEAR_BIT(DBGMCU->CR, DBGMCU_CR_DBG_SLEEP);
 477              		.loc 1 432 0
 478 0000 024A     		ldr	r2, .L44
 479 0002 5368     		ldr	r3, [r2, #4]
 480 0004 23F00103 		bic	r3, r3, #1
 481 0008 5360     		str	r3, [r2, #4]
 482 000a 7047     		bx	lr
 483              	.L45:
 484              		.align	2
 485              	.L44:
 486 000c 002004E0 		.word	-536600576
 487              		.cfi_endproc
ARM GAS  /tmp/ccgtywtP.s 			page 17


 488              	.LFE138:
 490              		.section	.text.HAL_DBGMCU_EnableDBGStopMode,"ax",%progbits
 491              		.align	2
 492              		.global	HAL_DBGMCU_EnableDBGStopMode
 493              		.thumb
 494              		.thumb_func
 496              	HAL_DBGMCU_EnableDBGStopMode:
 497              	.LFB139:
 433:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** }
 434:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
 435:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** /**
 436:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @brief  Enable the Debug Module during STOP mode
 437:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @retval None
 438:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   */
 439:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** void HAL_DBGMCU_EnableDBGStopMode(void)
 440:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** {
 498              		.loc 1 440 0
 499              		.cfi_startproc
 500              		@ args = 0, pretend = 0, frame = 0
 501              		@ frame_needed = 0, uses_anonymous_args = 0
 502              		@ link register save eliminated.
 441:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   SET_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STOP);
 503              		.loc 1 441 0
 504 0000 024A     		ldr	r2, .L47
 505 0002 5368     		ldr	r3, [r2, #4]
 506 0004 43F00203 		orr	r3, r3, #2
 507 0008 5360     		str	r3, [r2, #4]
 508 000a 7047     		bx	lr
 509              	.L48:
 510              		.align	2
 511              	.L47:
 512 000c 002004E0 		.word	-536600576
 513              		.cfi_endproc
 514              	.LFE139:
 516              		.section	.text.HAL_DBGMCU_DisableDBGStopMode,"ax",%progbits
 517              		.align	2
 518              		.global	HAL_DBGMCU_DisableDBGStopMode
 519              		.thumb
 520              		.thumb_func
 522              	HAL_DBGMCU_DisableDBGStopMode:
 523              	.LFB140:
 442:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** }
 443:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
 444:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** /**
 445:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @brief  Disable the Debug Module during STOP mode
 446:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @retval None
 447:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   */
 448:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** void HAL_DBGMCU_DisableDBGStopMode(void)
 449:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** {
 524              		.loc 1 449 0
 525              		.cfi_startproc
 526              		@ args = 0, pretend = 0, frame = 0
 527              		@ frame_needed = 0, uses_anonymous_args = 0
 528              		@ link register save eliminated.
 450:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   CLEAR_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STOP);
 529              		.loc 1 450 0
 530 0000 024A     		ldr	r2, .L50
ARM GAS  /tmp/ccgtywtP.s 			page 18


 531 0002 5368     		ldr	r3, [r2, #4]
 532 0004 23F00203 		bic	r3, r3, #2
 533 0008 5360     		str	r3, [r2, #4]
 534 000a 7047     		bx	lr
 535              	.L51:
 536              		.align	2
 537              	.L50:
 538 000c 002004E0 		.word	-536600576
 539              		.cfi_endproc
 540              	.LFE140:
 542              		.section	.text.HAL_DBGMCU_EnableDBGStandbyMode,"ax",%progbits
 543              		.align	2
 544              		.global	HAL_DBGMCU_EnableDBGStandbyMode
 545              		.thumb
 546              		.thumb_func
 548              	HAL_DBGMCU_EnableDBGStandbyMode:
 549              	.LFB141:
 451:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** }
 452:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
 453:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** /**
 454:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @brief  Enable the Debug Module during STANDBY mode
 455:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @retval None
 456:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   */
 457:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** void HAL_DBGMCU_EnableDBGStandbyMode(void)
 458:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** {
 550              		.loc 1 458 0
 551              		.cfi_startproc
 552              		@ args = 0, pretend = 0, frame = 0
 553              		@ frame_needed = 0, uses_anonymous_args = 0
 554              		@ link register save eliminated.
 459:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   SET_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STANDBY);
 555              		.loc 1 459 0
 556 0000 024A     		ldr	r2, .L53
 557 0002 5368     		ldr	r3, [r2, #4]
 558 0004 43F00403 		orr	r3, r3, #4
 559 0008 5360     		str	r3, [r2, #4]
 560 000a 7047     		bx	lr
 561              	.L54:
 562              		.align	2
 563              	.L53:
 564 000c 002004E0 		.word	-536600576
 565              		.cfi_endproc
 566              	.LFE141:
 568              		.section	.text.HAL_DBGMCU_DisableDBGStandbyMode,"ax",%progbits
 569              		.align	2
 570              		.global	HAL_DBGMCU_DisableDBGStandbyMode
 571              		.thumb
 572              		.thumb_func
 574              	HAL_DBGMCU_DisableDBGStandbyMode:
 575              	.LFB142:
 460:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** }
 461:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
 462:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** /**
 463:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @brief  Disable the Debug Module during STANDBY mode
 464:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @retval None
 465:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   */
 466:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** void HAL_DBGMCU_DisableDBGStandbyMode(void)
ARM GAS  /tmp/ccgtywtP.s 			page 19


 467:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** {
 576              		.loc 1 467 0
 577              		.cfi_startproc
 578              		@ args = 0, pretend = 0, frame = 0
 579              		@ frame_needed = 0, uses_anonymous_args = 0
 580              		@ link register save eliminated.
 468:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   CLEAR_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STANDBY);
 581              		.loc 1 468 0
 582 0000 024A     		ldr	r2, .L56
 583 0002 5368     		ldr	r3, [r2, #4]
 584 0004 23F00403 		bic	r3, r3, #4
 585 0008 5360     		str	r3, [r2, #4]
 586 000a 7047     		bx	lr
 587              	.L57:
 588              		.align	2
 589              	.L56:
 590 000c 002004E0 		.word	-536600576
 591              		.cfi_endproc
 592              	.LFE142:
 594              		.section	.text.HAL_EnableCompensationCell,"ax",%progbits
 595              		.align	2
 596              		.global	HAL_EnableCompensationCell
 597              		.thumb
 598              		.thumb_func
 600              	HAL_EnableCompensationCell:
 601              	.LFB143:
 469:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** }
 470:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
 471:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** /**
 472:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @brief  Enables the I/O Compensation Cell.
 473:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @note   The I/O compensation cell can be used only when the device supply
 474:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   *         voltage ranges from 2.4 to 3.6 V.  
 475:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @retval None
 476:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   */
 477:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** void HAL_EnableCompensationCell(void)
 478:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** {
 602              		.loc 1 478 0
 603              		.cfi_startproc
 604              		@ args = 0, pretend = 0, frame = 0
 605              		@ frame_needed = 0, uses_anonymous_args = 0
 606              		@ link register save eliminated.
 479:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   *(__IO uint32_t *)CMPCR_CMP_PD_BB = (uint32_t)ENABLE;
 607              		.loc 1 479 0
 608 0000 0122     		movs	r2, #1
 609 0002 014B     		ldr	r3, .L59
 610 0004 1A60     		str	r2, [r3]
 611 0006 7047     		bx	lr
 612              	.L60:
 613              		.align	2
 614              	.L59:
 615 0008 00042742 		.word	1109853184
 616              		.cfi_endproc
 617              	.LFE143:
 619              		.section	.text.HAL_DisableCompensationCell,"ax",%progbits
 620              		.align	2
 621              		.global	HAL_DisableCompensationCell
 622              		.thumb
ARM GAS  /tmp/ccgtywtP.s 			page 20


 623              		.thumb_func
 625              	HAL_DisableCompensationCell:
 626              	.LFB144:
 480:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** }
 481:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
 482:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** /**
 483:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @brief  Power-down the I/O Compensation Cell.
 484:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @note   The I/O compensation cell can be used only when the device supply
 485:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   *         voltage ranges from 2.4 to 3.6 V.  
 486:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @retval None
 487:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   */
 488:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** void HAL_DisableCompensationCell(void)
 489:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** {
 627              		.loc 1 489 0
 628              		.cfi_startproc
 629              		@ args = 0, pretend = 0, frame = 0
 630              		@ frame_needed = 0, uses_anonymous_args = 0
 631              		@ link register save eliminated.
 490:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   *(__IO uint32_t *)CMPCR_CMP_PD_BB = (uint32_t)DISABLE;
 632              		.loc 1 490 0
 633 0000 0022     		movs	r2, #0
 634 0002 014B     		ldr	r3, .L62
 635 0004 1A60     		str	r2, [r3]
 636 0006 7047     		bx	lr
 637              	.L63:
 638              		.align	2
 639              	.L62:
 640 0008 00042742 		.word	1109853184
 641              		.cfi_endproc
 642              	.LFE144:
 644              		.section	.text.HAL_GetUID,"ax",%progbits
 645              		.align	2
 646              		.global	HAL_GetUID
 647              		.thumb
 648              		.thumb_func
 650              	HAL_GetUID:
 651              	.LFB145:
 491:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** }
 492:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
 493:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** /**
 494:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @brief Return the unique device identifier (UID based on 96 bits)
 495:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @param UID pointer to 3 words array.
 496:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @retval Device identifier
 497:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   */
 498:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** void HAL_GetUID(uint32_t *UID)
 499:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** {
 652              		.loc 1 499 0
 653              		.cfi_startproc
 654              		@ args = 0, pretend = 0, frame = 0
 655              		@ frame_needed = 0, uses_anonymous_args = 0
 656              		@ link register save eliminated.
 657              	.LVL15:
 500:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   UID[0] = (uint32_t)(READ_REG(*((uint32_t *)UID_BASE)));
 658              		.loc 1 500 0
 659 0000 044B     		ldr	r3, .L65
 660 0002 1B68     		ldr	r3, [r3]
 661 0004 0360     		str	r3, [r0]
ARM GAS  /tmp/ccgtywtP.s 			page 21


 501:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   UID[1] = (uint32_t)(READ_REG(*((uint32_t *)(UID_BASE + 4U))));
 662              		.loc 1 501 0
 663 0006 044B     		ldr	r3, .L65+4
 664 0008 1B68     		ldr	r3, [r3]
 665 000a 4360     		str	r3, [r0, #4]
 502:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   UID[2] = (uint32_t)(READ_REG(*((uint32_t *)(UID_BASE + 8U))));
 666              		.loc 1 502 0
 667 000c 034B     		ldr	r3, .L65+8
 668 000e 1B68     		ldr	r3, [r3]
 669 0010 8360     		str	r3, [r0, #8]
 670 0012 7047     		bx	lr
 671              	.L66:
 672              		.align	2
 673              	.L65:
 674 0014 107AFF1F 		.word	536836624
 675 0018 147AFF1F 		.word	536836628
 676 001c 187AFF1F 		.word	536836632
 677              		.cfi_endproc
 678              	.LFE145:
 680              		.comm	uwTick,4,4
 681              		.text
 682              	.Letext0:
 683              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 684              		.file 3 "/usr/include/newlib/sys/_stdint.h"
 685              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 686              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f401xe.h"
 687              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f4xx.h"
 688              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 689              		.file 8 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 690              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_cortex.h"
ARM GAS  /tmp/ccgtywtP.s 			page 22


DEFINED SYMBOLS
                            *ABS*:00000000 stm32f4xx_hal.c
     /tmp/ccgtywtP.s:22     .text.HAL_MspInit:00000000 $t
     /tmp/ccgtywtP.s:27     .text.HAL_MspInit:00000000 HAL_MspInit
     /tmp/ccgtywtP.s:40     .text.HAL_MspDeInit:00000000 $t
     /tmp/ccgtywtP.s:45     .text.HAL_MspDeInit:00000000 HAL_MspDeInit
     /tmp/ccgtywtP.s:57     .text.HAL_DeInit:00000000 $t
     /tmp/ccgtywtP.s:62     .text.HAL_DeInit:00000000 HAL_DeInit
     /tmp/ccgtywtP.s:106    .text.HAL_DeInit:00000028 $d
     /tmp/ccgtywtP.s:111    .text.HAL_InitTick:00000000 $t
     /tmp/ccgtywtP.s:116    .text.HAL_InitTick:00000000 HAL_InitTick
     /tmp/ccgtywtP.s:151    .text.HAL_InitTick:00000024 $d
     /tmp/ccgtywtP.s:157    .text.HAL_Init:00000000 $t
     /tmp/ccgtywtP.s:162    .text.HAL_Init:00000000 HAL_Init
     /tmp/ccgtywtP.s:203    .text.HAL_Init:00000030 $d
     /tmp/ccgtywtP.s:208    .text.HAL_IncTick:00000000 $t
     /tmp/ccgtywtP.s:213    .text.HAL_IncTick:00000000 HAL_IncTick
     /tmp/ccgtywtP.s:229    .text.HAL_IncTick:0000000c $d
                            *COM*:00000004 uwTick
     /tmp/ccgtywtP.s:234    .text.HAL_GetTick:00000000 $t
     /tmp/ccgtywtP.s:239    .text.HAL_GetTick:00000000 HAL_GetTick
     /tmp/ccgtywtP.s:254    .text.HAL_GetTick:00000008 $d
     /tmp/ccgtywtP.s:259    .text.HAL_Delay:00000000 $t
     /tmp/ccgtywtP.s:264    .text.HAL_Delay:00000000 HAL_Delay
     /tmp/ccgtywtP.s:312    .text.HAL_SuspendTick:00000000 $t
     /tmp/ccgtywtP.s:317    .text.HAL_SuspendTick:00000000 HAL_SuspendTick
     /tmp/ccgtywtP.s:333    .text.HAL_SuspendTick:0000000c $d
     /tmp/ccgtywtP.s:338    .text.HAL_ResumeTick:00000000 $t
     /tmp/ccgtywtP.s:343    .text.HAL_ResumeTick:00000000 HAL_ResumeTick
     /tmp/ccgtywtP.s:359    .text.HAL_ResumeTick:0000000c $d
     /tmp/ccgtywtP.s:364    .text.HAL_GetHalVersion:00000000 $t
     /tmp/ccgtywtP.s:369    .text.HAL_GetHalVersion:00000000 HAL_GetHalVersion
     /tmp/ccgtywtP.s:382    .text.HAL_GetHalVersion:00000004 $d
     /tmp/ccgtywtP.s:387    .text.HAL_GetREVID:00000000 $t
     /tmp/ccgtywtP.s:392    .text.HAL_GetREVID:00000000 HAL_GetREVID
     /tmp/ccgtywtP.s:408    .text.HAL_GetREVID:00000008 $d
     /tmp/ccgtywtP.s:413    .text.HAL_GetDEVID:00000000 $t
     /tmp/ccgtywtP.s:418    .text.HAL_GetDEVID:00000000 HAL_GetDEVID
     /tmp/ccgtywtP.s:434    .text.HAL_GetDEVID:0000000c $d
     /tmp/ccgtywtP.s:439    .text.HAL_DBGMCU_EnableDBGSleepMode:00000000 $t
     /tmp/ccgtywtP.s:444    .text.HAL_DBGMCU_EnableDBGSleepMode:00000000 HAL_DBGMCU_EnableDBGSleepMode
     /tmp/ccgtywtP.s:460    .text.HAL_DBGMCU_EnableDBGSleepMode:0000000c $d
     /tmp/ccgtywtP.s:465    .text.HAL_DBGMCU_DisableDBGSleepMode:00000000 $t
     /tmp/ccgtywtP.s:470    .text.HAL_DBGMCU_DisableDBGSleepMode:00000000 HAL_DBGMCU_DisableDBGSleepMode
     /tmp/ccgtywtP.s:486    .text.HAL_DBGMCU_DisableDBGSleepMode:0000000c $d
     /tmp/ccgtywtP.s:491    .text.HAL_DBGMCU_EnableDBGStopMode:00000000 $t
     /tmp/ccgtywtP.s:496    .text.HAL_DBGMCU_EnableDBGStopMode:00000000 HAL_DBGMCU_EnableDBGStopMode
     /tmp/ccgtywtP.s:512    .text.HAL_DBGMCU_EnableDBGStopMode:0000000c $d
     /tmp/ccgtywtP.s:517    .text.HAL_DBGMCU_DisableDBGStopMode:00000000 $t
     /tmp/ccgtywtP.s:522    .text.HAL_DBGMCU_DisableDBGStopMode:00000000 HAL_DBGMCU_DisableDBGStopMode
     /tmp/ccgtywtP.s:538    .text.HAL_DBGMCU_DisableDBGStopMode:0000000c $d
     /tmp/ccgtywtP.s:543    .text.HAL_DBGMCU_EnableDBGStandbyMode:00000000 $t
     /tmp/ccgtywtP.s:548    .text.HAL_DBGMCU_EnableDBGStandbyMode:00000000 HAL_DBGMCU_EnableDBGStandbyMode
     /tmp/ccgtywtP.s:564    .text.HAL_DBGMCU_EnableDBGStandbyMode:0000000c $d
     /tmp/ccgtywtP.s:569    .text.HAL_DBGMCU_DisableDBGStandbyMode:00000000 $t
     /tmp/ccgtywtP.s:574    .text.HAL_DBGMCU_DisableDBGStandbyMode:00000000 HAL_DBGMCU_DisableDBGStandbyMode
     /tmp/ccgtywtP.s:590    .text.HAL_DBGMCU_DisableDBGStandbyMode:0000000c $d
ARM GAS  /tmp/ccgtywtP.s 			page 23


     /tmp/ccgtywtP.s:595    .text.HAL_EnableCompensationCell:00000000 $t
     /tmp/ccgtywtP.s:600    .text.HAL_EnableCompensationCell:00000000 HAL_EnableCompensationCell
     /tmp/ccgtywtP.s:615    .text.HAL_EnableCompensationCell:00000008 $d
     /tmp/ccgtywtP.s:620    .text.HAL_DisableCompensationCell:00000000 $t
     /tmp/ccgtywtP.s:625    .text.HAL_DisableCompensationCell:00000000 HAL_DisableCompensationCell
     /tmp/ccgtywtP.s:640    .text.HAL_DisableCompensationCell:00000008 $d
     /tmp/ccgtywtP.s:645    .text.HAL_GetUID:00000000 $t
     /tmp/ccgtywtP.s:650    .text.HAL_GetUID:00000000 HAL_GetUID
     /tmp/ccgtywtP.s:674    .text.HAL_GetUID:00000014 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
HAL_SYSTICK_Config
HAL_NVIC_SetPriority
SystemCoreClock
HAL_NVIC_SetPriorityGrouping
