ARM GAS  /tmp/ccJbGJT2.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 1
   4              		.eabi_attribute 28, 1
   5              		.fpu fpv4-sp-d16
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.thumb
  16              		.syntax unified
  17              		.file	"stm32f4xx_it.c"
  18              		.text
  19              	.Ltext0:
  20              		.cfi_sections	.debug_frame
  21              		.section	.text.SysTick_Handler,"ax",%progbits
  22              		.align	2
  23              		.global	SysTick_Handler
  24              		.thumb
  25              		.thumb_func
  27              	SysTick_Handler:
  28              	.LFB112:
  29              		.file 1 "../Src/stm32f4xx_it.c"
   1:../Src/stm32f4xx_it.c **** /**
   2:../Src/stm32f4xx_it.c ****   ******************************************************************************
   3:../Src/stm32f4xx_it.c ****   * @file    stm32f4xx_it.c
   4:../Src/stm32f4xx_it.c ****   * @date    01/03/2018 16:55:47
   5:../Src/stm32f4xx_it.c ****   * @brief   Interrupt Service Routines.
   6:../Src/stm32f4xx_it.c ****   ******************************************************************************
   7:../Src/stm32f4xx_it.c ****   *
   8:../Src/stm32f4xx_it.c ****   * COPYRIGHT(c) 2018 STMicroelectronics
   9:../Src/stm32f4xx_it.c ****   *
  10:../Src/stm32f4xx_it.c ****   * Redistribution and use in source and binary forms, with or without modification,
  11:../Src/stm32f4xx_it.c ****   * are permitted provided that the following conditions are met:
  12:../Src/stm32f4xx_it.c ****   *   1. Redistributions of source code must retain the above copyright notice,
  13:../Src/stm32f4xx_it.c ****   *      this list of conditions and the following disclaimer.
  14:../Src/stm32f4xx_it.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  15:../Src/stm32f4xx_it.c ****   *      this list of conditions and the following disclaimer in the documentation
  16:../Src/stm32f4xx_it.c ****   *      and/or other materials provided with the distribution.
  17:../Src/stm32f4xx_it.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  18:../Src/stm32f4xx_it.c ****   *      may be used to endorse or promote products derived from this software
  19:../Src/stm32f4xx_it.c ****   *      without specific prior written permission.
  20:../Src/stm32f4xx_it.c ****   *
  21:../Src/stm32f4xx_it.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  22:../Src/stm32f4xx_it.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  23:../Src/stm32f4xx_it.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  24:../Src/stm32f4xx_it.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  25:../Src/stm32f4xx_it.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  26:../Src/stm32f4xx_it.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  27:../Src/stm32f4xx_it.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  28:../Src/stm32f4xx_it.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  29:../Src/stm32f4xx_it.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
ARM GAS  /tmp/ccJbGJT2.s 			page 2


  30:../Src/stm32f4xx_it.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  31:../Src/stm32f4xx_it.c ****   *
  32:../Src/stm32f4xx_it.c ****   ******************************************************************************
  33:../Src/stm32f4xx_it.c ****   */
  34:../Src/stm32f4xx_it.c **** /* Includes ------------------------------------------------------------------*/
  35:../Src/stm32f4xx_it.c **** #include "stm32f4xx_hal.h"
  36:../Src/stm32f4xx_it.c **** #include "stm32f4xx.h"
  37:../Src/stm32f4xx_it.c **** #include "stm32f4xx_it.h"
  38:../Src/stm32f4xx_it.c **** /* USER CODE BEGIN 0 */
  39:../Src/stm32f4xx_it.c **** 
  40:../Src/stm32f4xx_it.c **** /* USER CODE END 0 */
  41:../Src/stm32f4xx_it.c **** /* External variables --------------------------------------------------------*/
  42:../Src/stm32f4xx_it.c **** 
  43:../Src/stm32f4xx_it.c **** extern TIM_HandleTypeDef htim3;
  44:../Src/stm32f4xx_it.c **** extern UART_HandleTypeDef huart1;
  45:../Src/stm32f4xx_it.c **** extern UART_HandleTypeDef huart2;
  46:../Src/stm32f4xx_it.c **** 
  47:../Src/stm32f4xx_it.c **** /******************************************************************************/
  48:../Src/stm32f4xx_it.c **** /*            Cortex-M4 Processor Interruption and Exception Handlers         */ 
  49:../Src/stm32f4xx_it.c **** /******************************************************************************/
  50:../Src/stm32f4xx_it.c **** 
  51:../Src/stm32f4xx_it.c **** /**
  52:../Src/stm32f4xx_it.c **** * @brief This function handles System tick timer.
  53:../Src/stm32f4xx_it.c **** */
  54:../Src/stm32f4xx_it.c **** void SysTick_Handler(void)
  55:../Src/stm32f4xx_it.c **** {
  30              		.loc 1 55 0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34 0000 08B5     		push	{r3, lr}
  35              	.LCFI0:
  36              		.cfi_def_cfa_offset 8
  37              		.cfi_offset 3, -8
  38              		.cfi_offset 14, -4
  56:../Src/stm32f4xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 0 */
  57:../Src/stm32f4xx_it.c **** 
  58:../Src/stm32f4xx_it.c ****   /* USER CODE END SysTick_IRQn 0 */
  59:../Src/stm32f4xx_it.c ****   HAL_IncTick();
  39              		.loc 1 59 0
  40 0002 FFF7FEFF 		bl	HAL_IncTick
  41              	.LVL0:
  60:../Src/stm32f4xx_it.c ****   HAL_SYSTICK_IRQHandler();
  42              		.loc 1 60 0
  43 0006 FFF7FEFF 		bl	HAL_SYSTICK_IRQHandler
  44              	.LVL1:
  45 000a 08BD     		pop	{r3, pc}
  46              		.cfi_endproc
  47              	.LFE112:
  49              		.section	.text.TIM3_IRQHandler,"ax",%progbits
  50              		.align	2
  51              		.global	TIM3_IRQHandler
  52              		.thumb
  53              		.thumb_func
  55              	TIM3_IRQHandler:
  56              	.LFB113:
  61:../Src/stm32f4xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 1 */
ARM GAS  /tmp/ccJbGJT2.s 			page 3


  62:../Src/stm32f4xx_it.c **** 
  63:../Src/stm32f4xx_it.c ****   /* USER CODE END SysTick_IRQn 1 */
  64:../Src/stm32f4xx_it.c **** }
  65:../Src/stm32f4xx_it.c **** 
  66:../Src/stm32f4xx_it.c **** /**
  67:../Src/stm32f4xx_it.c **** * @brief This function handles TIM3 global interrupt.
  68:../Src/stm32f4xx_it.c **** */
  69:../Src/stm32f4xx_it.c **** void TIM3_IRQHandler(void)
  70:../Src/stm32f4xx_it.c **** {
  57              		.loc 1 70 0
  58              		.cfi_startproc
  59              		@ args = 0, pretend = 0, frame = 0
  60              		@ frame_needed = 0, uses_anonymous_args = 0
  61 0000 08B5     		push	{r3, lr}
  62              	.LCFI1:
  63              		.cfi_def_cfa_offset 8
  64              		.cfi_offset 3, -8
  65              		.cfi_offset 14, -4
  71:../Src/stm32f4xx_it.c ****   /* USER CODE BEGIN TIM3_IRQn 0 */
  72:../Src/stm32f4xx_it.c **** 
  73:../Src/stm32f4xx_it.c ****   /* USER CODE END TIM3_IRQn 0 */
  74:../Src/stm32f4xx_it.c ****   HAL_NVIC_ClearPendingIRQ(TIM3_IRQn);
  66              		.loc 1 74 0
  67 0002 1D20     		movs	r0, #29
  68 0004 FFF7FEFF 		bl	HAL_NVIC_ClearPendingIRQ
  69              	.LVL2:
  75:../Src/stm32f4xx_it.c ****   HAL_TIM_IRQHandler(&htim3);
  70              		.loc 1 75 0
  71 0008 0148     		ldr	r0, .L5
  72 000a FFF7FEFF 		bl	HAL_TIM_IRQHandler
  73              	.LVL3:
  74 000e 08BD     		pop	{r3, pc}
  75              	.L6:
  76              		.align	2
  77              	.L5:
  78 0010 00000000 		.word	htim3
  79              		.cfi_endproc
  80              	.LFE113:
  82              		.section	.text.USART1_IRQHandler,"ax",%progbits
  83              		.align	2
  84              		.global	USART1_IRQHandler
  85              		.thumb
  86              		.thumb_func
  88              	USART1_IRQHandler:
  89              	.LFB114:
  76:../Src/stm32f4xx_it.c ****   /* USER CODE BEGIN TIM3_IRQn 1 */
  77:../Src/stm32f4xx_it.c **** 
  78:../Src/stm32f4xx_it.c ****   /* USER CODE END TIM3_IRQn 1 */
  79:../Src/stm32f4xx_it.c **** }
  80:../Src/stm32f4xx_it.c **** 
  81:../Src/stm32f4xx_it.c **** /**
  82:../Src/stm32f4xx_it.c **** * @brief This function handles USART1 global interrupt.
  83:../Src/stm32f4xx_it.c **** */
  84:../Src/stm32f4xx_it.c **** void USART1_IRQHandler(void)
  85:../Src/stm32f4xx_it.c **** {
  90              		.loc 1 85 0
  91              		.cfi_startproc
ARM GAS  /tmp/ccJbGJT2.s 			page 4


  92              		@ args = 0, pretend = 0, frame = 0
  93              		@ frame_needed = 0, uses_anonymous_args = 0
  94 0000 08B5     		push	{r3, lr}
  95              	.LCFI2:
  96              		.cfi_def_cfa_offset 8
  97              		.cfi_offset 3, -8
  98              		.cfi_offset 14, -4
  86:../Src/stm32f4xx_it.c ****   /* USER CODE BEGIN USART1_IRQn 0 */
  87:../Src/stm32f4xx_it.c **** 
  88:../Src/stm32f4xx_it.c ****   /* USER CODE END USART1_IRQn 0 */
  89:../Src/stm32f4xx_it.c ****   HAL_NVIC_ClearPendingIRQ(USART1_IRQn);
  99              		.loc 1 89 0
 100 0002 2520     		movs	r0, #37
 101 0004 FFF7FEFF 		bl	HAL_NVIC_ClearPendingIRQ
 102              	.LVL4:
  90:../Src/stm32f4xx_it.c ****   HAL_UART_IRQHandler(&huart1);
 103              		.loc 1 90 0
 104 0008 0148     		ldr	r0, .L9
 105 000a FFF7FEFF 		bl	HAL_UART_IRQHandler
 106              	.LVL5:
 107 000e 08BD     		pop	{r3, pc}
 108              	.L10:
 109              		.align	2
 110              	.L9:
 111 0010 00000000 		.word	huart1
 112              		.cfi_endproc
 113              	.LFE114:
 115              		.section	.text.USART2_IRQHandler,"ax",%progbits
 116              		.align	2
 117              		.global	USART2_IRQHandler
 118              		.thumb
 119              		.thumb_func
 121              	USART2_IRQHandler:
 122              	.LFB115:
  91:../Src/stm32f4xx_it.c ****   /* USER CODE BEGIN USART1_IRQn 1 */
  92:../Src/stm32f4xx_it.c **** 
  93:../Src/stm32f4xx_it.c ****   /* USER CODE END USART1_IRQn 1 */
  94:../Src/stm32f4xx_it.c **** }
  95:../Src/stm32f4xx_it.c **** 
  96:../Src/stm32f4xx_it.c **** /**
  97:../Src/stm32f4xx_it.c **** * @brief This function handles USART2 global interrupt.
  98:../Src/stm32f4xx_it.c **** */
  99:../Src/stm32f4xx_it.c **** void USART2_IRQHandler(void)
 100:../Src/stm32f4xx_it.c **** {
 123              		.loc 1 100 0
 124              		.cfi_startproc
 125              		@ args = 0, pretend = 0, frame = 0
 126              		@ frame_needed = 0, uses_anonymous_args = 0
 127 0000 08B5     		push	{r3, lr}
 128              	.LCFI3:
 129              		.cfi_def_cfa_offset 8
 130              		.cfi_offset 3, -8
 131              		.cfi_offset 14, -4
 101:../Src/stm32f4xx_it.c ****   /* USER CODE BEGIN USART2_IRQn 0 */
 102:../Src/stm32f4xx_it.c **** 
 103:../Src/stm32f4xx_it.c ****   /* USER CODE END USART2_IRQn 0 */
 104:../Src/stm32f4xx_it.c ****   HAL_NVIC_ClearPendingIRQ(USART2_IRQn);
ARM GAS  /tmp/ccJbGJT2.s 			page 5


 132              		.loc 1 104 0
 133 0002 2620     		movs	r0, #38
 134 0004 FFF7FEFF 		bl	HAL_NVIC_ClearPendingIRQ
 135              	.LVL6:
 105:../Src/stm32f4xx_it.c ****   HAL_UART_IRQHandler(&huart2);
 136              		.loc 1 105 0
 137 0008 0148     		ldr	r0, .L13
 138 000a FFF7FEFF 		bl	HAL_UART_IRQHandler
 139              	.LVL7:
 140 000e 08BD     		pop	{r3, pc}
 141              	.L14:
 142              		.align	2
 143              	.L13:
 144 0010 00000000 		.word	huart2
 145              		.cfi_endproc
 146              	.LFE115:
 148              		.text
 149              	.Letext0:
 150              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 151              		.file 3 "/usr/include/newlib/sys/_stdint.h"
 152              		.file 4 "../Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f401xe.h"
 153              		.file 5 "../Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 154              		.file 6 "../Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 155              		.file 7 "../Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 156              		.file 8 "../Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_uart.h"
 157              		.file 9 "../Drivers/CMSIS/Include/core_cm4.h"
 158              		.file 10 "../Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 159              		.file 11 "../Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_cortex.h"
ARM GAS  /tmp/ccJbGJT2.s 			page 6


DEFINED SYMBOLS
                            *ABS*:00000000 stm32f4xx_it.c
     /tmp/ccJbGJT2.s:22     .text.SysTick_Handler:00000000 $t
     /tmp/ccJbGJT2.s:27     .text.SysTick_Handler:00000000 SysTick_Handler
     /tmp/ccJbGJT2.s:50     .text.TIM3_IRQHandler:00000000 $t
     /tmp/ccJbGJT2.s:55     .text.TIM3_IRQHandler:00000000 TIM3_IRQHandler
     /tmp/ccJbGJT2.s:78     .text.TIM3_IRQHandler:00000010 $d
     /tmp/ccJbGJT2.s:83     .text.USART1_IRQHandler:00000000 $t
     /tmp/ccJbGJT2.s:88     .text.USART1_IRQHandler:00000000 USART1_IRQHandler
     /tmp/ccJbGJT2.s:111    .text.USART1_IRQHandler:00000010 $d
     /tmp/ccJbGJT2.s:116    .text.USART2_IRQHandler:00000000 $t
     /tmp/ccJbGJT2.s:121    .text.USART2_IRQHandler:00000000 USART2_IRQHandler
     /tmp/ccJbGJT2.s:144    .text.USART2_IRQHandler:00000010 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
HAL_IncTick
HAL_SYSTICK_IRQHandler
HAL_NVIC_ClearPendingIRQ
HAL_TIM_IRQHandler
htim3
HAL_UART_IRQHandler
huart1
huart2
