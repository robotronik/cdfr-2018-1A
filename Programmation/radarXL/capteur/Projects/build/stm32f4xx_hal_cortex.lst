ARM GAS  /tmp/ccYchH6m.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 1
   4              		.eabi_attribute 28, 1
   5              		.fpu fpv4-sp-d16
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.thumb
  16              		.syntax unified
  17              		.file	"stm32f4xx_hal_cortex.c"
  18              		.text
  19              	.Ltext0:
  20              		.cfi_sections	.debug_frame
  21              		.section	.text.HAL_NVIC_SetPriorityGrouping,"ax",%progbits
  22              		.align	2
  23              		.global	HAL_NVIC_SetPriorityGrouping
  24              		.thumb
  25              		.thumb_func
  27              	HAL_NVIC_SetPriorityGrouping:
  28              	.LFB112:
  29              		.file 1 "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c"
   1:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c **** /**
   2:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   ******************************************************************************
   3:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   * @file    stm32f4xx_hal_cortex.c
   4:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   * @author  MCD Application Team
   5:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   * @version V1.1.0
   6:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   * @date    19-June-2014
   7:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   * @brief   CORTEX HAL module driver.
   8:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   *          This file provides firmware functions to manage the following 
   9:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   *          functionalities of the CORTEX:
  10:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   *           + Initialization and de-initialization functions
  11:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   *           + Peripheral Control functions 
  12:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   *
  13:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   @verbatim  
  14:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   ==============================================================================
  15:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****                         ##### How to use this driver #####
  16:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   ==============================================================================
  17:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c **** 
  18:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****     [..]  
  19:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****     *** How to configure Interrupts using CORTEX HAL driver ***
  20:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****     ===========================================================
  21:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****     [..]     
  22:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****     This section provides functions allowing to configure the NVIC interrupts (IRQ).
  23:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****     The Cortex-M4 exceptions are managed by CMSIS functions.
  24:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****    
  25:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****     (#) Configure the NVIC Priority Grouping using HAL_NVIC_SetPriorityGrouping()
  26:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****         function according to the following table.
  27:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****     (#) Configure the priority of the selected IRQ Channels using HAL_NVIC_SetPriority(). 
  28:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****     (#) Enable the selected IRQ Channels using HAL_NVIC_EnableIRQ().
  29:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****     (#) please refer to programing manual for details in how to configure priority. 
ARM GAS  /tmp/ccYchH6m.s 			page 2


  30:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****       
  31:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****      -@- When the NVIC_PRIORITYGROUP_0 is selected, IRQ pre-emption is no more possible. 
  32:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****          The pending IRQ priority will be managed only by the sub priority.
  33:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****    
  34:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****      -@- IRQ priority order (sorted by highest to lowest priority):
  35:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****         (+@) Lowest pre-emption priority
  36:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****         (+@) Lowest sub priority
  37:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****         (+@) Lowest hardware priority (IRQ number)
  38:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****  
  39:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****     [..]  
  40:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****     *** How to configure Systick using CORTEX HAL driver ***
  41:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****     ========================================================
  42:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****     [..]
  43:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****     Setup SysTick Timer for time base.
  44:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****            
  45:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****    (+) The HAL_SYSTICK_Config() function calls the SysTick_Config() function which
  46:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****        is a CMSIS function that:
  47:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****         (++) Configures the SysTick Reload register with value passed as function parameter.
  48:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****         (++) Configures the SysTick IRQ priority to the lowest value (0x0F).
  49:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****         (++) Resets the SysTick Counter register.
  50:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****         (++) Configures the SysTick Counter clock source to be Core Clock Source (HCLK).
  51:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****         (++) Enables the SysTick Interrupt.
  52:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****         (++) Starts the SysTick Counter.
  53:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****     
  54:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****    (+) You can change the SysTick Clock source to be HCLK_Div8 by calling the macro
  55:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****        __HAL_CORTEX_SYSTICKCLK_CONFIG(SYSTICK_CLKSOURCE_HCLK_DIV8) just after the
  56:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****        HAL_SYSTICK_Config() function call. The __HAL_CORTEX_SYSTICKCLK_CONFIG() macro is defined
  57:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****        inside the stm32f4xx_hal_cortex.h file.
  58:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c **** 
  59:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****    (+) You can change the SysTick IRQ priority by calling the
  60:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****        HAL_NVIC_SetPriority(SysTick_IRQn,...) function just after the HAL_SYSTICK_Config() function
  61:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****        call. The HAL_NVIC_SetPriority() call the NVIC_SetPriority() function which is a CMSIS funct
  62:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c **** 
  63:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****    (+) To adjust the SysTick time base, use the following formula:
  64:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****                             
  65:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****        Reload Value = SysTick Counter Clock (Hz) x  Desired Time base (s)
  66:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****        (++) Reload Value is the parameter to be passed for HAL_SYSTICK_Config() function
  67:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****        (++) Reload Value should not exceed 0xFFFFFF
  68:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****    
  69:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   @endverbatim
  70:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   ******************************************************************************
  71:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   * @attention
  72:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   *
  73:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   * <h2><center>&copy; COPYRIGHT(c) 2014 STMicroelectronics</center></h2>
  74:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   *
  75:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   * Redistribution and use in source and binary forms, with or without modification,
  76:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   * are permitted provided that the following conditions are met:
  77:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   *   1. Redistributions of source code must retain the above copyright notice,
  78:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   *      this list of conditions and the following disclaimer.
  79:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  80:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   *      this list of conditions and the following disclaimer in the documentation
  81:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   *      and/or other materials provided with the distribution.
  82:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  83:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   *      may be used to endorse or promote products derived from this software
  84:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   *      without specific prior written permission.
  85:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   *
  86:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
ARM GAS  /tmp/ccYchH6m.s 			page 3


  87:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  88:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  89:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  90:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  91:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  92:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  93:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  94:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  95:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  96:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   *
  97:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   ******************************************************************************
  98:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   */
  99:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c **** 
 100:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c **** /* Includes ------------------------------------------------------------------*/
 101:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c **** #include "stm32f4xx_hal.h"
 102:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c **** 
 103:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c **** /** @addtogroup STM32F4xx_HAL_Driver
 104:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   * @{
 105:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   */
 106:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c **** 
 107:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c **** /** @defgroup CORTEX 
 108:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   * @brief CORTEX HAL module driver
 109:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   * @{
 110:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   */
 111:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c **** 
 112:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c **** #ifdef HAL_CORTEX_MODULE_ENABLED
 113:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c **** 
 114:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c **** /* Private typedef -----------------------------------------------------------*/
 115:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c **** /* Private define ------------------------------------------------------------*/
 116:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c **** /* Private macro -------------------------------------------------------------*/
 117:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c **** /* Private variables ---------------------------------------------------------*/
 118:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c **** /* Private function prototypes -----------------------------------------------*/
 119:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c **** /* Private functions ---------------------------------------------------------*/
 120:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c **** 
 121:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c **** /** @defgroup CORTEX_Private_Functions
 122:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   * @{
 123:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   */
 124:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c **** 
 125:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c **** 
 126:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c **** /** @defgroup CORTEX_Group1 Initialization and de-initialization functions 
 127:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****  *  @brief    Initialization and Configuration functions 
 128:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****  *
 129:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c **** @verbatim    
 130:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   ==============================================================================
 131:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****               ##### Initialization and de-initialization functions #####
 132:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   ==============================================================================
 133:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****     [..]
 134:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****       This section provides the CORTEX HAL driver functions allowing to configure Interrupts
 135:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****       Systick functionalities 
 136:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c **** 
 137:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c **** @endverbatim
 138:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   * @{
 139:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   */
 140:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c **** 
 141:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c **** 
 142:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c **** /**
 143:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   * @brief  Sets the priority grouping field (pre-emption priority and subpriority)
ARM GAS  /tmp/ccYchH6m.s 			page 4


 144:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   *         using the required unlock sequence.
 145:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   * @param  PriorityGroup: The priority grouping bits length. 
 146:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   *         This parameter can be one of the following values:
 147:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   *         @arg NVIC_PRIORITYGROUP_0: 0 bits for pre-emption priority
 148:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   *                                    4 bits for subpriority
 149:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   *         @arg NVIC_PRIORITYGROUP_1: 1 bits for pre-emption priority
 150:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   *                                    3 bits for subpriority
 151:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   *         @arg NVIC_PRIORITYGROUP_2: 2 bits for pre-emption priority
 152:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   *                                    2 bits for subpriority
 153:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   *         @arg NVIC_PRIORITYGROUP_3: 3 bits for pre-emption priority
 154:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   *                                    1 bits for subpriority
 155:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   *         @arg NVIC_PRIORITYGROUP_4: 4 bits for pre-emption priority
 156:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   *                                    0 bits for subpriority
 157:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   * @note   When the NVIC_PriorityGroup_0 is selected, IRQ pre-emption is no more possible. 
 158:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   *         The pending IRQ priority will be managed only by the subpriority. 
 159:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   * @retval None
 160:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   */
 161:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c **** void HAL_NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
 162:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c **** {
  30              		.loc 1 162 0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
  35              	.LVL0:
  36              	.LBB38:
  37              	.LBB39:
  38              		.file 2 "../Drivers/CMSIS/Include/core_cm4.h"
   1:../Drivers/CMSIS/Include/core_cm4.h **** /**************************************************************************//**
   2:../Drivers/CMSIS/Include/core_cm4.h ****  * @file     core_cm4.h
   3:../Drivers/CMSIS/Include/core_cm4.h ****  * @brief    CMSIS Cortex-M4 Core Peripheral Access Layer Header File
   4:../Drivers/CMSIS/Include/core_cm4.h ****  * @version  V3.20
   5:../Drivers/CMSIS/Include/core_cm4.h ****  * @date     25. February 2013
   6:../Drivers/CMSIS/Include/core_cm4.h ****  *
   7:../Drivers/CMSIS/Include/core_cm4.h ****  * @note
   8:../Drivers/CMSIS/Include/core_cm4.h ****  *
   9:../Drivers/CMSIS/Include/core_cm4.h ****  ******************************************************************************/
  10:../Drivers/CMSIS/Include/core_cm4.h **** /* Copyright (c) 2009 - 2013 ARM LIMITED
  11:../Drivers/CMSIS/Include/core_cm4.h **** 
  12:../Drivers/CMSIS/Include/core_cm4.h ****    All rights reserved.
  13:../Drivers/CMSIS/Include/core_cm4.h ****    Redistribution and use in source and binary forms, with or without
  14:../Drivers/CMSIS/Include/core_cm4.h ****    modification, are permitted provided that the following conditions are met:
  15:../Drivers/CMSIS/Include/core_cm4.h ****    - Redistributions of source code must retain the above copyright
  16:../Drivers/CMSIS/Include/core_cm4.h ****      notice, this list of conditions and the following disclaimer.
  17:../Drivers/CMSIS/Include/core_cm4.h ****    - Redistributions in binary form must reproduce the above copyright
  18:../Drivers/CMSIS/Include/core_cm4.h ****      notice, this list of conditions and the following disclaimer in the
  19:../Drivers/CMSIS/Include/core_cm4.h ****      documentation and/or other materials provided with the distribution.
  20:../Drivers/CMSIS/Include/core_cm4.h ****    - Neither the name of ARM nor the names of its contributors may be used
  21:../Drivers/CMSIS/Include/core_cm4.h ****      to endorse or promote products derived from this software without
  22:../Drivers/CMSIS/Include/core_cm4.h ****      specific prior written permission.
  23:../Drivers/CMSIS/Include/core_cm4.h ****    *
  24:../Drivers/CMSIS/Include/core_cm4.h ****    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  25:../Drivers/CMSIS/Include/core_cm4.h ****    AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  26:../Drivers/CMSIS/Include/core_cm4.h ****    IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  27:../Drivers/CMSIS/Include/core_cm4.h ****    ARE DISCLAIMED. IN NO EVENT SHALL COPYRIGHT HOLDERS AND CONTRIBUTORS BE
  28:../Drivers/CMSIS/Include/core_cm4.h ****    LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  29:../Drivers/CMSIS/Include/core_cm4.h ****    CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
ARM GAS  /tmp/ccYchH6m.s 			page 5


  30:../Drivers/CMSIS/Include/core_cm4.h ****    SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  31:../Drivers/CMSIS/Include/core_cm4.h ****    INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  32:../Drivers/CMSIS/Include/core_cm4.h ****    CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  33:../Drivers/CMSIS/Include/core_cm4.h ****    ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  34:../Drivers/CMSIS/Include/core_cm4.h ****    POSSIBILITY OF SUCH DAMAGE.
  35:../Drivers/CMSIS/Include/core_cm4.h ****    ---------------------------------------------------------------------------*/
  36:../Drivers/CMSIS/Include/core_cm4.h **** 
  37:../Drivers/CMSIS/Include/core_cm4.h **** 
  38:../Drivers/CMSIS/Include/core_cm4.h **** #if defined ( __ICCARM__ )
  39:../Drivers/CMSIS/Include/core_cm4.h ****  #pragma system_include  /* treat file as system include file for MISRA check */
  40:../Drivers/CMSIS/Include/core_cm4.h **** #endif
  41:../Drivers/CMSIS/Include/core_cm4.h **** 
  42:../Drivers/CMSIS/Include/core_cm4.h **** #ifdef __cplusplus
  43:../Drivers/CMSIS/Include/core_cm4.h ****  extern "C" {
  44:../Drivers/CMSIS/Include/core_cm4.h **** #endif
  45:../Drivers/CMSIS/Include/core_cm4.h **** 
  46:../Drivers/CMSIS/Include/core_cm4.h **** #ifndef __CORE_CM4_H_GENERIC
  47:../Drivers/CMSIS/Include/core_cm4.h **** #define __CORE_CM4_H_GENERIC
  48:../Drivers/CMSIS/Include/core_cm4.h **** 
  49:../Drivers/CMSIS/Include/core_cm4.h **** /** \page CMSIS_MISRA_Exceptions  MISRA-C:2004 Compliance Exceptions
  50:../Drivers/CMSIS/Include/core_cm4.h ****   CMSIS violates the following MISRA-C:2004 rules:
  51:../Drivers/CMSIS/Include/core_cm4.h **** 
  52:../Drivers/CMSIS/Include/core_cm4.h ****    \li Required Rule 8.5, object/function definition in header file.<br>
  53:../Drivers/CMSIS/Include/core_cm4.h ****      Function definitions in header files are used to allow 'inlining'.
  54:../Drivers/CMSIS/Include/core_cm4.h **** 
  55:../Drivers/CMSIS/Include/core_cm4.h ****    \li Required Rule 18.4, declaration of union type or object of union type: '{...}'.<br>
  56:../Drivers/CMSIS/Include/core_cm4.h ****      Unions are used for effective representation of core registers.
  57:../Drivers/CMSIS/Include/core_cm4.h **** 
  58:../Drivers/CMSIS/Include/core_cm4.h ****    \li Advisory Rule 19.7, Function-like macro defined.<br>
  59:../Drivers/CMSIS/Include/core_cm4.h ****      Function-like macros are used to allow more efficient code.
  60:../Drivers/CMSIS/Include/core_cm4.h ****  */
  61:../Drivers/CMSIS/Include/core_cm4.h **** 
  62:../Drivers/CMSIS/Include/core_cm4.h **** 
  63:../Drivers/CMSIS/Include/core_cm4.h **** /*******************************************************************************
  64:../Drivers/CMSIS/Include/core_cm4.h ****  *                 CMSIS definitions
  65:../Drivers/CMSIS/Include/core_cm4.h ****  ******************************************************************************/
  66:../Drivers/CMSIS/Include/core_cm4.h **** /** \ingroup Cortex_M4
  67:../Drivers/CMSIS/Include/core_cm4.h ****   @{
  68:../Drivers/CMSIS/Include/core_cm4.h ****  */
  69:../Drivers/CMSIS/Include/core_cm4.h **** 
  70:../Drivers/CMSIS/Include/core_cm4.h **** /*  CMSIS CM4 definitions */
  71:../Drivers/CMSIS/Include/core_cm4.h **** #define __CM4_CMSIS_VERSION_MAIN  (0x03)                                   /*!< [31:16] CMSIS HAL m
  72:../Drivers/CMSIS/Include/core_cm4.h **** #define __CM4_CMSIS_VERSION_SUB   (0x20)                                   /*!< [15:0]  CMSIS HAL s
  73:../Drivers/CMSIS/Include/core_cm4.h **** #define __CM4_CMSIS_VERSION       ((__CM4_CMSIS_VERSION_MAIN << 16) | \
  74:../Drivers/CMSIS/Include/core_cm4.h ****                                     __CM4_CMSIS_VERSION_SUB          )     /*!< CMSIS HAL version n
  75:../Drivers/CMSIS/Include/core_cm4.h **** 
  76:../Drivers/CMSIS/Include/core_cm4.h **** #define __CORTEX_M                (0x04)                                   /*!< Cortex-M Core      
  77:../Drivers/CMSIS/Include/core_cm4.h **** 
  78:../Drivers/CMSIS/Include/core_cm4.h **** 
  79:../Drivers/CMSIS/Include/core_cm4.h **** #if   defined ( __CC_ARM )
  80:../Drivers/CMSIS/Include/core_cm4.h ****   #define __ASM            __asm                                      /*!< asm keyword for ARM Comp
  81:../Drivers/CMSIS/Include/core_cm4.h ****   #define __INLINE         __inline                                   /*!< inline keyword for ARM C
  82:../Drivers/CMSIS/Include/core_cm4.h ****   #define __STATIC_INLINE  static __inline
  83:../Drivers/CMSIS/Include/core_cm4.h **** 
  84:../Drivers/CMSIS/Include/core_cm4.h **** #elif defined ( __ICCARM__ )
  85:../Drivers/CMSIS/Include/core_cm4.h ****   #define __ASM            __asm                                      /*!< asm keyword for IAR Comp
  86:../Drivers/CMSIS/Include/core_cm4.h ****   #define __INLINE         inline                                     /*!< inline keyword for IAR C
ARM GAS  /tmp/ccYchH6m.s 			page 6


  87:../Drivers/CMSIS/Include/core_cm4.h ****   #define __STATIC_INLINE  static inline
  88:../Drivers/CMSIS/Include/core_cm4.h **** 
  89:../Drivers/CMSIS/Include/core_cm4.h **** #elif defined ( __TMS470__ )
  90:../Drivers/CMSIS/Include/core_cm4.h ****   #define __ASM            __asm                                      /*!< asm keyword for TI CCS C
  91:../Drivers/CMSIS/Include/core_cm4.h ****   #define __STATIC_INLINE  static inline
  92:../Drivers/CMSIS/Include/core_cm4.h **** 
  93:../Drivers/CMSIS/Include/core_cm4.h **** #elif defined ( __GNUC__ )
  94:../Drivers/CMSIS/Include/core_cm4.h ****   #define __ASM            __asm                                      /*!< asm keyword for GNU Comp
  95:../Drivers/CMSIS/Include/core_cm4.h ****   #define __INLINE         inline                                     /*!< inline keyword for GNU C
  96:../Drivers/CMSIS/Include/core_cm4.h ****   #define __STATIC_INLINE  static inline
  97:../Drivers/CMSIS/Include/core_cm4.h **** 
  98:../Drivers/CMSIS/Include/core_cm4.h **** #elif defined ( __TASKING__ )
  99:../Drivers/CMSIS/Include/core_cm4.h ****   #define __ASM            __asm                                      /*!< asm keyword for TASKING 
 100:../Drivers/CMSIS/Include/core_cm4.h ****   #define __INLINE         inline                                     /*!< inline keyword for TASKI
 101:../Drivers/CMSIS/Include/core_cm4.h ****   #define __STATIC_INLINE  static inline
 102:../Drivers/CMSIS/Include/core_cm4.h **** 
 103:../Drivers/CMSIS/Include/core_cm4.h **** #endif
 104:../Drivers/CMSIS/Include/core_cm4.h **** 
 105:../Drivers/CMSIS/Include/core_cm4.h **** /** __FPU_USED indicates whether an FPU is used or not. For this, __FPU_PRESENT has to be checked p
 106:../Drivers/CMSIS/Include/core_cm4.h **** */
 107:../Drivers/CMSIS/Include/core_cm4.h **** #if defined ( __CC_ARM )
 108:../Drivers/CMSIS/Include/core_cm4.h ****   #if defined __TARGET_FPU_VFP
 109:../Drivers/CMSIS/Include/core_cm4.h ****     #if (__FPU_PRESENT == 1)
 110:../Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       1
 111:../Drivers/CMSIS/Include/core_cm4.h ****     #else
 112:../Drivers/CMSIS/Include/core_cm4.h ****       #warning "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESEN
 113:../Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       0
 114:../Drivers/CMSIS/Include/core_cm4.h ****     #endif
 115:../Drivers/CMSIS/Include/core_cm4.h ****   #else
 116:../Drivers/CMSIS/Include/core_cm4.h ****     #define __FPU_USED         0
 117:../Drivers/CMSIS/Include/core_cm4.h ****   #endif
 118:../Drivers/CMSIS/Include/core_cm4.h **** 
 119:../Drivers/CMSIS/Include/core_cm4.h **** #elif defined ( __ICCARM__ )
 120:../Drivers/CMSIS/Include/core_cm4.h ****   #if defined __ARMVFP__
 121:../Drivers/CMSIS/Include/core_cm4.h ****     #if (__FPU_PRESENT == 1)
 122:../Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       1
 123:../Drivers/CMSIS/Include/core_cm4.h ****     #else
 124:../Drivers/CMSIS/Include/core_cm4.h ****       #warning "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESEN
 125:../Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       0
 126:../Drivers/CMSIS/Include/core_cm4.h ****     #endif
 127:../Drivers/CMSIS/Include/core_cm4.h ****   #else
 128:../Drivers/CMSIS/Include/core_cm4.h ****     #define __FPU_USED         0
 129:../Drivers/CMSIS/Include/core_cm4.h ****   #endif
 130:../Drivers/CMSIS/Include/core_cm4.h **** 
 131:../Drivers/CMSIS/Include/core_cm4.h **** #elif defined ( __TMS470__ )
 132:../Drivers/CMSIS/Include/core_cm4.h ****   #if defined __TI_VFP_SUPPORT__
 133:../Drivers/CMSIS/Include/core_cm4.h ****     #if (__FPU_PRESENT == 1)
 134:../Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       1
 135:../Drivers/CMSIS/Include/core_cm4.h ****     #else
 136:../Drivers/CMSIS/Include/core_cm4.h ****       #warning "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESEN
 137:../Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       0
 138:../Drivers/CMSIS/Include/core_cm4.h ****     #endif
 139:../Drivers/CMSIS/Include/core_cm4.h ****   #else
 140:../Drivers/CMSIS/Include/core_cm4.h ****     #define __FPU_USED         0
 141:../Drivers/CMSIS/Include/core_cm4.h ****   #endif
 142:../Drivers/CMSIS/Include/core_cm4.h **** 
 143:../Drivers/CMSIS/Include/core_cm4.h **** #elif defined ( __GNUC__ )
ARM GAS  /tmp/ccYchH6m.s 			page 7


 144:../Drivers/CMSIS/Include/core_cm4.h ****   #if defined (__VFP_FP__) && !defined(__SOFTFP__)
 145:../Drivers/CMSIS/Include/core_cm4.h ****     #if (__FPU_PRESENT == 1)
 146:../Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       1
 147:../Drivers/CMSIS/Include/core_cm4.h ****     #else
 148:../Drivers/CMSIS/Include/core_cm4.h ****       #warning "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESEN
 149:../Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       0
 150:../Drivers/CMSIS/Include/core_cm4.h ****     #endif
 151:../Drivers/CMSIS/Include/core_cm4.h ****   #else
 152:../Drivers/CMSIS/Include/core_cm4.h ****     #define __FPU_USED         0
 153:../Drivers/CMSIS/Include/core_cm4.h ****   #endif
 154:../Drivers/CMSIS/Include/core_cm4.h **** 
 155:../Drivers/CMSIS/Include/core_cm4.h **** #elif defined ( __TASKING__ )
 156:../Drivers/CMSIS/Include/core_cm4.h ****   #if defined __FPU_VFP__
 157:../Drivers/CMSIS/Include/core_cm4.h ****     #if (__FPU_PRESENT == 1)
 158:../Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       1
 159:../Drivers/CMSIS/Include/core_cm4.h ****     #else
 160:../Drivers/CMSIS/Include/core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 161:../Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       0
 162:../Drivers/CMSIS/Include/core_cm4.h ****     #endif
 163:../Drivers/CMSIS/Include/core_cm4.h ****   #else
 164:../Drivers/CMSIS/Include/core_cm4.h ****     #define __FPU_USED         0
 165:../Drivers/CMSIS/Include/core_cm4.h ****   #endif
 166:../Drivers/CMSIS/Include/core_cm4.h **** #endif
 167:../Drivers/CMSIS/Include/core_cm4.h **** 
 168:../Drivers/CMSIS/Include/core_cm4.h **** #include <stdint.h>                      /* standard types definitions                      */
 169:../Drivers/CMSIS/Include/core_cm4.h **** #include <core_cmInstr.h>                /* Core Instruction Access                         */
 170:../Drivers/CMSIS/Include/core_cm4.h **** #include <core_cmFunc.h>                 /* Core Function Access                            */
 171:../Drivers/CMSIS/Include/core_cm4.h **** #include <core_cm4_simd.h>               /* Compiler specific SIMD Intrinsics               */
 172:../Drivers/CMSIS/Include/core_cm4.h **** 
 173:../Drivers/CMSIS/Include/core_cm4.h **** #endif /* __CORE_CM4_H_GENERIC */
 174:../Drivers/CMSIS/Include/core_cm4.h **** 
 175:../Drivers/CMSIS/Include/core_cm4.h **** #ifndef __CMSIS_GENERIC
 176:../Drivers/CMSIS/Include/core_cm4.h **** 
 177:../Drivers/CMSIS/Include/core_cm4.h **** #ifndef __CORE_CM4_H_DEPENDANT
 178:../Drivers/CMSIS/Include/core_cm4.h **** #define __CORE_CM4_H_DEPENDANT
 179:../Drivers/CMSIS/Include/core_cm4.h **** 
 180:../Drivers/CMSIS/Include/core_cm4.h **** /* check device defines and use defaults */
 181:../Drivers/CMSIS/Include/core_cm4.h **** #if defined __CHECK_DEVICE_DEFINES
 182:../Drivers/CMSIS/Include/core_cm4.h ****   #ifndef __CM4_REV
 183:../Drivers/CMSIS/Include/core_cm4.h ****     #define __CM4_REV               0x0000
 184:../Drivers/CMSIS/Include/core_cm4.h ****     #warning "__CM4_REV not defined in device header file; using default!"
 185:../Drivers/CMSIS/Include/core_cm4.h ****   #endif
 186:../Drivers/CMSIS/Include/core_cm4.h **** 
 187:../Drivers/CMSIS/Include/core_cm4.h ****   #ifndef __FPU_PRESENT
 188:../Drivers/CMSIS/Include/core_cm4.h ****     #define __FPU_PRESENT             0
 189:../Drivers/CMSIS/Include/core_cm4.h ****     #warning "__FPU_PRESENT not defined in device header file; using default!"
 190:../Drivers/CMSIS/Include/core_cm4.h ****   #endif
 191:../Drivers/CMSIS/Include/core_cm4.h **** 
 192:../Drivers/CMSIS/Include/core_cm4.h ****   #ifndef __MPU_PRESENT
 193:../Drivers/CMSIS/Include/core_cm4.h ****     #define __MPU_PRESENT             0
 194:../Drivers/CMSIS/Include/core_cm4.h ****     #warning "__MPU_PRESENT not defined in device header file; using default!"
 195:../Drivers/CMSIS/Include/core_cm4.h ****   #endif
 196:../Drivers/CMSIS/Include/core_cm4.h **** 
 197:../Drivers/CMSIS/Include/core_cm4.h ****   #ifndef __NVIC_PRIO_BITS
 198:../Drivers/CMSIS/Include/core_cm4.h ****     #define __NVIC_PRIO_BITS          4
 199:../Drivers/CMSIS/Include/core_cm4.h ****     #warning "__NVIC_PRIO_BITS not defined in device header file; using default!"
 200:../Drivers/CMSIS/Include/core_cm4.h ****   #endif
ARM GAS  /tmp/ccYchH6m.s 			page 8


 201:../Drivers/CMSIS/Include/core_cm4.h **** 
 202:../Drivers/CMSIS/Include/core_cm4.h ****   #ifndef __Vendor_SysTickConfig
 203:../Drivers/CMSIS/Include/core_cm4.h ****     #define __Vendor_SysTickConfig    0
 204:../Drivers/CMSIS/Include/core_cm4.h ****     #warning "__Vendor_SysTickConfig not defined in device header file; using default!"
 205:../Drivers/CMSIS/Include/core_cm4.h ****   #endif
 206:../Drivers/CMSIS/Include/core_cm4.h **** #endif
 207:../Drivers/CMSIS/Include/core_cm4.h **** 
 208:../Drivers/CMSIS/Include/core_cm4.h **** /* IO definitions (access restrictions to peripheral registers) */
 209:../Drivers/CMSIS/Include/core_cm4.h **** /**
 210:../Drivers/CMSIS/Include/core_cm4.h ****     \defgroup CMSIS_glob_defs CMSIS Global Defines
 211:../Drivers/CMSIS/Include/core_cm4.h **** 
 212:../Drivers/CMSIS/Include/core_cm4.h ****     <strong>IO Type Qualifiers</strong> are used
 213:../Drivers/CMSIS/Include/core_cm4.h ****     \li to specify the access to peripheral variables.
 214:../Drivers/CMSIS/Include/core_cm4.h ****     \li for automatic generation of peripheral register debug information.
 215:../Drivers/CMSIS/Include/core_cm4.h **** */
 216:../Drivers/CMSIS/Include/core_cm4.h **** #ifdef __cplusplus
 217:../Drivers/CMSIS/Include/core_cm4.h ****   #define   __I     volatile             /*!< Defines 'read only' permissions                 */
 218:../Drivers/CMSIS/Include/core_cm4.h **** #else
 219:../Drivers/CMSIS/Include/core_cm4.h ****   #define   __I     volatile const       /*!< Defines 'read only' permissions                 */
 220:../Drivers/CMSIS/Include/core_cm4.h **** #endif
 221:../Drivers/CMSIS/Include/core_cm4.h **** #define     __O     volatile             /*!< Defines 'write only' permissions                */
 222:../Drivers/CMSIS/Include/core_cm4.h **** #define     __IO    volatile             /*!< Defines 'read / write' permissions              */
 223:../Drivers/CMSIS/Include/core_cm4.h **** 
 224:../Drivers/CMSIS/Include/core_cm4.h **** /*@} end of group Cortex_M4 */
 225:../Drivers/CMSIS/Include/core_cm4.h **** 
 226:../Drivers/CMSIS/Include/core_cm4.h **** 
 227:../Drivers/CMSIS/Include/core_cm4.h **** 
 228:../Drivers/CMSIS/Include/core_cm4.h **** /*******************************************************************************
 229:../Drivers/CMSIS/Include/core_cm4.h ****  *                 Register Abstraction
 230:../Drivers/CMSIS/Include/core_cm4.h ****   Core Register contain:
 231:../Drivers/CMSIS/Include/core_cm4.h ****   - Core Register
 232:../Drivers/CMSIS/Include/core_cm4.h ****   - Core NVIC Register
 233:../Drivers/CMSIS/Include/core_cm4.h ****   - Core SCB Register
 234:../Drivers/CMSIS/Include/core_cm4.h ****   - Core SysTick Register
 235:../Drivers/CMSIS/Include/core_cm4.h ****   - Core Debug Register
 236:../Drivers/CMSIS/Include/core_cm4.h ****   - Core MPU Register
 237:../Drivers/CMSIS/Include/core_cm4.h ****   - Core FPU Register
 238:../Drivers/CMSIS/Include/core_cm4.h ****  ******************************************************************************/
 239:../Drivers/CMSIS/Include/core_cm4.h **** /** \defgroup CMSIS_core_register Defines and Type Definitions
 240:../Drivers/CMSIS/Include/core_cm4.h ****     \brief Type definitions and defines for Cortex-M processor based devices.
 241:../Drivers/CMSIS/Include/core_cm4.h **** */
 242:../Drivers/CMSIS/Include/core_cm4.h **** 
 243:../Drivers/CMSIS/Include/core_cm4.h **** /** \ingroup    CMSIS_core_register
 244:../Drivers/CMSIS/Include/core_cm4.h ****     \defgroup   CMSIS_CORE  Status and Control Registers
 245:../Drivers/CMSIS/Include/core_cm4.h ****     \brief  Core Register type definitions.
 246:../Drivers/CMSIS/Include/core_cm4.h ****   @{
 247:../Drivers/CMSIS/Include/core_cm4.h ****  */
 248:../Drivers/CMSIS/Include/core_cm4.h **** 
 249:../Drivers/CMSIS/Include/core_cm4.h **** /** \brief  Union type to access the Application Program Status Register (APSR).
 250:../Drivers/CMSIS/Include/core_cm4.h ****  */
 251:../Drivers/CMSIS/Include/core_cm4.h **** typedef union
 252:../Drivers/CMSIS/Include/core_cm4.h **** {
 253:../Drivers/CMSIS/Include/core_cm4.h ****   struct
 254:../Drivers/CMSIS/Include/core_cm4.h ****   {
 255:../Drivers/CMSIS/Include/core_cm4.h **** #if (__CORTEX_M != 0x04)
 256:../Drivers/CMSIS/Include/core_cm4.h ****     uint32_t _reserved0:27;              /*!< bit:  0..26  Reserved                           */
 257:../Drivers/CMSIS/Include/core_cm4.h **** #else
ARM GAS  /tmp/ccYchH6m.s 			page 9


 258:../Drivers/CMSIS/Include/core_cm4.h ****     uint32_t _reserved0:16;              /*!< bit:  0..15  Reserved                           */
 259:../Drivers/CMSIS/Include/core_cm4.h ****     uint32_t GE:4;                       /*!< bit: 16..19  Greater than or Equal flags        */
 260:../Drivers/CMSIS/Include/core_cm4.h ****     uint32_t _reserved1:7;               /*!< bit: 20..26  Reserved                           */
 261:../Drivers/CMSIS/Include/core_cm4.h **** #endif
 262:../Drivers/CMSIS/Include/core_cm4.h ****     uint32_t Q:1;                        /*!< bit:     27  Saturation condition flag          */
 263:../Drivers/CMSIS/Include/core_cm4.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag       */
 264:../Drivers/CMSIS/Include/core_cm4.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag          */
 265:../Drivers/CMSIS/Include/core_cm4.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag           */
 266:../Drivers/CMSIS/Include/core_cm4.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag       */
 267:../Drivers/CMSIS/Include/core_cm4.h ****   } b;                                   /*!< Structure used for bit  access                  */
 268:../Drivers/CMSIS/Include/core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access                  */
 269:../Drivers/CMSIS/Include/core_cm4.h **** } APSR_Type;
 270:../Drivers/CMSIS/Include/core_cm4.h **** 
 271:../Drivers/CMSIS/Include/core_cm4.h **** 
 272:../Drivers/CMSIS/Include/core_cm4.h **** /** \brief  Union type to access the Interrupt Program Status Register (IPSR).
 273:../Drivers/CMSIS/Include/core_cm4.h ****  */
 274:../Drivers/CMSIS/Include/core_cm4.h **** typedef union
 275:../Drivers/CMSIS/Include/core_cm4.h **** {
 276:../Drivers/CMSIS/Include/core_cm4.h ****   struct
 277:../Drivers/CMSIS/Include/core_cm4.h ****   {
 278:../Drivers/CMSIS/Include/core_cm4.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number                   */
 279:../Drivers/CMSIS/Include/core_cm4.h ****     uint32_t _reserved0:23;              /*!< bit:  9..31  Reserved                           */
 280:../Drivers/CMSIS/Include/core_cm4.h ****   } b;                                   /*!< Structure used for bit  access                  */
 281:../Drivers/CMSIS/Include/core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access                  */
 282:../Drivers/CMSIS/Include/core_cm4.h **** } IPSR_Type;
 283:../Drivers/CMSIS/Include/core_cm4.h **** 
 284:../Drivers/CMSIS/Include/core_cm4.h **** 
 285:../Drivers/CMSIS/Include/core_cm4.h **** /** \brief  Union type to access the Special-Purpose Program Status Registers (xPSR).
 286:../Drivers/CMSIS/Include/core_cm4.h ****  */
 287:../Drivers/CMSIS/Include/core_cm4.h **** typedef union
 288:../Drivers/CMSIS/Include/core_cm4.h **** {
 289:../Drivers/CMSIS/Include/core_cm4.h ****   struct
 290:../Drivers/CMSIS/Include/core_cm4.h ****   {
 291:../Drivers/CMSIS/Include/core_cm4.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number                   */
 292:../Drivers/CMSIS/Include/core_cm4.h **** #if (__CORTEX_M != 0x04)
 293:../Drivers/CMSIS/Include/core_cm4.h ****     uint32_t _reserved0:15;              /*!< bit:  9..23  Reserved                           */
 294:../Drivers/CMSIS/Include/core_cm4.h **** #else
 295:../Drivers/CMSIS/Include/core_cm4.h ****     uint32_t _reserved0:7;               /*!< bit:  9..15  Reserved                           */
 296:../Drivers/CMSIS/Include/core_cm4.h ****     uint32_t GE:4;                       /*!< bit: 16..19  Greater than or Equal flags        */
 297:../Drivers/CMSIS/Include/core_cm4.h ****     uint32_t _reserved1:4;               /*!< bit: 20..23  Reserved                           */
 298:../Drivers/CMSIS/Include/core_cm4.h **** #endif
 299:../Drivers/CMSIS/Include/core_cm4.h ****     uint32_t T:1;                        /*!< bit:     24  Thumb bit        (read 0)          */
 300:../Drivers/CMSIS/Include/core_cm4.h ****     uint32_t IT:2;                       /*!< bit: 25..26  saved IT state   (read 0)          */
 301:../Drivers/CMSIS/Include/core_cm4.h ****     uint32_t Q:1;                        /*!< bit:     27  Saturation condition flag          */
 302:../Drivers/CMSIS/Include/core_cm4.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag       */
 303:../Drivers/CMSIS/Include/core_cm4.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag          */
 304:../Drivers/CMSIS/Include/core_cm4.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag           */
 305:../Drivers/CMSIS/Include/core_cm4.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag       */
 306:../Drivers/CMSIS/Include/core_cm4.h ****   } b;                                   /*!< Structure used for bit  access                  */
 307:../Drivers/CMSIS/Include/core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access                  */
 308:../Drivers/CMSIS/Include/core_cm4.h **** } xPSR_Type;
 309:../Drivers/CMSIS/Include/core_cm4.h **** 
 310:../Drivers/CMSIS/Include/core_cm4.h **** 
 311:../Drivers/CMSIS/Include/core_cm4.h **** /** \brief  Union type to access the Control Registers (CONTROL).
 312:../Drivers/CMSIS/Include/core_cm4.h ****  */
 313:../Drivers/CMSIS/Include/core_cm4.h **** typedef union
 314:../Drivers/CMSIS/Include/core_cm4.h **** {
ARM GAS  /tmp/ccYchH6m.s 			page 10


 315:../Drivers/CMSIS/Include/core_cm4.h ****   struct
 316:../Drivers/CMSIS/Include/core_cm4.h ****   {
 317:../Drivers/CMSIS/Include/core_cm4.h ****     uint32_t nPRIV:1;                    /*!< bit:      0  Execution privilege in Thread mode */
 318:../Drivers/CMSIS/Include/core_cm4.h ****     uint32_t SPSEL:1;                    /*!< bit:      1  Stack to be used                   */
 319:../Drivers/CMSIS/Include/core_cm4.h ****     uint32_t FPCA:1;                     /*!< bit:      2  FP extension active flag           */
 320:../Drivers/CMSIS/Include/core_cm4.h ****     uint32_t _reserved0:29;              /*!< bit:  3..31  Reserved                           */
 321:../Drivers/CMSIS/Include/core_cm4.h ****   } b;                                   /*!< Structure used for bit  access                  */
 322:../Drivers/CMSIS/Include/core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access                  */
 323:../Drivers/CMSIS/Include/core_cm4.h **** } CONTROL_Type;
 324:../Drivers/CMSIS/Include/core_cm4.h **** 
 325:../Drivers/CMSIS/Include/core_cm4.h **** /*@} end of group CMSIS_CORE */
 326:../Drivers/CMSIS/Include/core_cm4.h **** 
 327:../Drivers/CMSIS/Include/core_cm4.h **** 
 328:../Drivers/CMSIS/Include/core_cm4.h **** /** \ingroup    CMSIS_core_register
 329:../Drivers/CMSIS/Include/core_cm4.h ****     \defgroup   CMSIS_NVIC  Nested Vectored Interrupt Controller (NVIC)
 330:../Drivers/CMSIS/Include/core_cm4.h ****     \brief      Type definitions for the NVIC Registers
 331:../Drivers/CMSIS/Include/core_cm4.h ****   @{
 332:../Drivers/CMSIS/Include/core_cm4.h ****  */
 333:../Drivers/CMSIS/Include/core_cm4.h **** 
 334:../Drivers/CMSIS/Include/core_cm4.h **** /** \brief  Structure type to access the Nested Vectored Interrupt Controller (NVIC).
 335:../Drivers/CMSIS/Include/core_cm4.h ****  */
 336:../Drivers/CMSIS/Include/core_cm4.h **** typedef struct
 337:../Drivers/CMSIS/Include/core_cm4.h **** {
 338:../Drivers/CMSIS/Include/core_cm4.h ****   __IO uint32_t ISER[8];                 /*!< Offset: 0x000 (R/W)  Interrupt Set Enable Register   
 339:../Drivers/CMSIS/Include/core_cm4.h ****        uint32_t RESERVED0[24];
 340:../Drivers/CMSIS/Include/core_cm4.h ****   __IO uint32_t ICER[8];                 /*!< Offset: 0x080 (R/W)  Interrupt Clear Enable Register 
 341:../Drivers/CMSIS/Include/core_cm4.h ****        uint32_t RSERVED1[24];
 342:../Drivers/CMSIS/Include/core_cm4.h ****   __IO uint32_t ISPR[8];                 /*!< Offset: 0x100 (R/W)  Interrupt Set Pending Register  
 343:../Drivers/CMSIS/Include/core_cm4.h ****        uint32_t RESERVED2[24];
 344:../Drivers/CMSIS/Include/core_cm4.h ****   __IO uint32_t ICPR[8];                 /*!< Offset: 0x180 (R/W)  Interrupt Clear Pending Register
 345:../Drivers/CMSIS/Include/core_cm4.h ****        uint32_t RESERVED3[24];
 346:../Drivers/CMSIS/Include/core_cm4.h ****   __IO uint32_t IABR[8];                 /*!< Offset: 0x200 (R/W)  Interrupt Active bit Register   
 347:../Drivers/CMSIS/Include/core_cm4.h ****        uint32_t RESERVED4[56];
 348:../Drivers/CMSIS/Include/core_cm4.h ****   __IO uint8_t  IP[240];                 /*!< Offset: 0x300 (R/W)  Interrupt Priority Register (8Bi
 349:../Drivers/CMSIS/Include/core_cm4.h ****        uint32_t RESERVED5[644];
 350:../Drivers/CMSIS/Include/core_cm4.h ****   __O  uint32_t STIR;                    /*!< Offset: 0xE00 ( /W)  Software Trigger Interrupt Regis
 351:../Drivers/CMSIS/Include/core_cm4.h **** }  NVIC_Type;
 352:../Drivers/CMSIS/Include/core_cm4.h **** 
 353:../Drivers/CMSIS/Include/core_cm4.h **** /* Software Triggered Interrupt Register Definitions */
 354:../Drivers/CMSIS/Include/core_cm4.h **** #define NVIC_STIR_INTID_Pos                 0                                          /*!< STIR: I
 355:../Drivers/CMSIS/Include/core_cm4.h **** #define NVIC_STIR_INTID_Msk                (0x1FFUL << NVIC_STIR_INTID_Pos)            /*!< STIR: I
 356:../Drivers/CMSIS/Include/core_cm4.h **** 
 357:../Drivers/CMSIS/Include/core_cm4.h **** /*@} end of group CMSIS_NVIC */
 358:../Drivers/CMSIS/Include/core_cm4.h **** 
 359:../Drivers/CMSIS/Include/core_cm4.h **** 
 360:../Drivers/CMSIS/Include/core_cm4.h **** /** \ingroup  CMSIS_core_register
 361:../Drivers/CMSIS/Include/core_cm4.h ****     \defgroup CMSIS_SCB     System Control Block (SCB)
 362:../Drivers/CMSIS/Include/core_cm4.h ****     \brief      Type definitions for the System Control Block Registers
 363:../Drivers/CMSIS/Include/core_cm4.h ****   @{
 364:../Drivers/CMSIS/Include/core_cm4.h ****  */
 365:../Drivers/CMSIS/Include/core_cm4.h **** 
 366:../Drivers/CMSIS/Include/core_cm4.h **** /** \brief  Structure type to access the System Control Block (SCB).
 367:../Drivers/CMSIS/Include/core_cm4.h ****  */
 368:../Drivers/CMSIS/Include/core_cm4.h **** typedef struct
 369:../Drivers/CMSIS/Include/core_cm4.h **** {
 370:../Drivers/CMSIS/Include/core_cm4.h ****   __I  uint32_t CPUID;                   /*!< Offset: 0x000 (R/ )  CPUID Base Register             
 371:../Drivers/CMSIS/Include/core_cm4.h ****   __IO uint32_t ICSR;                    /*!< Offset: 0x004 (R/W)  Interrupt Control and State Regi
ARM GAS  /tmp/ccYchH6m.s 			page 11


 372:../Drivers/CMSIS/Include/core_cm4.h ****   __IO uint32_t VTOR;                    /*!< Offset: 0x008 (R/W)  Vector Table Offset Register    
 373:../Drivers/CMSIS/Include/core_cm4.h ****   __IO uint32_t AIRCR;                   /*!< Offset: 0x00C (R/W)  Application Interrupt and Reset 
 374:../Drivers/CMSIS/Include/core_cm4.h ****   __IO uint32_t SCR;                     /*!< Offset: 0x010 (R/W)  System Control Register         
 375:../Drivers/CMSIS/Include/core_cm4.h ****   __IO uint32_t CCR;                     /*!< Offset: 0x014 (R/W)  Configuration Control Register  
 376:../Drivers/CMSIS/Include/core_cm4.h ****   __IO uint8_t  SHP[12];                 /*!< Offset: 0x018 (R/W)  System Handlers Priority Registe
 377:../Drivers/CMSIS/Include/core_cm4.h ****   __IO uint32_t SHCSR;                   /*!< Offset: 0x024 (R/W)  System Handler Control and State
 378:../Drivers/CMSIS/Include/core_cm4.h ****   __IO uint32_t CFSR;                    /*!< Offset: 0x028 (R/W)  Configurable Fault Status Regist
 379:../Drivers/CMSIS/Include/core_cm4.h ****   __IO uint32_t HFSR;                    /*!< Offset: 0x02C (R/W)  HardFault Status Register       
 380:../Drivers/CMSIS/Include/core_cm4.h ****   __IO uint32_t DFSR;                    /*!< Offset: 0x030 (R/W)  Debug Fault Status Register     
 381:../Drivers/CMSIS/Include/core_cm4.h ****   __IO uint32_t MMFAR;                   /*!< Offset: 0x034 (R/W)  MemManage Fault Address Register
 382:../Drivers/CMSIS/Include/core_cm4.h ****   __IO uint32_t BFAR;                    /*!< Offset: 0x038 (R/W)  BusFault Address Register       
 383:../Drivers/CMSIS/Include/core_cm4.h ****   __IO uint32_t AFSR;                    /*!< Offset: 0x03C (R/W)  Auxiliary Fault Status Register 
 384:../Drivers/CMSIS/Include/core_cm4.h ****   __I  uint32_t PFR[2];                  /*!< Offset: 0x040 (R/ )  Processor Feature Register      
 385:../Drivers/CMSIS/Include/core_cm4.h ****   __I  uint32_t DFR;                     /*!< Offset: 0x048 (R/ )  Debug Feature Register          
 386:../Drivers/CMSIS/Include/core_cm4.h ****   __I  uint32_t ADR;                     /*!< Offset: 0x04C (R/ )  Auxiliary Feature Register      
 387:../Drivers/CMSIS/Include/core_cm4.h ****   __I  uint32_t MMFR[4];                 /*!< Offset: 0x050 (R/ )  Memory Model Feature Register   
 388:../Drivers/CMSIS/Include/core_cm4.h ****   __I  uint32_t ISAR[5];                 /*!< Offset: 0x060 (R/ )  Instruction Set Attributes Regis
 389:../Drivers/CMSIS/Include/core_cm4.h ****        uint32_t RESERVED0[5];
 390:../Drivers/CMSIS/Include/core_cm4.h ****   __IO uint32_t CPACR;                   /*!< Offset: 0x088 (R/W)  Coprocessor Access Control Regis
 391:../Drivers/CMSIS/Include/core_cm4.h **** } SCB_Type;
 392:../Drivers/CMSIS/Include/core_cm4.h **** 
 393:../Drivers/CMSIS/Include/core_cm4.h **** /* SCB CPUID Register Definitions */
 394:../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CPUID_IMPLEMENTER_Pos          24                                             /*!< SCB 
 395:../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CPUID_IMPLEMENTER_Msk          (0xFFUL << SCB_CPUID_IMPLEMENTER_Pos)          /*!< SCB 
 396:../Drivers/CMSIS/Include/core_cm4.h **** 
 397:../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CPUID_VARIANT_Pos              20                                             /*!< SCB 
 398:../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CPUID_VARIANT_Msk              (0xFUL << SCB_CPUID_VARIANT_Pos)               /*!< SCB 
 399:../Drivers/CMSIS/Include/core_cm4.h **** 
 400:../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CPUID_ARCHITECTURE_Pos         16                                             /*!< SCB 
 401:../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CPUID_ARCHITECTURE_Msk         (0xFUL << SCB_CPUID_ARCHITECTURE_Pos)          /*!< SCB 
 402:../Drivers/CMSIS/Include/core_cm4.h **** 
 403:../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CPUID_PARTNO_Pos                4                                             /*!< SCB 
 404:../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CPUID_PARTNO_Msk               (0xFFFUL << SCB_CPUID_PARTNO_Pos)              /*!< SCB 
 405:../Drivers/CMSIS/Include/core_cm4.h **** 
 406:../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CPUID_REVISION_Pos              0                                             /*!< SCB 
 407:../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CPUID_REVISION_Msk             (0xFUL << SCB_CPUID_REVISION_Pos)              /*!< SCB 
 408:../Drivers/CMSIS/Include/core_cm4.h **** 
 409:../Drivers/CMSIS/Include/core_cm4.h **** /* SCB Interrupt Control State Register Definitions */
 410:../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_NMIPENDSET_Pos            31                                             /*!< SCB 
 411:../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_NMIPENDSET_Msk            (1UL << SCB_ICSR_NMIPENDSET_Pos)               /*!< SCB 
 412:../Drivers/CMSIS/Include/core_cm4.h **** 
 413:../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_PENDSVSET_Pos             28                                             /*!< SCB 
 414:../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_PENDSVSET_Msk             (1UL << SCB_ICSR_PENDSVSET_Pos)                /*!< SCB 
 415:../Drivers/CMSIS/Include/core_cm4.h **** 
 416:../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_PENDSVCLR_Pos             27                                             /*!< SCB 
 417:../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_PENDSVCLR_Msk             (1UL << SCB_ICSR_PENDSVCLR_Pos)                /*!< SCB 
 418:../Drivers/CMSIS/Include/core_cm4.h **** 
 419:../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_PENDSTSET_Pos             26                                             /*!< SCB 
 420:../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_PENDSTSET_Msk             (1UL << SCB_ICSR_PENDSTSET_Pos)                /*!< SCB 
 421:../Drivers/CMSIS/Include/core_cm4.h **** 
 422:../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_PENDSTCLR_Pos             25                                             /*!< SCB 
 423:../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_PENDSTCLR_Msk             (1UL << SCB_ICSR_PENDSTCLR_Pos)                /*!< SCB 
 424:../Drivers/CMSIS/Include/core_cm4.h **** 
 425:../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_ISRPREEMPT_Pos            23                                             /*!< SCB 
 426:../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_ISRPREEMPT_Msk            (1UL << SCB_ICSR_ISRPREEMPT_Pos)               /*!< SCB 
 427:../Drivers/CMSIS/Include/core_cm4.h **** 
 428:../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_ISRPENDING_Pos            22                                             /*!< SCB 
ARM GAS  /tmp/ccYchH6m.s 			page 12


 429:../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_ISRPENDING_Msk            (1UL << SCB_ICSR_ISRPENDING_Pos)               /*!< SCB 
 430:../Drivers/CMSIS/Include/core_cm4.h **** 
 431:../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_VECTPENDING_Pos           12                                             /*!< SCB 
 432:../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_VECTPENDING_Msk           (0x1FFUL << SCB_ICSR_VECTPENDING_Pos)          /*!< SCB 
 433:../Drivers/CMSIS/Include/core_cm4.h **** 
 434:../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_RETTOBASE_Pos             11                                             /*!< SCB 
 435:../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_RETTOBASE_Msk             (1UL << SCB_ICSR_RETTOBASE_Pos)                /*!< SCB 
 436:../Drivers/CMSIS/Include/core_cm4.h **** 
 437:../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_VECTACTIVE_Pos             0                                             /*!< SCB 
 438:../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_VECTACTIVE_Msk            (0x1FFUL << SCB_ICSR_VECTACTIVE_Pos)           /*!< SCB 
 439:../Drivers/CMSIS/Include/core_cm4.h **** 
 440:../Drivers/CMSIS/Include/core_cm4.h **** /* SCB Vector Table Offset Register Definitions */
 441:../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_VTOR_TBLOFF_Pos                 7                                             /*!< SCB 
 442:../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_VTOR_TBLOFF_Msk                (0x1FFFFFFUL << SCB_VTOR_TBLOFF_Pos)           /*!< SCB 
 443:../Drivers/CMSIS/Include/core_cm4.h **** 
 444:../Drivers/CMSIS/Include/core_cm4.h **** /* SCB Application Interrupt and Reset Control Register Definitions */
 445:../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_VECTKEY_Pos              16                                             /*!< SCB 
 446:../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_VECTKEY_Msk              (0xFFFFUL << SCB_AIRCR_VECTKEY_Pos)            /*!< SCB 
 447:../Drivers/CMSIS/Include/core_cm4.h **** 
 448:../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_VECTKEYSTAT_Pos          16                                             /*!< SCB 
 449:../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_VECTKEYSTAT_Msk          (0xFFFFUL << SCB_AIRCR_VECTKEYSTAT_Pos)        /*!< SCB 
 450:../Drivers/CMSIS/Include/core_cm4.h **** 
 451:../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_ENDIANESS_Pos            15                                             /*!< SCB 
 452:../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_ENDIANESS_Msk            (1UL << SCB_AIRCR_ENDIANESS_Pos)               /*!< SCB 
 453:../Drivers/CMSIS/Include/core_cm4.h **** 
 454:../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_PRIGROUP_Pos              8                                             /*!< SCB 
 455:../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_PRIGROUP_Msk             (7UL << SCB_AIRCR_PRIGROUP_Pos)                /*!< SCB 
 456:../Drivers/CMSIS/Include/core_cm4.h **** 
 457:../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_SYSRESETREQ_Pos           2                                             /*!< SCB 
 458:../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_SYSRESETREQ_Msk          (1UL << SCB_AIRCR_SYSRESETREQ_Pos)             /*!< SCB 
 459:../Drivers/CMSIS/Include/core_cm4.h **** 
 460:../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_VECTCLRACTIVE_Pos         1                                             /*!< SCB 
 461:../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_VECTCLRACTIVE_Msk        (1UL << SCB_AIRCR_VECTCLRACTIVE_Pos)           /*!< SCB 
 462:../Drivers/CMSIS/Include/core_cm4.h **** 
 463:../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_VECTRESET_Pos             0                                             /*!< SCB 
 464:../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_VECTRESET_Msk            (1UL << SCB_AIRCR_VECTRESET_Pos)               /*!< SCB 
 465:../Drivers/CMSIS/Include/core_cm4.h **** 
 466:../Drivers/CMSIS/Include/core_cm4.h **** /* SCB System Control Register Definitions */
 467:../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SCR_SEVONPEND_Pos               4                                             /*!< SCB 
 468:../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SCR_SEVONPEND_Msk              (1UL << SCB_SCR_SEVONPEND_Pos)                 /*!< SCB 
 469:../Drivers/CMSIS/Include/core_cm4.h **** 
 470:../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SCR_SLEEPDEEP_Pos               2                                             /*!< SCB 
 471:../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SCR_SLEEPDEEP_Msk              (1UL << SCB_SCR_SLEEPDEEP_Pos)                 /*!< SCB 
 472:../Drivers/CMSIS/Include/core_cm4.h **** 
 473:../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SCR_SLEEPONEXIT_Pos             1                                             /*!< SCB 
 474:../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SCR_SLEEPONEXIT_Msk            (1UL << SCB_SCR_SLEEPONEXIT_Pos)               /*!< SCB 
 475:../Drivers/CMSIS/Include/core_cm4.h **** 
 476:../Drivers/CMSIS/Include/core_cm4.h **** /* SCB Configuration Control Register Definitions */
 477:../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CCR_STKALIGN_Pos                9                                             /*!< SCB 
 478:../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CCR_STKALIGN_Msk               (1UL << SCB_CCR_STKALIGN_Pos)                  /*!< SCB 
 479:../Drivers/CMSIS/Include/core_cm4.h **** 
 480:../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CCR_BFHFNMIGN_Pos               8                                             /*!< SCB 
 481:../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CCR_BFHFNMIGN_Msk              (1UL << SCB_CCR_BFHFNMIGN_Pos)                 /*!< SCB 
 482:../Drivers/CMSIS/Include/core_cm4.h **** 
 483:../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CCR_DIV_0_TRP_Pos               4                                             /*!< SCB 
 484:../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CCR_DIV_0_TRP_Msk              (1UL << SCB_CCR_DIV_0_TRP_Pos)                 /*!< SCB 
 485:../Drivers/CMSIS/Include/core_cm4.h **** 
ARM GAS  /tmp/ccYchH6m.s 			page 13


 486:../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CCR_UNALIGN_TRP_Pos             3                                             /*!< SCB 
 487:../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CCR_UNALIGN_TRP_Msk            (1UL << SCB_CCR_UNALIGN_TRP_Pos)               /*!< SCB 
 488:../Drivers/CMSIS/Include/core_cm4.h **** 
 489:../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CCR_USERSETMPEND_Pos            1                                             /*!< SCB 
 490:../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CCR_USERSETMPEND_Msk           (1UL << SCB_CCR_USERSETMPEND_Pos)              /*!< SCB 
 491:../Drivers/CMSIS/Include/core_cm4.h **** 
 492:../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CCR_NONBASETHRDENA_Pos          0                                             /*!< SCB 
 493:../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CCR_NONBASETHRDENA_Msk         (1UL << SCB_CCR_NONBASETHRDENA_Pos)            /*!< SCB 
 494:../Drivers/CMSIS/Include/core_cm4.h **** 
 495:../Drivers/CMSIS/Include/core_cm4.h **** /* SCB System Handler Control and State Register Definitions */
 496:../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_USGFAULTENA_Pos          18                                             /*!< SCB 
 497:../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_USGFAULTENA_Msk          (1UL << SCB_SHCSR_USGFAULTENA_Pos)             /*!< SCB 
 498:../Drivers/CMSIS/Include/core_cm4.h **** 
 499:../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_BUSFAULTENA_Pos          17                                             /*!< SCB 
 500:../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_BUSFAULTENA_Msk          (1UL << SCB_SHCSR_BUSFAULTENA_Pos)             /*!< SCB 
 501:../Drivers/CMSIS/Include/core_cm4.h **** 
 502:../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_MEMFAULTENA_Pos          16                                             /*!< SCB 
 503:../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_MEMFAULTENA_Msk          (1UL << SCB_SHCSR_MEMFAULTENA_Pos)             /*!< SCB 
 504:../Drivers/CMSIS/Include/core_cm4.h **** 
 505:../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_SVCALLPENDED_Pos         15                                             /*!< SCB 
 506:../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_SVCALLPENDED_Msk         (1UL << SCB_SHCSR_SVCALLPENDED_Pos)            /*!< SCB 
 507:../Drivers/CMSIS/Include/core_cm4.h **** 
 508:../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_BUSFAULTPENDED_Pos       14                                             /*!< SCB 
 509:../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_BUSFAULTPENDED_Msk       (1UL << SCB_SHCSR_BUSFAULTPENDED_Pos)          /*!< SCB 
 510:../Drivers/CMSIS/Include/core_cm4.h **** 
 511:../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_MEMFAULTPENDED_Pos       13                                             /*!< SCB 
 512:../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_MEMFAULTPENDED_Msk       (1UL << SCB_SHCSR_MEMFAULTPENDED_Pos)          /*!< SCB 
 513:../Drivers/CMSIS/Include/core_cm4.h **** 
 514:../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_USGFAULTPENDED_Pos       12                                             /*!< SCB 
 515:../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_USGFAULTPENDED_Msk       (1UL << SCB_SHCSR_USGFAULTPENDED_Pos)          /*!< SCB 
 516:../Drivers/CMSIS/Include/core_cm4.h **** 
 517:../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_SYSTICKACT_Pos           11                                             /*!< SCB 
 518:../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_SYSTICKACT_Msk           (1UL << SCB_SHCSR_SYSTICKACT_Pos)              /*!< SCB 
 519:../Drivers/CMSIS/Include/core_cm4.h **** 
 520:../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_PENDSVACT_Pos            10                                             /*!< SCB 
 521:../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_PENDSVACT_Msk            (1UL << SCB_SHCSR_PENDSVACT_Pos)               /*!< SCB 
 522:../Drivers/CMSIS/Include/core_cm4.h **** 
 523:../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_MONITORACT_Pos            8                                             /*!< SCB 
 524:../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_MONITORACT_Msk           (1UL << SCB_SHCSR_MONITORACT_Pos)              /*!< SCB 
 525:../Drivers/CMSIS/Include/core_cm4.h **** 
 526:../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_SVCALLACT_Pos             7                                             /*!< SCB 
 527:../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_SVCALLACT_Msk            (1UL << SCB_SHCSR_SVCALLACT_Pos)               /*!< SCB 
 528:../Drivers/CMSIS/Include/core_cm4.h **** 
 529:../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_USGFAULTACT_Pos           3                                             /*!< SCB 
 530:../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_USGFAULTACT_Msk          (1UL << SCB_SHCSR_USGFAULTACT_Pos)             /*!< SCB 
 531:../Drivers/CMSIS/Include/core_cm4.h **** 
 532:../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_BUSFAULTACT_Pos           1                                             /*!< SCB 
 533:../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_BUSFAULTACT_Msk          (1UL << SCB_SHCSR_BUSFAULTACT_Pos)             /*!< SCB 
 534:../Drivers/CMSIS/Include/core_cm4.h **** 
 535:../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_MEMFAULTACT_Pos           0                                             /*!< SCB 
 536:../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_MEMFAULTACT_Msk          (1UL << SCB_SHCSR_MEMFAULTACT_Pos)             /*!< SCB 
 537:../Drivers/CMSIS/Include/core_cm4.h **** 
 538:../Drivers/CMSIS/Include/core_cm4.h **** /* SCB Configurable Fault Status Registers Definitions */
 539:../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_USGFAULTSR_Pos            16                                             /*!< SCB 
 540:../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_USGFAULTSR_Msk            (0xFFFFUL << SCB_CFSR_USGFAULTSR_Pos)          /*!< SCB 
 541:../Drivers/CMSIS/Include/core_cm4.h **** 
 542:../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_BUSFAULTSR_Pos             8                                             /*!< SCB 
ARM GAS  /tmp/ccYchH6m.s 			page 14


 543:../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_BUSFAULTSR_Msk            (0xFFUL << SCB_CFSR_BUSFAULTSR_Pos)            /*!< SCB 
 544:../Drivers/CMSIS/Include/core_cm4.h **** 
 545:../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_MEMFAULTSR_Pos             0                                             /*!< SCB 
 546:../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_MEMFAULTSR_Msk            (0xFFUL << SCB_CFSR_MEMFAULTSR_Pos)            /*!< SCB 
 547:../Drivers/CMSIS/Include/core_cm4.h **** 
 548:../Drivers/CMSIS/Include/core_cm4.h **** /* SCB Hard Fault Status Registers Definitions */
 549:../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_HFSR_DEBUGEVT_Pos              31                                             /*!< SCB 
 550:../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_HFSR_DEBUGEVT_Msk              (1UL << SCB_HFSR_DEBUGEVT_Pos)                 /*!< SCB 
 551:../Drivers/CMSIS/Include/core_cm4.h **** 
 552:../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_HFSR_FORCED_Pos                30                                             /*!< SCB 
 553:../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_HFSR_FORCED_Msk                (1UL << SCB_HFSR_FORCED_Pos)                   /*!< SCB 
 554:../Drivers/CMSIS/Include/core_cm4.h **** 
 555:../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_HFSR_VECTTBL_Pos                1                                             /*!< SCB 
 556:../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_HFSR_VECTTBL_Msk               (1UL << SCB_HFSR_VECTTBL_Pos)                  /*!< SCB 
 557:../Drivers/CMSIS/Include/core_cm4.h **** 
 558:../Drivers/CMSIS/Include/core_cm4.h **** /* SCB Debug Fault Status Register Definitions */
 559:../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_DFSR_EXTERNAL_Pos               4                                             /*!< SCB 
 560:../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_DFSR_EXTERNAL_Msk              (1UL << SCB_DFSR_EXTERNAL_Pos)                 /*!< SCB 
 561:../Drivers/CMSIS/Include/core_cm4.h **** 
 562:../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_DFSR_VCATCH_Pos                 3                                             /*!< SCB 
 563:../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_DFSR_VCATCH_Msk                (1UL << SCB_DFSR_VCATCH_Pos)                   /*!< SCB 
 564:../Drivers/CMSIS/Include/core_cm4.h **** 
 565:../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_DFSR_DWTTRAP_Pos                2                                             /*!< SCB 
 566:../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_DFSR_DWTTRAP_Msk               (1UL << SCB_DFSR_DWTTRAP_Pos)                  /*!< SCB 
 567:../Drivers/CMSIS/Include/core_cm4.h **** 
 568:../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_DFSR_BKPT_Pos                   1                                             /*!< SCB 
 569:../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_DFSR_BKPT_Msk                  (1UL << SCB_DFSR_BKPT_Pos)                     /*!< SCB 
 570:../Drivers/CMSIS/Include/core_cm4.h **** 
 571:../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_DFSR_HALTED_Pos                 0                                             /*!< SCB 
 572:../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_DFSR_HALTED_Msk                (1UL << SCB_DFSR_HALTED_Pos)                   /*!< SCB 
 573:../Drivers/CMSIS/Include/core_cm4.h **** 
 574:../Drivers/CMSIS/Include/core_cm4.h **** /*@} end of group CMSIS_SCB */
 575:../Drivers/CMSIS/Include/core_cm4.h **** 
 576:../Drivers/CMSIS/Include/core_cm4.h **** 
 577:../Drivers/CMSIS/Include/core_cm4.h **** /** \ingroup  CMSIS_core_register
 578:../Drivers/CMSIS/Include/core_cm4.h ****     \defgroup CMSIS_SCnSCB System Controls not in SCB (SCnSCB)
 579:../Drivers/CMSIS/Include/core_cm4.h ****     \brief      Type definitions for the System Control and ID Register not in the SCB
 580:../Drivers/CMSIS/Include/core_cm4.h ****   @{
 581:../Drivers/CMSIS/Include/core_cm4.h ****  */
 582:../Drivers/CMSIS/Include/core_cm4.h **** 
 583:../Drivers/CMSIS/Include/core_cm4.h **** /** \brief  Structure type to access the System Control and ID Register not in the SCB.
 584:../Drivers/CMSIS/Include/core_cm4.h ****  */
 585:../Drivers/CMSIS/Include/core_cm4.h **** typedef struct
 586:../Drivers/CMSIS/Include/core_cm4.h **** {
 587:../Drivers/CMSIS/Include/core_cm4.h ****        uint32_t RESERVED0[1];
 588:../Drivers/CMSIS/Include/core_cm4.h ****   __I  uint32_t ICTR;                    /*!< Offset: 0x004 (R/ )  Interrupt Controller Type Regist
 589:../Drivers/CMSIS/Include/core_cm4.h ****   __IO uint32_t ACTLR;                   /*!< Offset: 0x008 (R/W)  Auxiliary Control Register      
 590:../Drivers/CMSIS/Include/core_cm4.h **** } SCnSCB_Type;
 591:../Drivers/CMSIS/Include/core_cm4.h **** 
 592:../Drivers/CMSIS/Include/core_cm4.h **** /* Interrupt Controller Type Register Definitions */
 593:../Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB_ICTR_INTLINESNUM_Pos         0                                          /*!< ICTR: I
 594:../Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB_ICTR_INTLINESNUM_Msk        (0xFUL << SCnSCB_ICTR_INTLINESNUM_Pos)      /*!< ICTR: I
 595:../Drivers/CMSIS/Include/core_cm4.h **** 
 596:../Drivers/CMSIS/Include/core_cm4.h **** /* Auxiliary Control Register Definitions */
 597:../Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISOOFP_Pos            9                                          /*!< ACTLR: 
 598:../Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISOOFP_Msk           (1UL << SCnSCB_ACTLR_DISOOFP_Pos)           /*!< ACTLR: 
 599:../Drivers/CMSIS/Include/core_cm4.h **** 
ARM GAS  /tmp/ccYchH6m.s 			page 15


 600:../Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISFPCA_Pos            8                                          /*!< ACTLR: 
 601:../Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISFPCA_Msk           (1UL << SCnSCB_ACTLR_DISFPCA_Pos)           /*!< ACTLR: 
 602:../Drivers/CMSIS/Include/core_cm4.h **** 
 603:../Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISFOLD_Pos            2                                          /*!< ACTLR: 
 604:../Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISFOLD_Msk           (1UL << SCnSCB_ACTLR_DISFOLD_Pos)           /*!< ACTLR: 
 605:../Drivers/CMSIS/Include/core_cm4.h **** 
 606:../Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISDEFWBUF_Pos         1                                          /*!< ACTLR: 
 607:../Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISDEFWBUF_Msk        (1UL << SCnSCB_ACTLR_DISDEFWBUF_Pos)        /*!< ACTLR: 
 608:../Drivers/CMSIS/Include/core_cm4.h **** 
 609:../Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISMCYCINT_Pos         0                                          /*!< ACTLR: 
 610:../Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISMCYCINT_Msk        (1UL << SCnSCB_ACTLR_DISMCYCINT_Pos)        /*!< ACTLR: 
 611:../Drivers/CMSIS/Include/core_cm4.h **** 
 612:../Drivers/CMSIS/Include/core_cm4.h **** /*@} end of group CMSIS_SCnotSCB */
 613:../Drivers/CMSIS/Include/core_cm4.h **** 
 614:../Drivers/CMSIS/Include/core_cm4.h **** 
 615:../Drivers/CMSIS/Include/core_cm4.h **** /** \ingroup  CMSIS_core_register
 616:../Drivers/CMSIS/Include/core_cm4.h ****     \defgroup CMSIS_SysTick     System Tick Timer (SysTick)
 617:../Drivers/CMSIS/Include/core_cm4.h ****     \brief      Type definitions for the System Timer Registers.
 618:../Drivers/CMSIS/Include/core_cm4.h ****   @{
 619:../Drivers/CMSIS/Include/core_cm4.h ****  */
 620:../Drivers/CMSIS/Include/core_cm4.h **** 
 621:../Drivers/CMSIS/Include/core_cm4.h **** /** \brief  Structure type to access the System Timer (SysTick).
 622:../Drivers/CMSIS/Include/core_cm4.h ****  */
 623:../Drivers/CMSIS/Include/core_cm4.h **** typedef struct
 624:../Drivers/CMSIS/Include/core_cm4.h **** {
 625:../Drivers/CMSIS/Include/core_cm4.h ****   __IO uint32_t CTRL;                    /*!< Offset: 0x000 (R/W)  SysTick Control and Status Regis
 626:../Drivers/CMSIS/Include/core_cm4.h ****   __IO uint32_t LOAD;                    /*!< Offset: 0x004 (R/W)  SysTick Reload Value Register   
 627:../Drivers/CMSIS/Include/core_cm4.h ****   __IO uint32_t VAL;                     /*!< Offset: 0x008 (R/W)  SysTick Current Value Register  
 628:../Drivers/CMSIS/Include/core_cm4.h ****   __I  uint32_t CALIB;                   /*!< Offset: 0x00C (R/ )  SysTick Calibration Register    
 629:../Drivers/CMSIS/Include/core_cm4.h **** } SysTick_Type;
 630:../Drivers/CMSIS/Include/core_cm4.h **** 
 631:../Drivers/CMSIS/Include/core_cm4.h **** /* SysTick Control / Status Register Definitions */
 632:../Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CTRL_COUNTFLAG_Pos         16                                             /*!< SysT
 633:../Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CTRL_COUNTFLAG_Msk         (1UL << SysTick_CTRL_COUNTFLAG_Pos)            /*!< SysT
 634:../Drivers/CMSIS/Include/core_cm4.h **** 
 635:../Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CTRL_CLKSOURCE_Pos          2                                             /*!< SysT
 636:../Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CTRL_CLKSOURCE_Msk         (1UL << SysTick_CTRL_CLKSOURCE_Pos)            /*!< SysT
 637:../Drivers/CMSIS/Include/core_cm4.h **** 
 638:../Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CTRL_TICKINT_Pos            1                                             /*!< SysT
 639:../Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CTRL_TICKINT_Msk           (1UL << SysTick_CTRL_TICKINT_Pos)              /*!< SysT
 640:../Drivers/CMSIS/Include/core_cm4.h **** 
 641:../Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CTRL_ENABLE_Pos             0                                             /*!< SysT
 642:../Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CTRL_ENABLE_Msk            (1UL << SysTick_CTRL_ENABLE_Pos)               /*!< SysT
 643:../Drivers/CMSIS/Include/core_cm4.h **** 
 644:../Drivers/CMSIS/Include/core_cm4.h **** /* SysTick Reload Register Definitions */
 645:../Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_LOAD_RELOAD_Pos             0                                             /*!< SysT
 646:../Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_LOAD_RELOAD_Msk            (0xFFFFFFUL << SysTick_LOAD_RELOAD_Pos)        /*!< SysT
 647:../Drivers/CMSIS/Include/core_cm4.h **** 
 648:../Drivers/CMSIS/Include/core_cm4.h **** /* SysTick Current Register Definitions */
 649:../Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_VAL_CURRENT_Pos             0                                             /*!< SysT
 650:../Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_VAL_CURRENT_Msk            (0xFFFFFFUL << SysTick_VAL_CURRENT_Pos)        /*!< SysT
 651:../Drivers/CMSIS/Include/core_cm4.h **** 
 652:../Drivers/CMSIS/Include/core_cm4.h **** /* SysTick Calibration Register Definitions */
 653:../Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CALIB_NOREF_Pos            31                                             /*!< SysT
 654:../Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CALIB_NOREF_Msk            (1UL << SysTick_CALIB_NOREF_Pos)               /*!< SysT
 655:../Drivers/CMSIS/Include/core_cm4.h **** 
 656:../Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CALIB_SKEW_Pos             30                                             /*!< SysT
ARM GAS  /tmp/ccYchH6m.s 			page 16


 657:../Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CALIB_SKEW_Msk             (1UL << SysTick_CALIB_SKEW_Pos)                /*!< SysT
 658:../Drivers/CMSIS/Include/core_cm4.h **** 
 659:../Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CALIB_TENMS_Pos             0                                             /*!< SysT
 660:../Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CALIB_TENMS_Msk            (0xFFFFFFUL << SysTick_VAL_CURRENT_Pos)        /*!< SysT
 661:../Drivers/CMSIS/Include/core_cm4.h **** 
 662:../Drivers/CMSIS/Include/core_cm4.h **** /*@} end of group CMSIS_SysTick */
 663:../Drivers/CMSIS/Include/core_cm4.h **** 
 664:../Drivers/CMSIS/Include/core_cm4.h **** 
 665:../Drivers/CMSIS/Include/core_cm4.h **** /** \ingroup  CMSIS_core_register
 666:../Drivers/CMSIS/Include/core_cm4.h ****     \defgroup CMSIS_ITM     Instrumentation Trace Macrocell (ITM)
 667:../Drivers/CMSIS/Include/core_cm4.h ****     \brief      Type definitions for the Instrumentation Trace Macrocell (ITM)
 668:../Drivers/CMSIS/Include/core_cm4.h ****   @{
 669:../Drivers/CMSIS/Include/core_cm4.h ****  */
 670:../Drivers/CMSIS/Include/core_cm4.h **** 
 671:../Drivers/CMSIS/Include/core_cm4.h **** /** \brief  Structure type to access the Instrumentation Trace Macrocell Register (ITM).
 672:../Drivers/CMSIS/Include/core_cm4.h ****  */
 673:../Drivers/CMSIS/Include/core_cm4.h **** typedef struct
 674:../Drivers/CMSIS/Include/core_cm4.h **** {
 675:../Drivers/CMSIS/Include/core_cm4.h ****   __O  union
 676:../Drivers/CMSIS/Include/core_cm4.h ****   {
 677:../Drivers/CMSIS/Include/core_cm4.h ****     __O  uint8_t    u8;                  /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 8-bit         
 678:../Drivers/CMSIS/Include/core_cm4.h ****     __O  uint16_t   u16;                 /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 16-bit        
 679:../Drivers/CMSIS/Include/core_cm4.h ****     __O  uint32_t   u32;                 /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 32-bit        
 680:../Drivers/CMSIS/Include/core_cm4.h ****   }  PORT [32];                          /*!< Offset: 0x000 ( /W)  ITM Stimulus Port Registers     
 681:../Drivers/CMSIS/Include/core_cm4.h ****        uint32_t RESERVED0[864];
 682:../Drivers/CMSIS/Include/core_cm4.h ****   __IO uint32_t TER;                     /*!< Offset: 0xE00 (R/W)  ITM Trace Enable Register       
 683:../Drivers/CMSIS/Include/core_cm4.h ****        uint32_t RESERVED1[15];
 684:../Drivers/CMSIS/Include/core_cm4.h ****   __IO uint32_t TPR;                     /*!< Offset: 0xE40 (R/W)  ITM Trace Privilege Register    
 685:../Drivers/CMSIS/Include/core_cm4.h ****        uint32_t RESERVED2[15];
 686:../Drivers/CMSIS/Include/core_cm4.h ****   __IO uint32_t TCR;                     /*!< Offset: 0xE80 (R/W)  ITM Trace Control Register      
 687:../Drivers/CMSIS/Include/core_cm4.h ****        uint32_t RESERVED3[29];
 688:../Drivers/CMSIS/Include/core_cm4.h ****   __O  uint32_t IWR;                     /*!< Offset: 0xEF8 ( /W)  ITM Integration Write Register  
 689:../Drivers/CMSIS/Include/core_cm4.h ****   __I  uint32_t IRR;                     /*!< Offset: 0xEFC (R/ )  ITM Integration Read Register   
 690:../Drivers/CMSIS/Include/core_cm4.h ****   __IO uint32_t IMCR;                    /*!< Offset: 0xF00 (R/W)  ITM Integration Mode Control Reg
 691:../Drivers/CMSIS/Include/core_cm4.h ****        uint32_t RESERVED4[43];
 692:../Drivers/CMSIS/Include/core_cm4.h ****   __O  uint32_t LAR;                     /*!< Offset: 0xFB0 ( /W)  ITM Lock Access Register        
 693:../Drivers/CMSIS/Include/core_cm4.h ****   __I  uint32_t LSR;                     /*!< Offset: 0xFB4 (R/ )  ITM Lock Status Register        
 694:../Drivers/CMSIS/Include/core_cm4.h ****        uint32_t RESERVED5[6];
 695:../Drivers/CMSIS/Include/core_cm4.h ****   __I  uint32_t PID4;                    /*!< Offset: 0xFD0 (R/ )  ITM Peripheral Identification Re
 696:../Drivers/CMSIS/Include/core_cm4.h ****   __I  uint32_t PID5;                    /*!< Offset: 0xFD4 (R/ )  ITM Peripheral Identification Re
 697:../Drivers/CMSIS/Include/core_cm4.h ****   __I  uint32_t PID6;                    /*!< Offset: 0xFD8 (R/ )  ITM Peripheral Identification Re
 698:../Drivers/CMSIS/Include/core_cm4.h ****   __I  uint32_t PID7;                    /*!< Offset: 0xFDC (R/ )  ITM Peripheral Identification Re
 699:../Drivers/CMSIS/Include/core_cm4.h ****   __I  uint32_t PID0;                    /*!< Offset: 0xFE0 (R/ )  ITM Peripheral Identification Re
 700:../Drivers/CMSIS/Include/core_cm4.h ****   __I  uint32_t PID1;                    /*!< Offset: 0xFE4 (R/ )  ITM Peripheral Identification Re
 701:../Drivers/CMSIS/Include/core_cm4.h ****   __I  uint32_t PID2;                    /*!< Offset: 0xFE8 (R/ )  ITM Peripheral Identification Re
 702:../Drivers/CMSIS/Include/core_cm4.h ****   __I  uint32_t PID3;                    /*!< Offset: 0xFEC (R/ )  ITM Peripheral Identification Re
 703:../Drivers/CMSIS/Include/core_cm4.h ****   __I  uint32_t CID0;                    /*!< Offset: 0xFF0 (R/ )  ITM Component  Identification Re
 704:../Drivers/CMSIS/Include/core_cm4.h ****   __I  uint32_t CID1;                    /*!< Offset: 0xFF4 (R/ )  ITM Component  Identification Re
 705:../Drivers/CMSIS/Include/core_cm4.h ****   __I  uint32_t CID2;                    /*!< Offset: 0xFF8 (R/ )  ITM Component  Identification Re
 706:../Drivers/CMSIS/Include/core_cm4.h ****   __I  uint32_t CID3;                    /*!< Offset: 0xFFC (R/ )  ITM Component  Identification Re
 707:../Drivers/CMSIS/Include/core_cm4.h **** } ITM_Type;
 708:../Drivers/CMSIS/Include/core_cm4.h **** 
 709:../Drivers/CMSIS/Include/core_cm4.h **** /* ITM Trace Privilege Register Definitions */
 710:../Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TPR_PRIVMASK_Pos                0                                             /*!< ITM 
 711:../Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TPR_PRIVMASK_Msk               (0xFUL << ITM_TPR_PRIVMASK_Pos)                /*!< ITM 
 712:../Drivers/CMSIS/Include/core_cm4.h **** 
 713:../Drivers/CMSIS/Include/core_cm4.h **** /* ITM Trace Control Register Definitions */
ARM GAS  /tmp/ccYchH6m.s 			page 17


 714:../Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_BUSY_Pos                   23                                             /*!< ITM 
 715:../Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_BUSY_Msk                   (1UL << ITM_TCR_BUSY_Pos)                      /*!< ITM 
 716:../Drivers/CMSIS/Include/core_cm4.h **** 
 717:../Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_TraceBusID_Pos             16                                             /*!< ITM 
 718:../Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_TraceBusID_Msk             (0x7FUL << ITM_TCR_TraceBusID_Pos)             /*!< ITM 
 719:../Drivers/CMSIS/Include/core_cm4.h **** 
 720:../Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_GTSFREQ_Pos                10                                             /*!< ITM 
 721:../Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_GTSFREQ_Msk                (3UL << ITM_TCR_GTSFREQ_Pos)                   /*!< ITM 
 722:../Drivers/CMSIS/Include/core_cm4.h **** 
 723:../Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_TSPrescale_Pos              8                                             /*!< ITM 
 724:../Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_TSPrescale_Msk             (3UL << ITM_TCR_TSPrescale_Pos)                /*!< ITM 
 725:../Drivers/CMSIS/Include/core_cm4.h **** 
 726:../Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_SWOENA_Pos                  4                                             /*!< ITM 
 727:../Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_SWOENA_Msk                 (1UL << ITM_TCR_SWOENA_Pos)                    /*!< ITM 
 728:../Drivers/CMSIS/Include/core_cm4.h **** 
 729:../Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_DWTENA_Pos                  3                                             /*!< ITM 
 730:../Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_DWTENA_Msk                 (1UL << ITM_TCR_DWTENA_Pos)                    /*!< ITM 
 731:../Drivers/CMSIS/Include/core_cm4.h **** 
 732:../Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_SYNCENA_Pos                 2                                             /*!< ITM 
 733:../Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_SYNCENA_Msk                (1UL << ITM_TCR_SYNCENA_Pos)                   /*!< ITM 
 734:../Drivers/CMSIS/Include/core_cm4.h **** 
 735:../Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_TSENA_Pos                   1                                             /*!< ITM 
 736:../Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_TSENA_Msk                  (1UL << ITM_TCR_TSENA_Pos)                     /*!< ITM 
 737:../Drivers/CMSIS/Include/core_cm4.h **** 
 738:../Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_ITMENA_Pos                  0                                             /*!< ITM 
 739:../Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_ITMENA_Msk                 (1UL << ITM_TCR_ITMENA_Pos)                    /*!< ITM 
 740:../Drivers/CMSIS/Include/core_cm4.h **** 
 741:../Drivers/CMSIS/Include/core_cm4.h **** /* ITM Integration Write Register Definitions */
 742:../Drivers/CMSIS/Include/core_cm4.h **** #define ITM_IWR_ATVALIDM_Pos                0                                             /*!< ITM 
 743:../Drivers/CMSIS/Include/core_cm4.h **** #define ITM_IWR_ATVALIDM_Msk               (1UL << ITM_IWR_ATVALIDM_Pos)                  /*!< ITM 
 744:../Drivers/CMSIS/Include/core_cm4.h **** 
 745:../Drivers/CMSIS/Include/core_cm4.h **** /* ITM Integration Read Register Definitions */
 746:../Drivers/CMSIS/Include/core_cm4.h **** #define ITM_IRR_ATREADYM_Pos                0                                             /*!< ITM 
 747:../Drivers/CMSIS/Include/core_cm4.h **** #define ITM_IRR_ATREADYM_Msk               (1UL << ITM_IRR_ATREADYM_Pos)                  /*!< ITM 
 748:../Drivers/CMSIS/Include/core_cm4.h **** 
 749:../Drivers/CMSIS/Include/core_cm4.h **** /* ITM Integration Mode Control Register Definitions */
 750:../Drivers/CMSIS/Include/core_cm4.h **** #define ITM_IMCR_INTEGRATION_Pos            0                                             /*!< ITM 
 751:../Drivers/CMSIS/Include/core_cm4.h **** #define ITM_IMCR_INTEGRATION_Msk           (1UL << ITM_IMCR_INTEGRATION_Pos)              /*!< ITM 
 752:../Drivers/CMSIS/Include/core_cm4.h **** 
 753:../Drivers/CMSIS/Include/core_cm4.h **** /* ITM Lock Status Register Definitions */
 754:../Drivers/CMSIS/Include/core_cm4.h **** #define ITM_LSR_ByteAcc_Pos                 2                                             /*!< ITM 
 755:../Drivers/CMSIS/Include/core_cm4.h **** #define ITM_LSR_ByteAcc_Msk                (1UL << ITM_LSR_ByteAcc_Pos)                   /*!< ITM 
 756:../Drivers/CMSIS/Include/core_cm4.h **** 
 757:../Drivers/CMSIS/Include/core_cm4.h **** #define ITM_LSR_Access_Pos                  1                                             /*!< ITM 
 758:../Drivers/CMSIS/Include/core_cm4.h **** #define ITM_LSR_Access_Msk                 (1UL << ITM_LSR_Access_Pos)                    /*!< ITM 
 759:../Drivers/CMSIS/Include/core_cm4.h **** 
 760:../Drivers/CMSIS/Include/core_cm4.h **** #define ITM_LSR_Present_Pos                 0                                             /*!< ITM 
 761:../Drivers/CMSIS/Include/core_cm4.h **** #define ITM_LSR_Present_Msk                (1UL << ITM_LSR_Present_Pos)                   /*!< ITM 
 762:../Drivers/CMSIS/Include/core_cm4.h **** 
 763:../Drivers/CMSIS/Include/core_cm4.h **** /*@}*/ /* end of group CMSIS_ITM */
 764:../Drivers/CMSIS/Include/core_cm4.h **** 
 765:../Drivers/CMSIS/Include/core_cm4.h **** 
 766:../Drivers/CMSIS/Include/core_cm4.h **** /** \ingroup  CMSIS_core_register
 767:../Drivers/CMSIS/Include/core_cm4.h ****     \defgroup CMSIS_DWT     Data Watchpoint and Trace (DWT)
 768:../Drivers/CMSIS/Include/core_cm4.h ****     \brief      Type definitions for the Data Watchpoint and Trace (DWT)
 769:../Drivers/CMSIS/Include/core_cm4.h ****   @{
 770:../Drivers/CMSIS/Include/core_cm4.h ****  */
ARM GAS  /tmp/ccYchH6m.s 			page 18


 771:../Drivers/CMSIS/Include/core_cm4.h **** 
 772:../Drivers/CMSIS/Include/core_cm4.h **** /** \brief  Structure type to access the Data Watchpoint and Trace Register (DWT).
 773:../Drivers/CMSIS/Include/core_cm4.h ****  */
 774:../Drivers/CMSIS/Include/core_cm4.h **** typedef struct
 775:../Drivers/CMSIS/Include/core_cm4.h **** {
 776:../Drivers/CMSIS/Include/core_cm4.h ****   __IO uint32_t CTRL;                    /*!< Offset: 0x000 (R/W)  Control Register                
 777:../Drivers/CMSIS/Include/core_cm4.h ****   __IO uint32_t CYCCNT;                  /*!< Offset: 0x004 (R/W)  Cycle Count Register            
 778:../Drivers/CMSIS/Include/core_cm4.h ****   __IO uint32_t CPICNT;                  /*!< Offset: 0x008 (R/W)  CPI Count Register              
 779:../Drivers/CMSIS/Include/core_cm4.h ****   __IO uint32_t EXCCNT;                  /*!< Offset: 0x00C (R/W)  Exception Overhead Count Registe
 780:../Drivers/CMSIS/Include/core_cm4.h ****   __IO uint32_t SLEEPCNT;                /*!< Offset: 0x010 (R/W)  Sleep Count Register            
 781:../Drivers/CMSIS/Include/core_cm4.h ****   __IO uint32_t LSUCNT;                  /*!< Offset: 0x014 (R/W)  LSU Count Register              
 782:../Drivers/CMSIS/Include/core_cm4.h ****   __IO uint32_t FOLDCNT;                 /*!< Offset: 0x018 (R/W)  Folded-instruction Count Registe
 783:../Drivers/CMSIS/Include/core_cm4.h ****   __I  uint32_t PCSR;                    /*!< Offset: 0x01C (R/ )  Program Counter Sample Register 
 784:../Drivers/CMSIS/Include/core_cm4.h ****   __IO uint32_t COMP0;                   /*!< Offset: 0x020 (R/W)  Comparator Register 0           
 785:../Drivers/CMSIS/Include/core_cm4.h ****   __IO uint32_t MASK0;                   /*!< Offset: 0x024 (R/W)  Mask Register 0                 
 786:../Drivers/CMSIS/Include/core_cm4.h ****   __IO uint32_t FUNCTION0;               /*!< Offset: 0x028 (R/W)  Function Register 0             
 787:../Drivers/CMSIS/Include/core_cm4.h ****        uint32_t RESERVED0[1];
 788:../Drivers/CMSIS/Include/core_cm4.h ****   __IO uint32_t COMP1;                   /*!< Offset: 0x030 (R/W)  Comparator Register 1           
 789:../Drivers/CMSIS/Include/core_cm4.h ****   __IO uint32_t MASK1;                   /*!< Offset: 0x034 (R/W)  Mask Register 1                 
 790:../Drivers/CMSIS/Include/core_cm4.h ****   __IO uint32_t FUNCTION1;               /*!< Offset: 0x038 (R/W)  Function Register 1             
 791:../Drivers/CMSIS/Include/core_cm4.h ****        uint32_t RESERVED1[1];
 792:../Drivers/CMSIS/Include/core_cm4.h ****   __IO uint32_t COMP2;                   /*!< Offset: 0x040 (R/W)  Comparator Register 2           
 793:../Drivers/CMSIS/Include/core_cm4.h ****   __IO uint32_t MASK2;                   /*!< Offset: 0x044 (R/W)  Mask Register 2                 
 794:../Drivers/CMSIS/Include/core_cm4.h ****   __IO uint32_t FUNCTION2;               /*!< Offset: 0x048 (R/W)  Function Register 2             
 795:../Drivers/CMSIS/Include/core_cm4.h ****        uint32_t RESERVED2[1];
 796:../Drivers/CMSIS/Include/core_cm4.h ****   __IO uint32_t COMP3;                   /*!< Offset: 0x050 (R/W)  Comparator Register 3           
 797:../Drivers/CMSIS/Include/core_cm4.h ****   __IO uint32_t MASK3;                   /*!< Offset: 0x054 (R/W)  Mask Register 3                 
 798:../Drivers/CMSIS/Include/core_cm4.h ****   __IO uint32_t FUNCTION3;               /*!< Offset: 0x058 (R/W)  Function Register 3             
 799:../Drivers/CMSIS/Include/core_cm4.h **** } DWT_Type;
 800:../Drivers/CMSIS/Include/core_cm4.h **** 
 801:../Drivers/CMSIS/Include/core_cm4.h **** /* DWT Control Register Definitions */
 802:../Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_NUMCOMP_Pos               28                                          /*!< DWT CTR
 803:../Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_NUMCOMP_Msk               (0xFUL << DWT_CTRL_NUMCOMP_Pos)             /*!< DWT CTR
 804:../Drivers/CMSIS/Include/core_cm4.h **** 
 805:../Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_NOTRCPKT_Pos              27                                          /*!< DWT CTR
 806:../Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_NOTRCPKT_Msk              (0x1UL << DWT_CTRL_NOTRCPKT_Pos)            /*!< DWT CTR
 807:../Drivers/CMSIS/Include/core_cm4.h **** 
 808:../Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_NOEXTTRIG_Pos             26                                          /*!< DWT CTR
 809:../Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_NOEXTTRIG_Msk             (0x1UL << DWT_CTRL_NOEXTTRIG_Pos)           /*!< DWT CTR
 810:../Drivers/CMSIS/Include/core_cm4.h **** 
 811:../Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_NOCYCCNT_Pos              25                                          /*!< DWT CTR
 812:../Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_NOCYCCNT_Msk              (0x1UL << DWT_CTRL_NOCYCCNT_Pos)            /*!< DWT CTR
 813:../Drivers/CMSIS/Include/core_cm4.h **** 
 814:../Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_NOPRFCNT_Pos              24                                          /*!< DWT CTR
 815:../Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_NOPRFCNT_Msk              (0x1UL << DWT_CTRL_NOPRFCNT_Pos)            /*!< DWT CTR
 816:../Drivers/CMSIS/Include/core_cm4.h **** 
 817:../Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_CYCEVTENA_Pos             22                                          /*!< DWT CTR
 818:../Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_CYCEVTENA_Msk             (0x1UL << DWT_CTRL_CYCEVTENA_Pos)           /*!< DWT CTR
 819:../Drivers/CMSIS/Include/core_cm4.h **** 
 820:../Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_FOLDEVTENA_Pos            21                                          /*!< DWT CTR
 821:../Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_FOLDEVTENA_Msk            (0x1UL << DWT_CTRL_FOLDEVTENA_Pos)          /*!< DWT CTR
 822:../Drivers/CMSIS/Include/core_cm4.h **** 
 823:../Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_LSUEVTENA_Pos             20                                          /*!< DWT CTR
 824:../Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_LSUEVTENA_Msk             (0x1UL << DWT_CTRL_LSUEVTENA_Pos)           /*!< DWT CTR
 825:../Drivers/CMSIS/Include/core_cm4.h **** 
 826:../Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_SLEEPEVTENA_Pos           19                                          /*!< DWT CTR
 827:../Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_SLEEPEVTENA_Msk           (0x1UL << DWT_CTRL_SLEEPEVTENA_Pos)         /*!< DWT CTR
ARM GAS  /tmp/ccYchH6m.s 			page 19


 828:../Drivers/CMSIS/Include/core_cm4.h **** 
 829:../Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_EXCEVTENA_Pos             18                                          /*!< DWT CTR
 830:../Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_EXCEVTENA_Msk             (0x1UL << DWT_CTRL_EXCEVTENA_Pos)           /*!< DWT CTR
 831:../Drivers/CMSIS/Include/core_cm4.h **** 
 832:../Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_CPIEVTENA_Pos             17                                          /*!< DWT CTR
 833:../Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_CPIEVTENA_Msk             (0x1UL << DWT_CTRL_CPIEVTENA_Pos)           /*!< DWT CTR
 834:../Drivers/CMSIS/Include/core_cm4.h **** 
 835:../Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_EXCTRCENA_Pos             16                                          /*!< DWT CTR
 836:../Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_EXCTRCENA_Msk             (0x1UL << DWT_CTRL_EXCTRCENA_Pos)           /*!< DWT CTR
 837:../Drivers/CMSIS/Include/core_cm4.h **** 
 838:../Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_PCSAMPLENA_Pos            12                                          /*!< DWT CTR
 839:../Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_PCSAMPLENA_Msk            (0x1UL << DWT_CTRL_PCSAMPLENA_Pos)          /*!< DWT CTR
 840:../Drivers/CMSIS/Include/core_cm4.h **** 
 841:../Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_SYNCTAP_Pos               10                                          /*!< DWT CTR
 842:../Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_SYNCTAP_Msk               (0x3UL << DWT_CTRL_SYNCTAP_Pos)             /*!< DWT CTR
 843:../Drivers/CMSIS/Include/core_cm4.h **** 
 844:../Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_CYCTAP_Pos                 9                                          /*!< DWT CTR
 845:../Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_CYCTAP_Msk                (0x1UL << DWT_CTRL_CYCTAP_Pos)              /*!< DWT CTR
 846:../Drivers/CMSIS/Include/core_cm4.h **** 
 847:../Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_POSTINIT_Pos               5                                          /*!< DWT CTR
 848:../Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_POSTINIT_Msk              (0xFUL << DWT_CTRL_POSTINIT_Pos)            /*!< DWT CTR
 849:../Drivers/CMSIS/Include/core_cm4.h **** 
 850:../Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_POSTPRESET_Pos             1                                          /*!< DWT CTR
 851:../Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_POSTPRESET_Msk            (0xFUL << DWT_CTRL_POSTPRESET_Pos)          /*!< DWT CTR
 852:../Drivers/CMSIS/Include/core_cm4.h **** 
 853:../Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_CYCCNTENA_Pos              0                                          /*!< DWT CTR
 854:../Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_CYCCNTENA_Msk             (0x1UL << DWT_CTRL_CYCCNTENA_Pos)           /*!< DWT CTR
 855:../Drivers/CMSIS/Include/core_cm4.h **** 
 856:../Drivers/CMSIS/Include/core_cm4.h **** /* DWT CPI Count Register Definitions */
 857:../Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CPICNT_CPICNT_Pos               0                                          /*!< DWT CPI
 858:../Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CPICNT_CPICNT_Msk              (0xFFUL << DWT_CPICNT_CPICNT_Pos)           /*!< DWT CPI
 859:../Drivers/CMSIS/Include/core_cm4.h **** 
 860:../Drivers/CMSIS/Include/core_cm4.h **** /* DWT Exception Overhead Count Register Definitions */
 861:../Drivers/CMSIS/Include/core_cm4.h **** #define DWT_EXCCNT_EXCCNT_Pos               0                                          /*!< DWT EXC
 862:../Drivers/CMSIS/Include/core_cm4.h **** #define DWT_EXCCNT_EXCCNT_Msk              (0xFFUL << DWT_EXCCNT_EXCCNT_Pos)           /*!< DWT EXC
 863:../Drivers/CMSIS/Include/core_cm4.h **** 
 864:../Drivers/CMSIS/Include/core_cm4.h **** /* DWT Sleep Count Register Definitions */
 865:../Drivers/CMSIS/Include/core_cm4.h **** #define DWT_SLEEPCNT_SLEEPCNT_Pos           0                                          /*!< DWT SLE
 866:../Drivers/CMSIS/Include/core_cm4.h **** #define DWT_SLEEPCNT_SLEEPCNT_Msk          (0xFFUL << DWT_SLEEPCNT_SLEEPCNT_Pos)       /*!< DWT SLE
 867:../Drivers/CMSIS/Include/core_cm4.h **** 
 868:../Drivers/CMSIS/Include/core_cm4.h **** /* DWT LSU Count Register Definitions */
 869:../Drivers/CMSIS/Include/core_cm4.h **** #define DWT_LSUCNT_LSUCNT_Pos               0                                          /*!< DWT LSU
 870:../Drivers/CMSIS/Include/core_cm4.h **** #define DWT_LSUCNT_LSUCNT_Msk              (0xFFUL << DWT_LSUCNT_LSUCNT_Pos)           /*!< DWT LSU
 871:../Drivers/CMSIS/Include/core_cm4.h **** 
 872:../Drivers/CMSIS/Include/core_cm4.h **** /* DWT Folded-instruction Count Register Definitions */
 873:../Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FOLDCNT_FOLDCNT_Pos             0                                          /*!< DWT FOL
 874:../Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FOLDCNT_FOLDCNT_Msk            (0xFFUL << DWT_FOLDCNT_FOLDCNT_Pos)         /*!< DWT FOL
 875:../Drivers/CMSIS/Include/core_cm4.h **** 
 876:../Drivers/CMSIS/Include/core_cm4.h **** /* DWT Comparator Mask Register Definitions */
 877:../Drivers/CMSIS/Include/core_cm4.h **** #define DWT_MASK_MASK_Pos                   0                                          /*!< DWT MAS
 878:../Drivers/CMSIS/Include/core_cm4.h **** #define DWT_MASK_MASK_Msk                  (0x1FUL << DWT_MASK_MASK_Pos)               /*!< DWT MAS
 879:../Drivers/CMSIS/Include/core_cm4.h **** 
 880:../Drivers/CMSIS/Include/core_cm4.h **** /* DWT Comparator Function Register Definitions */
 881:../Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_MATCHED_Pos           24                                          /*!< DWT FUN
 882:../Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_MATCHED_Msk           (0x1UL << DWT_FUNCTION_MATCHED_Pos)         /*!< DWT FUN
 883:../Drivers/CMSIS/Include/core_cm4.h **** 
 884:../Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_DATAVADDR1_Pos        16                                          /*!< DWT FUN
ARM GAS  /tmp/ccYchH6m.s 			page 20


 885:../Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_DATAVADDR1_Msk        (0xFUL << DWT_FUNCTION_DATAVADDR1_Pos)      /*!< DWT FUN
 886:../Drivers/CMSIS/Include/core_cm4.h **** 
 887:../Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_DATAVADDR0_Pos        12                                          /*!< DWT FUN
 888:../Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_DATAVADDR0_Msk        (0xFUL << DWT_FUNCTION_DATAVADDR0_Pos)      /*!< DWT FUN
 889:../Drivers/CMSIS/Include/core_cm4.h **** 
 890:../Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_DATAVSIZE_Pos         10                                          /*!< DWT FUN
 891:../Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_DATAVSIZE_Msk         (0x3UL << DWT_FUNCTION_DATAVSIZE_Pos)       /*!< DWT FUN
 892:../Drivers/CMSIS/Include/core_cm4.h **** 
 893:../Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_LNK1ENA_Pos            9                                          /*!< DWT FUN
 894:../Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_LNK1ENA_Msk           (0x1UL << DWT_FUNCTION_LNK1ENA_Pos)         /*!< DWT FUN
 895:../Drivers/CMSIS/Include/core_cm4.h **** 
 896:../Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_DATAVMATCH_Pos         8                                          /*!< DWT FUN
 897:../Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_DATAVMATCH_Msk        (0x1UL << DWT_FUNCTION_DATAVMATCH_Pos)      /*!< DWT FUN
 898:../Drivers/CMSIS/Include/core_cm4.h **** 
 899:../Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_CYCMATCH_Pos           7                                          /*!< DWT FUN
 900:../Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_CYCMATCH_Msk          (0x1UL << DWT_FUNCTION_CYCMATCH_Pos)        /*!< DWT FUN
 901:../Drivers/CMSIS/Include/core_cm4.h **** 
 902:../Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_EMITRANGE_Pos          5                                          /*!< DWT FUN
 903:../Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_EMITRANGE_Msk         (0x1UL << DWT_FUNCTION_EMITRANGE_Pos)       /*!< DWT FUN
 904:../Drivers/CMSIS/Include/core_cm4.h **** 
 905:../Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_FUNCTION_Pos           0                                          /*!< DWT FUN
 906:../Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_FUNCTION_Msk          (0xFUL << DWT_FUNCTION_FUNCTION_Pos)        /*!< DWT FUN
 907:../Drivers/CMSIS/Include/core_cm4.h **** 
 908:../Drivers/CMSIS/Include/core_cm4.h **** /*@}*/ /* end of group CMSIS_DWT */
 909:../Drivers/CMSIS/Include/core_cm4.h **** 
 910:../Drivers/CMSIS/Include/core_cm4.h **** 
 911:../Drivers/CMSIS/Include/core_cm4.h **** /** \ingroup  CMSIS_core_register
 912:../Drivers/CMSIS/Include/core_cm4.h ****     \defgroup CMSIS_TPI     Trace Port Interface (TPI)
 913:../Drivers/CMSIS/Include/core_cm4.h ****     \brief      Type definitions for the Trace Port Interface (TPI)
 914:../Drivers/CMSIS/Include/core_cm4.h ****   @{
 915:../Drivers/CMSIS/Include/core_cm4.h ****  */
 916:../Drivers/CMSIS/Include/core_cm4.h **** 
 917:../Drivers/CMSIS/Include/core_cm4.h **** /** \brief  Structure type to access the Trace Port Interface Register (TPI).
 918:../Drivers/CMSIS/Include/core_cm4.h ****  */
 919:../Drivers/CMSIS/Include/core_cm4.h **** typedef struct
 920:../Drivers/CMSIS/Include/core_cm4.h **** {
 921:../Drivers/CMSIS/Include/core_cm4.h ****   __IO uint32_t SSPSR;                   /*!< Offset: 0x000 (R/ )  Supported Parallel Port Size Reg
 922:../Drivers/CMSIS/Include/core_cm4.h ****   __IO uint32_t CSPSR;                   /*!< Offset: 0x004 (R/W)  Current Parallel Port Size Regis
 923:../Drivers/CMSIS/Include/core_cm4.h ****        uint32_t RESERVED0[2];
 924:../Drivers/CMSIS/Include/core_cm4.h ****   __IO uint32_t ACPR;                    /*!< Offset: 0x010 (R/W)  Asynchronous Clock Prescaler Reg
 925:../Drivers/CMSIS/Include/core_cm4.h ****        uint32_t RESERVED1[55];
 926:../Drivers/CMSIS/Include/core_cm4.h ****   __IO uint32_t SPPR;                    /*!< Offset: 0x0F0 (R/W)  Selected Pin Protocol Register *
 927:../Drivers/CMSIS/Include/core_cm4.h ****        uint32_t RESERVED2[131];
 928:../Drivers/CMSIS/Include/core_cm4.h ****   __I  uint32_t FFSR;                    /*!< Offset: 0x300 (R/ )  Formatter and Flush Status Regis
 929:../Drivers/CMSIS/Include/core_cm4.h ****   __IO uint32_t FFCR;                    /*!< Offset: 0x304 (R/W)  Formatter and Flush Control Regi
 930:../Drivers/CMSIS/Include/core_cm4.h ****   __I  uint32_t FSCR;                    /*!< Offset: 0x308 (R/ )  Formatter Synchronization Counte
 931:../Drivers/CMSIS/Include/core_cm4.h ****        uint32_t RESERVED3[759];
 932:../Drivers/CMSIS/Include/core_cm4.h ****   __I  uint32_t TRIGGER;                 /*!< Offset: 0xEE8 (R/ )  TRIGGER */
 933:../Drivers/CMSIS/Include/core_cm4.h ****   __I  uint32_t FIFO0;                   /*!< Offset: 0xEEC (R/ )  Integration ETM Data */
 934:../Drivers/CMSIS/Include/core_cm4.h ****   __I  uint32_t ITATBCTR2;               /*!< Offset: 0xEF0 (R/ )  ITATBCTR2 */
 935:../Drivers/CMSIS/Include/core_cm4.h ****        uint32_t RESERVED4[1];
 936:../Drivers/CMSIS/Include/core_cm4.h ****   __I  uint32_t ITATBCTR0;               /*!< Offset: 0xEF8 (R/ )  ITATBCTR0 */
 937:../Drivers/CMSIS/Include/core_cm4.h ****   __I  uint32_t FIFO1;                   /*!< Offset: 0xEFC (R/ )  Integration ITM Data */
 938:../Drivers/CMSIS/Include/core_cm4.h ****   __IO uint32_t ITCTRL;                  /*!< Offset: 0xF00 (R/W)  Integration Mode Control */
 939:../Drivers/CMSIS/Include/core_cm4.h ****        uint32_t RESERVED5[39];
 940:../Drivers/CMSIS/Include/core_cm4.h ****   __IO uint32_t CLAIMSET;                /*!< Offset: 0xFA0 (R/W)  Claim tag set */
 941:../Drivers/CMSIS/Include/core_cm4.h ****   __IO uint32_t CLAIMCLR;                /*!< Offset: 0xFA4 (R/W)  Claim tag clear */
ARM GAS  /tmp/ccYchH6m.s 			page 21


 942:../Drivers/CMSIS/Include/core_cm4.h ****        uint32_t RESERVED7[8];
 943:../Drivers/CMSIS/Include/core_cm4.h ****   __I  uint32_t DEVID;                   /*!< Offset: 0xFC8 (R/ )  TPIU_DEVID */
 944:../Drivers/CMSIS/Include/core_cm4.h ****   __I  uint32_t DEVTYPE;                 /*!< Offset: 0xFCC (R/ )  TPIU_DEVTYPE */
 945:../Drivers/CMSIS/Include/core_cm4.h **** } TPI_Type;
 946:../Drivers/CMSIS/Include/core_cm4.h **** 
 947:../Drivers/CMSIS/Include/core_cm4.h **** /* TPI Asynchronous Clock Prescaler Register Definitions */
 948:../Drivers/CMSIS/Include/core_cm4.h **** #define TPI_ACPR_PRESCALER_Pos              0                                          /*!< TPI ACP
 949:../Drivers/CMSIS/Include/core_cm4.h **** #define TPI_ACPR_PRESCALER_Msk             (0x1FFFUL << TPI_ACPR_PRESCALER_Pos)        /*!< TPI ACP
 950:../Drivers/CMSIS/Include/core_cm4.h **** 
 951:../Drivers/CMSIS/Include/core_cm4.h **** /* TPI Selected Pin Protocol Register Definitions */
 952:../Drivers/CMSIS/Include/core_cm4.h **** #define TPI_SPPR_TXMODE_Pos                 0                                          /*!< TPI SPP
 953:../Drivers/CMSIS/Include/core_cm4.h **** #define TPI_SPPR_TXMODE_Msk                (0x3UL << TPI_SPPR_TXMODE_Pos)              /*!< TPI SPP
 954:../Drivers/CMSIS/Include/core_cm4.h **** 
 955:../Drivers/CMSIS/Include/core_cm4.h **** /* TPI Formatter and Flush Status Register Definitions */
 956:../Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FFSR_FtNonStop_Pos              3                                          /*!< TPI FFS
 957:../Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FFSR_FtNonStop_Msk             (0x1UL << TPI_FFSR_FtNonStop_Pos)           /*!< TPI FFS
 958:../Drivers/CMSIS/Include/core_cm4.h **** 
 959:../Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FFSR_TCPresent_Pos              2                                          /*!< TPI FFS
 960:../Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FFSR_TCPresent_Msk             (0x1UL << TPI_FFSR_TCPresent_Pos)           /*!< TPI FFS
 961:../Drivers/CMSIS/Include/core_cm4.h **** 
 962:../Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FFSR_FtStopped_Pos              1                                          /*!< TPI FFS
 963:../Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FFSR_FtStopped_Msk             (0x1UL << TPI_FFSR_FtStopped_Pos)           /*!< TPI FFS
 964:../Drivers/CMSIS/Include/core_cm4.h **** 
 965:../Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FFSR_FlInProg_Pos               0                                          /*!< TPI FFS
 966:../Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FFSR_FlInProg_Msk              (0x1UL << TPI_FFSR_FlInProg_Pos)            /*!< TPI FFS
 967:../Drivers/CMSIS/Include/core_cm4.h **** 
 968:../Drivers/CMSIS/Include/core_cm4.h **** /* TPI Formatter and Flush Control Register Definitions */
 969:../Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FFCR_TrigIn_Pos                 8                                          /*!< TPI FFC
 970:../Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FFCR_TrigIn_Msk                (0x1UL << TPI_FFCR_TrigIn_Pos)              /*!< TPI FFC
 971:../Drivers/CMSIS/Include/core_cm4.h **** 
 972:../Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FFCR_EnFCont_Pos                1                                          /*!< TPI FFC
 973:../Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FFCR_EnFCont_Msk               (0x1UL << TPI_FFCR_EnFCont_Pos)             /*!< TPI FFC
 974:../Drivers/CMSIS/Include/core_cm4.h **** 
 975:../Drivers/CMSIS/Include/core_cm4.h **** /* TPI TRIGGER Register Definitions */
 976:../Drivers/CMSIS/Include/core_cm4.h **** #define TPI_TRIGGER_TRIGGER_Pos             0                                          /*!< TPI TRI
 977:../Drivers/CMSIS/Include/core_cm4.h **** #define TPI_TRIGGER_TRIGGER_Msk            (0x1UL << TPI_TRIGGER_TRIGGER_Pos)          /*!< TPI TRI
 978:../Drivers/CMSIS/Include/core_cm4.h **** 
 979:../Drivers/CMSIS/Include/core_cm4.h **** /* TPI Integration ETM Data Register Definitions (FIFO0) */
 980:../Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ITM_ATVALID_Pos          29                                          /*!< TPI FIF
 981:../Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ITM_ATVALID_Msk          (0x3UL << TPI_FIFO0_ITM_ATVALID_Pos)        /*!< TPI FIF
 982:../Drivers/CMSIS/Include/core_cm4.h **** 
 983:../Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ITM_bytecount_Pos        27                                          /*!< TPI FIF
 984:../Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ITM_bytecount_Msk        (0x3UL << TPI_FIFO0_ITM_bytecount_Pos)      /*!< TPI FIF
 985:../Drivers/CMSIS/Include/core_cm4.h **** 
 986:../Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ETM_ATVALID_Pos          26                                          /*!< TPI FIF
 987:../Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ETM_ATVALID_Msk          (0x3UL << TPI_FIFO0_ETM_ATVALID_Pos)        /*!< TPI FIF
 988:../Drivers/CMSIS/Include/core_cm4.h **** 
 989:../Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ETM_bytecount_Pos        24                                          /*!< TPI FIF
 990:../Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ETM_bytecount_Msk        (0x3UL << TPI_FIFO0_ETM_bytecount_Pos)      /*!< TPI FIF
 991:../Drivers/CMSIS/Include/core_cm4.h **** 
 992:../Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ETM2_Pos                 16                                          /*!< TPI FIF
 993:../Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ETM2_Msk                 (0xFFUL << TPI_FIFO0_ETM2_Pos)              /*!< TPI FIF
 994:../Drivers/CMSIS/Include/core_cm4.h **** 
 995:../Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ETM1_Pos                  8                                          /*!< TPI FIF
 996:../Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ETM1_Msk                 (0xFFUL << TPI_FIFO0_ETM1_Pos)              /*!< TPI FIF
 997:../Drivers/CMSIS/Include/core_cm4.h **** 
 998:../Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ETM0_Pos                  0                                          /*!< TPI FIF
ARM GAS  /tmp/ccYchH6m.s 			page 22


 999:../Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ETM0_Msk                 (0xFFUL << TPI_FIFO0_ETM0_Pos)              /*!< TPI FIF
1000:../Drivers/CMSIS/Include/core_cm4.h **** 
1001:../Drivers/CMSIS/Include/core_cm4.h **** /* TPI ITATBCTR2 Register Definitions */
1002:../Drivers/CMSIS/Include/core_cm4.h **** #define TPI_ITATBCTR2_ATREADY_Pos           0                                          /*!< TPI ITA
1003:../Drivers/CMSIS/Include/core_cm4.h **** #define TPI_ITATBCTR2_ATREADY_Msk          (0x1UL << TPI_ITATBCTR2_ATREADY_Pos)        /*!< TPI ITA
1004:../Drivers/CMSIS/Include/core_cm4.h **** 
1005:../Drivers/CMSIS/Include/core_cm4.h **** /* TPI Integration ITM Data Register Definitions (FIFO1) */
1006:../Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ITM_ATVALID_Pos          29                                          /*!< TPI FIF
1007:../Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ITM_ATVALID_Msk          (0x3UL << TPI_FIFO1_ITM_ATVALID_Pos)        /*!< TPI FIF
1008:../Drivers/CMSIS/Include/core_cm4.h **** 
1009:../Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ITM_bytecount_Pos        27                                          /*!< TPI FIF
1010:../Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ITM_bytecount_Msk        (0x3UL << TPI_FIFO1_ITM_bytecount_Pos)      /*!< TPI FIF
1011:../Drivers/CMSIS/Include/core_cm4.h **** 
1012:../Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ETM_ATVALID_Pos          26                                          /*!< TPI FIF
1013:../Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ETM_ATVALID_Msk          (0x3UL << TPI_FIFO1_ETM_ATVALID_Pos)        /*!< TPI FIF
1014:../Drivers/CMSIS/Include/core_cm4.h **** 
1015:../Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ETM_bytecount_Pos        24                                          /*!< TPI FIF
1016:../Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ETM_bytecount_Msk        (0x3UL << TPI_FIFO1_ETM_bytecount_Pos)      /*!< TPI FIF
1017:../Drivers/CMSIS/Include/core_cm4.h **** 
1018:../Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ITM2_Pos                 16                                          /*!< TPI FIF
1019:../Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ITM2_Msk                 (0xFFUL << TPI_FIFO1_ITM2_Pos)              /*!< TPI FIF
1020:../Drivers/CMSIS/Include/core_cm4.h **** 
1021:../Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ITM1_Pos                  8                                          /*!< TPI FIF
1022:../Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ITM1_Msk                 (0xFFUL << TPI_FIFO1_ITM1_Pos)              /*!< TPI FIF
1023:../Drivers/CMSIS/Include/core_cm4.h **** 
1024:../Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ITM0_Pos                  0                                          /*!< TPI FIF
1025:../Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ITM0_Msk                 (0xFFUL << TPI_FIFO1_ITM0_Pos)              /*!< TPI FIF
1026:../Drivers/CMSIS/Include/core_cm4.h **** 
1027:../Drivers/CMSIS/Include/core_cm4.h **** /* TPI ITATBCTR0 Register Definitions */
1028:../Drivers/CMSIS/Include/core_cm4.h **** #define TPI_ITATBCTR0_ATREADY_Pos           0                                          /*!< TPI ITA
1029:../Drivers/CMSIS/Include/core_cm4.h **** #define TPI_ITATBCTR0_ATREADY_Msk          (0x1UL << TPI_ITATBCTR0_ATREADY_Pos)        /*!< TPI ITA
1030:../Drivers/CMSIS/Include/core_cm4.h **** 
1031:../Drivers/CMSIS/Include/core_cm4.h **** /* TPI Integration Mode Control Register Definitions */
1032:../Drivers/CMSIS/Include/core_cm4.h **** #define TPI_ITCTRL_Mode_Pos                 0                                          /*!< TPI ITC
1033:../Drivers/CMSIS/Include/core_cm4.h **** #define TPI_ITCTRL_Mode_Msk                (0x1UL << TPI_ITCTRL_Mode_Pos)              /*!< TPI ITC
1034:../Drivers/CMSIS/Include/core_cm4.h **** 
1035:../Drivers/CMSIS/Include/core_cm4.h **** /* TPI DEVID Register Definitions */
1036:../Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_NRZVALID_Pos             11                                          /*!< TPI DEV
1037:../Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_NRZVALID_Msk             (0x1UL << TPI_DEVID_NRZVALID_Pos)           /*!< TPI DEV
1038:../Drivers/CMSIS/Include/core_cm4.h **** 
1039:../Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_MANCVALID_Pos            10                                          /*!< TPI DEV
1040:../Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_MANCVALID_Msk            (0x1UL << TPI_DEVID_MANCVALID_Pos)          /*!< TPI DEV
1041:../Drivers/CMSIS/Include/core_cm4.h **** 
1042:../Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_PTINVALID_Pos             9                                          /*!< TPI DEV
1043:../Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_PTINVALID_Msk            (0x1UL << TPI_DEVID_PTINVALID_Pos)          /*!< TPI DEV
1044:../Drivers/CMSIS/Include/core_cm4.h **** 
1045:../Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_MinBufSz_Pos              6                                          /*!< TPI DEV
1046:../Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_MinBufSz_Msk             (0x7UL << TPI_DEVID_MinBufSz_Pos)           /*!< TPI DEV
1047:../Drivers/CMSIS/Include/core_cm4.h **** 
1048:../Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_AsynClkIn_Pos             5                                          /*!< TPI DEV
1049:../Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_AsynClkIn_Msk            (0x1UL << TPI_DEVID_AsynClkIn_Pos)          /*!< TPI DEV
1050:../Drivers/CMSIS/Include/core_cm4.h **** 
1051:../Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_NrTraceInput_Pos          0                                          /*!< TPI DEV
1052:../Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_NrTraceInput_Msk         (0x1FUL << TPI_DEVID_NrTraceInput_Pos)      /*!< TPI DEV
1053:../Drivers/CMSIS/Include/core_cm4.h **** 
1054:../Drivers/CMSIS/Include/core_cm4.h **** /* TPI DEVTYPE Register Definitions */
1055:../Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVTYPE_SubType_Pos             0                                          /*!< TPI DEV
ARM GAS  /tmp/ccYchH6m.s 			page 23


1056:../Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVTYPE_SubType_Msk            (0xFUL << TPI_DEVTYPE_SubType_Pos)          /*!< TPI DEV
1057:../Drivers/CMSIS/Include/core_cm4.h **** 
1058:../Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVTYPE_MajorType_Pos           4                                          /*!< TPI DEV
1059:../Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVTYPE_MajorType_Msk          (0xFUL << TPI_DEVTYPE_MajorType_Pos)        /*!< TPI DEV
1060:../Drivers/CMSIS/Include/core_cm4.h **** 
1061:../Drivers/CMSIS/Include/core_cm4.h **** /*@}*/ /* end of group CMSIS_TPI */
1062:../Drivers/CMSIS/Include/core_cm4.h **** 
1063:../Drivers/CMSIS/Include/core_cm4.h **** 
1064:../Drivers/CMSIS/Include/core_cm4.h **** #if (__MPU_PRESENT == 1)
1065:../Drivers/CMSIS/Include/core_cm4.h **** /** \ingroup  CMSIS_core_register
1066:../Drivers/CMSIS/Include/core_cm4.h ****     \defgroup CMSIS_MPU     Memory Protection Unit (MPU)
1067:../Drivers/CMSIS/Include/core_cm4.h ****     \brief      Type definitions for the Memory Protection Unit (MPU)
1068:../Drivers/CMSIS/Include/core_cm4.h ****   @{
1069:../Drivers/CMSIS/Include/core_cm4.h ****  */
1070:../Drivers/CMSIS/Include/core_cm4.h **** 
1071:../Drivers/CMSIS/Include/core_cm4.h **** /** \brief  Structure type to access the Memory Protection Unit (MPU).
1072:../Drivers/CMSIS/Include/core_cm4.h ****  */
1073:../Drivers/CMSIS/Include/core_cm4.h **** typedef struct
1074:../Drivers/CMSIS/Include/core_cm4.h **** {
1075:../Drivers/CMSIS/Include/core_cm4.h ****   __I  uint32_t TYPE;                    /*!< Offset: 0x000 (R/ )  MPU Type Register               
1076:../Drivers/CMSIS/Include/core_cm4.h ****   __IO uint32_t CTRL;                    /*!< Offset: 0x004 (R/W)  MPU Control Register            
1077:../Drivers/CMSIS/Include/core_cm4.h ****   __IO uint32_t RNR;                     /*!< Offset: 0x008 (R/W)  MPU Region RNRber Register      
1078:../Drivers/CMSIS/Include/core_cm4.h ****   __IO uint32_t RBAR;                    /*!< Offset: 0x00C (R/W)  MPU Region Base Address Register
1079:../Drivers/CMSIS/Include/core_cm4.h ****   __IO uint32_t RASR;                    /*!< Offset: 0x010 (R/W)  MPU Region Attribute and Size Re
1080:../Drivers/CMSIS/Include/core_cm4.h ****   __IO uint32_t RBAR_A1;                 /*!< Offset: 0x014 (R/W)  MPU Alias 1 Region Base Address 
1081:../Drivers/CMSIS/Include/core_cm4.h ****   __IO uint32_t RASR_A1;                 /*!< Offset: 0x018 (R/W)  MPU Alias 1 Region Attribute and
1082:../Drivers/CMSIS/Include/core_cm4.h ****   __IO uint32_t RBAR_A2;                 /*!< Offset: 0x01C (R/W)  MPU Alias 2 Region Base Address 
1083:../Drivers/CMSIS/Include/core_cm4.h ****   __IO uint32_t RASR_A2;                 /*!< Offset: 0x020 (R/W)  MPU Alias 2 Region Attribute and
1084:../Drivers/CMSIS/Include/core_cm4.h ****   __IO uint32_t RBAR_A3;                 /*!< Offset: 0x024 (R/W)  MPU Alias 3 Region Base Address 
1085:../Drivers/CMSIS/Include/core_cm4.h ****   __IO uint32_t RASR_A3;                 /*!< Offset: 0x028 (R/W)  MPU Alias 3 Region Attribute and
1086:../Drivers/CMSIS/Include/core_cm4.h **** } MPU_Type;
1087:../Drivers/CMSIS/Include/core_cm4.h **** 
1088:../Drivers/CMSIS/Include/core_cm4.h **** /* MPU Type Register */
1089:../Drivers/CMSIS/Include/core_cm4.h **** #define MPU_TYPE_IREGION_Pos               16                                             /*!< MPU 
1090:../Drivers/CMSIS/Include/core_cm4.h **** #define MPU_TYPE_IREGION_Msk               (0xFFUL << MPU_TYPE_IREGION_Pos)               /*!< MPU 
1091:../Drivers/CMSIS/Include/core_cm4.h **** 
1092:../Drivers/CMSIS/Include/core_cm4.h **** #define MPU_TYPE_DREGION_Pos                8                                             /*!< MPU 
1093:../Drivers/CMSIS/Include/core_cm4.h **** #define MPU_TYPE_DREGION_Msk               (0xFFUL << MPU_TYPE_DREGION_Pos)               /*!< MPU 
1094:../Drivers/CMSIS/Include/core_cm4.h **** 
1095:../Drivers/CMSIS/Include/core_cm4.h **** #define MPU_TYPE_SEPARATE_Pos               0                                             /*!< MPU 
1096:../Drivers/CMSIS/Include/core_cm4.h **** #define MPU_TYPE_SEPARATE_Msk              (1UL << MPU_TYPE_SEPARATE_Pos)                 /*!< MPU 
1097:../Drivers/CMSIS/Include/core_cm4.h **** 
1098:../Drivers/CMSIS/Include/core_cm4.h **** /* MPU Control Register */
1099:../Drivers/CMSIS/Include/core_cm4.h **** #define MPU_CTRL_PRIVDEFENA_Pos             2                                             /*!< MPU 
1100:../Drivers/CMSIS/Include/core_cm4.h **** #define MPU_CTRL_PRIVDEFENA_Msk            (1UL << MPU_CTRL_PRIVDEFENA_Pos)               /*!< MPU 
1101:../Drivers/CMSIS/Include/core_cm4.h **** 
1102:../Drivers/CMSIS/Include/core_cm4.h **** #define MPU_CTRL_HFNMIENA_Pos               1                                             /*!< MPU 
1103:../Drivers/CMSIS/Include/core_cm4.h **** #define MPU_CTRL_HFNMIENA_Msk              (1UL << MPU_CTRL_HFNMIENA_Pos)                 /*!< MPU 
1104:../Drivers/CMSIS/Include/core_cm4.h **** 
1105:../Drivers/CMSIS/Include/core_cm4.h **** #define MPU_CTRL_ENABLE_Pos                 0                                             /*!< MPU 
1106:../Drivers/CMSIS/Include/core_cm4.h **** #define MPU_CTRL_ENABLE_Msk                (1UL << MPU_CTRL_ENABLE_Pos)                   /*!< MPU 
1107:../Drivers/CMSIS/Include/core_cm4.h **** 
1108:../Drivers/CMSIS/Include/core_cm4.h **** /* MPU Region Number Register */
1109:../Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RNR_REGION_Pos                  0                                             /*!< MPU 
1110:../Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RNR_REGION_Msk                 (0xFFUL << MPU_RNR_REGION_Pos)                 /*!< MPU 
1111:../Drivers/CMSIS/Include/core_cm4.h **** 
1112:../Drivers/CMSIS/Include/core_cm4.h **** /* MPU Region Base Address Register */
ARM GAS  /tmp/ccYchH6m.s 			page 24


1113:../Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RBAR_ADDR_Pos                   5                                             /*!< MPU 
1114:../Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RBAR_ADDR_Msk                  (0x7FFFFFFUL << MPU_RBAR_ADDR_Pos)             /*!< MPU 
1115:../Drivers/CMSIS/Include/core_cm4.h **** 
1116:../Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RBAR_VALID_Pos                  4                                             /*!< MPU 
1117:../Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RBAR_VALID_Msk                 (1UL << MPU_RBAR_VALID_Pos)                    /*!< MPU 
1118:../Drivers/CMSIS/Include/core_cm4.h **** 
1119:../Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RBAR_REGION_Pos                 0                                             /*!< MPU 
1120:../Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RBAR_REGION_Msk                (0xFUL << MPU_RBAR_REGION_Pos)                 /*!< MPU 
1121:../Drivers/CMSIS/Include/core_cm4.h **** 
1122:../Drivers/CMSIS/Include/core_cm4.h **** /* MPU Region Attribute and Size Register */
1123:../Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_ATTRS_Pos                 16                                             /*!< MPU 
1124:../Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_ATTRS_Msk                 (0xFFFFUL << MPU_RASR_ATTRS_Pos)               /*!< MPU 
1125:../Drivers/CMSIS/Include/core_cm4.h **** 
1126:../Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_XN_Pos                    28                                             /*!< MPU 
1127:../Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_XN_Msk                    (1UL << MPU_RASR_XN_Pos)                       /*!< MPU 
1128:../Drivers/CMSIS/Include/core_cm4.h **** 
1129:../Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_AP_Pos                    24                                             /*!< MPU 
1130:../Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_AP_Msk                    (0x7UL << MPU_RASR_AP_Pos)                     /*!< MPU 
1131:../Drivers/CMSIS/Include/core_cm4.h **** 
1132:../Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_TEX_Pos                   19                                             /*!< MPU 
1133:../Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_TEX_Msk                   (0x7UL << MPU_RASR_TEX_Pos)                    /*!< MPU 
1134:../Drivers/CMSIS/Include/core_cm4.h **** 
1135:../Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_S_Pos                     18                                             /*!< MPU 
1136:../Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_S_Msk                     (1UL << MPU_RASR_S_Pos)                        /*!< MPU 
1137:../Drivers/CMSIS/Include/core_cm4.h **** 
1138:../Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_C_Pos                     17                                             /*!< MPU 
1139:../Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_C_Msk                     (1UL << MPU_RASR_C_Pos)                        /*!< MPU 
1140:../Drivers/CMSIS/Include/core_cm4.h **** 
1141:../Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_B_Pos                     16                                             /*!< MPU 
1142:../Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_B_Msk                     (1UL << MPU_RASR_B_Pos)                        /*!< MPU 
1143:../Drivers/CMSIS/Include/core_cm4.h **** 
1144:../Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_SRD_Pos                    8                                             /*!< MPU 
1145:../Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_SRD_Msk                   (0xFFUL << MPU_RASR_SRD_Pos)                   /*!< MPU 
1146:../Drivers/CMSIS/Include/core_cm4.h **** 
1147:../Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_SIZE_Pos                   1                                             /*!< MPU 
1148:../Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_SIZE_Msk                  (0x1FUL << MPU_RASR_SIZE_Pos)                  /*!< MPU 
1149:../Drivers/CMSIS/Include/core_cm4.h **** 
1150:../Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_ENABLE_Pos                 0                                             /*!< MPU 
1151:../Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_ENABLE_Msk                (1UL << MPU_RASR_ENABLE_Pos)                   /*!< MPU 
1152:../Drivers/CMSIS/Include/core_cm4.h **** 
1153:../Drivers/CMSIS/Include/core_cm4.h **** /*@} end of group CMSIS_MPU */
1154:../Drivers/CMSIS/Include/core_cm4.h **** #endif
1155:../Drivers/CMSIS/Include/core_cm4.h **** 
1156:../Drivers/CMSIS/Include/core_cm4.h **** 
1157:../Drivers/CMSIS/Include/core_cm4.h **** #if (__FPU_PRESENT == 1)
1158:../Drivers/CMSIS/Include/core_cm4.h **** /** \ingroup  CMSIS_core_register
1159:../Drivers/CMSIS/Include/core_cm4.h ****     \defgroup CMSIS_FPU     Floating Point Unit (FPU)
1160:../Drivers/CMSIS/Include/core_cm4.h ****     \brief      Type definitions for the Floating Point Unit (FPU)
1161:../Drivers/CMSIS/Include/core_cm4.h ****   @{
1162:../Drivers/CMSIS/Include/core_cm4.h ****  */
1163:../Drivers/CMSIS/Include/core_cm4.h **** 
1164:../Drivers/CMSIS/Include/core_cm4.h **** /** \brief  Structure type to access the Floating Point Unit (FPU).
1165:../Drivers/CMSIS/Include/core_cm4.h ****  */
1166:../Drivers/CMSIS/Include/core_cm4.h **** typedef struct
1167:../Drivers/CMSIS/Include/core_cm4.h **** {
1168:../Drivers/CMSIS/Include/core_cm4.h ****        uint32_t RESERVED0[1];
1169:../Drivers/CMSIS/Include/core_cm4.h ****   __IO uint32_t FPCCR;                   /*!< Offset: 0x004 (R/W)  Floating-Point Context Control R
ARM GAS  /tmp/ccYchH6m.s 			page 25


1170:../Drivers/CMSIS/Include/core_cm4.h ****   __IO uint32_t FPCAR;                   /*!< Offset: 0x008 (R/W)  Floating-Point Context Address R
1171:../Drivers/CMSIS/Include/core_cm4.h ****   __IO uint32_t FPDSCR;                  /*!< Offset: 0x00C (R/W)  Floating-Point Default Status Co
1172:../Drivers/CMSIS/Include/core_cm4.h ****   __I  uint32_t MVFR0;                   /*!< Offset: 0x010 (R/ )  Media and FP Feature Register 0 
1173:../Drivers/CMSIS/Include/core_cm4.h ****   __I  uint32_t MVFR1;                   /*!< Offset: 0x014 (R/ )  Media and FP Feature Register 1 
1174:../Drivers/CMSIS/Include/core_cm4.h **** } FPU_Type;
1175:../Drivers/CMSIS/Include/core_cm4.h **** 
1176:../Drivers/CMSIS/Include/core_cm4.h **** /* Floating-Point Context Control Register */
1177:../Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_ASPEN_Pos                31                                             /*!< FPCC
1178:../Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_ASPEN_Msk                (1UL << FPU_FPCCR_ASPEN_Pos)                   /*!< FPCC
1179:../Drivers/CMSIS/Include/core_cm4.h **** 
1180:../Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_LSPEN_Pos                30                                             /*!< FPCC
1181:../Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_LSPEN_Msk                (1UL << FPU_FPCCR_LSPEN_Pos)                   /*!< FPCC
1182:../Drivers/CMSIS/Include/core_cm4.h **** 
1183:../Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_MONRDY_Pos                8                                             /*!< FPCC
1184:../Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_MONRDY_Msk               (1UL << FPU_FPCCR_MONRDY_Pos)                  /*!< FPCC
1185:../Drivers/CMSIS/Include/core_cm4.h **** 
1186:../Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_BFRDY_Pos                 6                                             /*!< FPCC
1187:../Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_BFRDY_Msk                (1UL << FPU_FPCCR_BFRDY_Pos)                   /*!< FPCC
1188:../Drivers/CMSIS/Include/core_cm4.h **** 
1189:../Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_MMRDY_Pos                 5                                             /*!< FPCC
1190:../Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_MMRDY_Msk                (1UL << FPU_FPCCR_MMRDY_Pos)                   /*!< FPCC
1191:../Drivers/CMSIS/Include/core_cm4.h **** 
1192:../Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_HFRDY_Pos                 4                                             /*!< FPCC
1193:../Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_HFRDY_Msk                (1UL << FPU_FPCCR_HFRDY_Pos)                   /*!< FPCC
1194:../Drivers/CMSIS/Include/core_cm4.h **** 
1195:../Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_THREAD_Pos                3                                             /*!< FPCC
1196:../Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_THREAD_Msk               (1UL << FPU_FPCCR_THREAD_Pos)                  /*!< FPCC
1197:../Drivers/CMSIS/Include/core_cm4.h **** 
1198:../Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_USER_Pos                  1                                             /*!< FPCC
1199:../Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_USER_Msk                 (1UL << FPU_FPCCR_USER_Pos)                    /*!< FPCC
1200:../Drivers/CMSIS/Include/core_cm4.h **** 
1201:../Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_LSPACT_Pos                0                                             /*!< FPCC
1202:../Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_LSPACT_Msk               (1UL << FPU_FPCCR_LSPACT_Pos)                  /*!< FPCC
1203:../Drivers/CMSIS/Include/core_cm4.h **** 
1204:../Drivers/CMSIS/Include/core_cm4.h **** /* Floating-Point Context Address Register */
1205:../Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCAR_ADDRESS_Pos               3                                             /*!< FPCA
1206:../Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCAR_ADDRESS_Msk              (0x1FFFFFFFUL << FPU_FPCAR_ADDRESS_Pos)        /*!< FPCA
1207:../Drivers/CMSIS/Include/core_cm4.h **** 
1208:../Drivers/CMSIS/Include/core_cm4.h **** /* Floating-Point Default Status Control Register */
1209:../Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPDSCR_AHP_Pos                 26                                             /*!< FPDS
1210:../Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPDSCR_AHP_Msk                 (1UL << FPU_FPDSCR_AHP_Pos)                    /*!< FPDS
1211:../Drivers/CMSIS/Include/core_cm4.h **** 
1212:../Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPDSCR_DN_Pos                  25                                             /*!< FPDS
1213:../Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPDSCR_DN_Msk                  (1UL << FPU_FPDSCR_DN_Pos)                     /*!< FPDS
1214:../Drivers/CMSIS/Include/core_cm4.h **** 
1215:../Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPDSCR_FZ_Pos                  24                                             /*!< FPDS
1216:../Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPDSCR_FZ_Msk                  (1UL << FPU_FPDSCR_FZ_Pos)                     /*!< FPDS
1217:../Drivers/CMSIS/Include/core_cm4.h **** 
1218:../Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPDSCR_RMode_Pos               22                                             /*!< FPDS
1219:../Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPDSCR_RMode_Msk               (3UL << FPU_FPDSCR_RMode_Pos)                  /*!< FPDS
1220:../Drivers/CMSIS/Include/core_cm4.h **** 
1221:../Drivers/CMSIS/Include/core_cm4.h **** /* Media and FP Feature Register 0 */
1222:../Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_FP_rounding_modes_Pos    28                                             /*!< MVFR
1223:../Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_FP_rounding_modes_Msk    (0xFUL << FPU_MVFR0_FP_rounding_modes_Pos)     /*!< MVFR
1224:../Drivers/CMSIS/Include/core_cm4.h **** 
1225:../Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Short_vectors_Pos        24                                             /*!< MVFR
1226:../Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Short_vectors_Msk        (0xFUL << FPU_MVFR0_Short_vectors_Pos)         /*!< MVFR
ARM GAS  /tmp/ccYchH6m.s 			page 26


1227:../Drivers/CMSIS/Include/core_cm4.h **** 
1228:../Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Square_root_Pos          20                                             /*!< MVFR
1229:../Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Square_root_Msk          (0xFUL << FPU_MVFR0_Square_root_Pos)           /*!< MVFR
1230:../Drivers/CMSIS/Include/core_cm4.h **** 
1231:../Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Divide_Pos               16                                             /*!< MVFR
1232:../Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Divide_Msk               (0xFUL << FPU_MVFR0_Divide_Pos)                /*!< MVFR
1233:../Drivers/CMSIS/Include/core_cm4.h **** 
1234:../Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_FP_excep_trapping_Pos    12                                             /*!< MVFR
1235:../Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_FP_excep_trapping_Msk    (0xFUL << FPU_MVFR0_FP_excep_trapping_Pos)     /*!< MVFR
1236:../Drivers/CMSIS/Include/core_cm4.h **** 
1237:../Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Double_precision_Pos      8                                             /*!< MVFR
1238:../Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Double_precision_Msk     (0xFUL << FPU_MVFR0_Double_precision_Pos)      /*!< MVFR
1239:../Drivers/CMSIS/Include/core_cm4.h **** 
1240:../Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Single_precision_Pos      4                                             /*!< MVFR
1241:../Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Single_precision_Msk     (0xFUL << FPU_MVFR0_Single_precision_Pos)      /*!< MVFR
1242:../Drivers/CMSIS/Include/core_cm4.h **** 
1243:../Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_A_SIMD_registers_Pos      0                                             /*!< MVFR
1244:../Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_A_SIMD_registers_Msk     (0xFUL << FPU_MVFR0_A_SIMD_registers_Pos)      /*!< MVFR
1245:../Drivers/CMSIS/Include/core_cm4.h **** 
1246:../Drivers/CMSIS/Include/core_cm4.h **** /* Media and FP Feature Register 1 */
1247:../Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR1_FP_fused_MAC_Pos         28                                             /*!< MVFR
1248:../Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR1_FP_fused_MAC_Msk         (0xFUL << FPU_MVFR1_FP_fused_MAC_Pos)          /*!< MVFR
1249:../Drivers/CMSIS/Include/core_cm4.h **** 
1250:../Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR1_FP_HPFP_Pos              24                                             /*!< MVFR
1251:../Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR1_FP_HPFP_Msk              (0xFUL << FPU_MVFR1_FP_HPFP_Pos)               /*!< MVFR
1252:../Drivers/CMSIS/Include/core_cm4.h **** 
1253:../Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR1_D_NaN_mode_Pos            4                                             /*!< MVFR
1254:../Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR1_D_NaN_mode_Msk           (0xFUL << FPU_MVFR1_D_NaN_mode_Pos)            /*!< MVFR
1255:../Drivers/CMSIS/Include/core_cm4.h **** 
1256:../Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR1_FtZ_mode_Pos              0                                             /*!< MVFR
1257:../Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR1_FtZ_mode_Msk             (0xFUL << FPU_MVFR1_FtZ_mode_Pos)              /*!< MVFR
1258:../Drivers/CMSIS/Include/core_cm4.h **** 
1259:../Drivers/CMSIS/Include/core_cm4.h **** /*@} end of group CMSIS_FPU */
1260:../Drivers/CMSIS/Include/core_cm4.h **** #endif
1261:../Drivers/CMSIS/Include/core_cm4.h **** 
1262:../Drivers/CMSIS/Include/core_cm4.h **** 
1263:../Drivers/CMSIS/Include/core_cm4.h **** /** \ingroup  CMSIS_core_register
1264:../Drivers/CMSIS/Include/core_cm4.h ****     \defgroup CMSIS_CoreDebug       Core Debug Registers (CoreDebug)
1265:../Drivers/CMSIS/Include/core_cm4.h ****     \brief      Type definitions for the Core Debug Registers
1266:../Drivers/CMSIS/Include/core_cm4.h ****   @{
1267:../Drivers/CMSIS/Include/core_cm4.h ****  */
1268:../Drivers/CMSIS/Include/core_cm4.h **** 
1269:../Drivers/CMSIS/Include/core_cm4.h **** /** \brief  Structure type to access the Core Debug Register (CoreDebug).
1270:../Drivers/CMSIS/Include/core_cm4.h ****  */
1271:../Drivers/CMSIS/Include/core_cm4.h **** typedef struct
1272:../Drivers/CMSIS/Include/core_cm4.h **** {
1273:../Drivers/CMSIS/Include/core_cm4.h ****   __IO uint32_t DHCSR;                   /*!< Offset: 0x000 (R/W)  Debug Halting Control and Status
1274:../Drivers/CMSIS/Include/core_cm4.h ****   __O  uint32_t DCRSR;                   /*!< Offset: 0x004 ( /W)  Debug Core Register Selector Reg
1275:../Drivers/CMSIS/Include/core_cm4.h ****   __IO uint32_t DCRDR;                   /*!< Offset: 0x008 (R/W)  Debug Core Register Data Registe
1276:../Drivers/CMSIS/Include/core_cm4.h ****   __IO uint32_t DEMCR;                   /*!< Offset: 0x00C (R/W)  Debug Exception and Monitor Cont
1277:../Drivers/CMSIS/Include/core_cm4.h **** } CoreDebug_Type;
1278:../Drivers/CMSIS/Include/core_cm4.h **** 
1279:../Drivers/CMSIS/Include/core_cm4.h **** /* Debug Halting Control and Status Register */
1280:../Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_DBGKEY_Pos         16                                             /*!< Core
1281:../Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_DBGKEY_Msk         (0xFFFFUL << CoreDebug_DHCSR_DBGKEY_Pos)       /*!< Core
1282:../Drivers/CMSIS/Include/core_cm4.h **** 
1283:../Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_RESET_ST_Pos     25                                             /*!< Core
ARM GAS  /tmp/ccYchH6m.s 			page 27


1284:../Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_RESET_ST_Msk     (1UL << CoreDebug_DHCSR_S_RESET_ST_Pos)        /*!< Core
1285:../Drivers/CMSIS/Include/core_cm4.h **** 
1286:../Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Pos    24                                             /*!< Core
1287:../Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Msk    (1UL << CoreDebug_DHCSR_S_RETIRE_ST_Pos)       /*!< Core
1288:../Drivers/CMSIS/Include/core_cm4.h **** 
1289:../Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_LOCKUP_Pos       19                                             /*!< Core
1290:../Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_LOCKUP_Msk       (1UL << CoreDebug_DHCSR_S_LOCKUP_Pos)          /*!< Core
1291:../Drivers/CMSIS/Include/core_cm4.h **** 
1292:../Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_SLEEP_Pos        18                                             /*!< Core
1293:../Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_SLEEP_Msk        (1UL << CoreDebug_DHCSR_S_SLEEP_Pos)           /*!< Core
1294:../Drivers/CMSIS/Include/core_cm4.h **** 
1295:../Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_HALT_Pos         17                                             /*!< Core
1296:../Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_HALT_Msk         (1UL << CoreDebug_DHCSR_S_HALT_Pos)            /*!< Core
1297:../Drivers/CMSIS/Include/core_cm4.h **** 
1298:../Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_REGRDY_Pos       16                                             /*!< Core
1299:../Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_REGRDY_Msk       (1UL << CoreDebug_DHCSR_S_REGRDY_Pos)          /*!< Core
1300:../Drivers/CMSIS/Include/core_cm4.h **** 
1301:../Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Pos     5                                             /*!< Core
1302:../Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Msk    (1UL << CoreDebug_DHCSR_C_SNAPSTALL_Pos)       /*!< Core
1303:../Drivers/CMSIS/Include/core_cm4.h **** 
1304:../Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_MASKINTS_Pos      3                                             /*!< Core
1305:../Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_MASKINTS_Msk     (1UL << CoreDebug_DHCSR_C_MASKINTS_Pos)        /*!< Core
1306:../Drivers/CMSIS/Include/core_cm4.h **** 
1307:../Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_STEP_Pos          2                                             /*!< Core
1308:../Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_STEP_Msk         (1UL << CoreDebug_DHCSR_C_STEP_Pos)            /*!< Core
1309:../Drivers/CMSIS/Include/core_cm4.h **** 
1310:../Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_HALT_Pos          1                                             /*!< Core
1311:../Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_HALT_Msk         (1UL << CoreDebug_DHCSR_C_HALT_Pos)            /*!< Core
1312:../Drivers/CMSIS/Include/core_cm4.h **** 
1313:../Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Pos       0                                             /*!< Core
1314:../Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Msk      (1UL << CoreDebug_DHCSR_C_DEBUGEN_Pos)         /*!< Core
1315:../Drivers/CMSIS/Include/core_cm4.h **** 
1316:../Drivers/CMSIS/Include/core_cm4.h **** /* Debug Core Register Selector Register */
1317:../Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DCRSR_REGWnR_Pos         16                                             /*!< Core
1318:../Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DCRSR_REGWnR_Msk         (1UL << CoreDebug_DCRSR_REGWnR_Pos)            /*!< Core
1319:../Drivers/CMSIS/Include/core_cm4.h **** 
1320:../Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DCRSR_REGSEL_Pos          0                                             /*!< Core
1321:../Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DCRSR_REGSEL_Msk         (0x1FUL << CoreDebug_DCRSR_REGSEL_Pos)         /*!< Core
1322:../Drivers/CMSIS/Include/core_cm4.h **** 
1323:../Drivers/CMSIS/Include/core_cm4.h **** /* Debug Exception and Monitor Control Register */
1324:../Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_TRCENA_Pos         24                                             /*!< Core
1325:../Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_TRCENA_Msk         (1UL << CoreDebug_DEMCR_TRCENA_Pos)            /*!< Core
1326:../Drivers/CMSIS/Include/core_cm4.h **** 
1327:../Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_MON_REQ_Pos        19                                             /*!< Core
1328:../Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_MON_REQ_Msk        (1UL << CoreDebug_DEMCR_MON_REQ_Pos)           /*!< Core
1329:../Drivers/CMSIS/Include/core_cm4.h **** 
1330:../Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_MON_STEP_Pos       18                                             /*!< Core
1331:../Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_MON_STEP_Msk       (1UL << CoreDebug_DEMCR_MON_STEP_Pos)          /*!< Core
1332:../Drivers/CMSIS/Include/core_cm4.h **** 
1333:../Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_MON_PEND_Pos       17                                             /*!< Core
1334:../Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_MON_PEND_Msk       (1UL << CoreDebug_DEMCR_MON_PEND_Pos)          /*!< Core
1335:../Drivers/CMSIS/Include/core_cm4.h **** 
1336:../Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_MON_EN_Pos         16                                             /*!< Core
1337:../Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_MON_EN_Msk         (1UL << CoreDebug_DEMCR_MON_EN_Pos)            /*!< Core
1338:../Drivers/CMSIS/Include/core_cm4.h **** 
1339:../Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_HARDERR_Pos     10                                             /*!< Core
1340:../Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_HARDERR_Msk     (1UL << CoreDebug_DEMCR_VC_HARDERR_Pos)        /*!< Core
ARM GAS  /tmp/ccYchH6m.s 			page 28


1341:../Drivers/CMSIS/Include/core_cm4.h **** 
1342:../Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_INTERR_Pos       9                                             /*!< Core
1343:../Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_INTERR_Msk      (1UL << CoreDebug_DEMCR_VC_INTERR_Pos)         /*!< Core
1344:../Drivers/CMSIS/Include/core_cm4.h **** 
1345:../Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_BUSERR_Pos       8                                             /*!< Core
1346:../Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_BUSERR_Msk      (1UL << CoreDebug_DEMCR_VC_BUSERR_Pos)         /*!< Core
1347:../Drivers/CMSIS/Include/core_cm4.h **** 
1348:../Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_STATERR_Pos      7                                             /*!< Core
1349:../Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_STATERR_Msk     (1UL << CoreDebug_DEMCR_VC_STATERR_Pos)        /*!< Core
1350:../Drivers/CMSIS/Include/core_cm4.h **** 
1351:../Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_CHKERR_Pos       6                                             /*!< Core
1352:../Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_CHKERR_Msk      (1UL << CoreDebug_DEMCR_VC_CHKERR_Pos)         /*!< Core
1353:../Drivers/CMSIS/Include/core_cm4.h **** 
1354:../Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Pos      5                                             /*!< Core
1355:../Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Msk     (1UL << CoreDebug_DEMCR_VC_NOCPERR_Pos)        /*!< Core
1356:../Drivers/CMSIS/Include/core_cm4.h **** 
1357:../Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_MMERR_Pos        4                                             /*!< Core
1358:../Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_MMERR_Msk       (1UL << CoreDebug_DEMCR_VC_MMERR_Pos)          /*!< Core
1359:../Drivers/CMSIS/Include/core_cm4.h **** 
1360:../Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_CORERESET_Pos    0                                             /*!< Core
1361:../Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_CORERESET_Msk   (1UL << CoreDebug_DEMCR_VC_CORERESET_Pos)      /*!< Core
1362:../Drivers/CMSIS/Include/core_cm4.h **** 
1363:../Drivers/CMSIS/Include/core_cm4.h **** /*@} end of group CMSIS_CoreDebug */
1364:../Drivers/CMSIS/Include/core_cm4.h **** 
1365:../Drivers/CMSIS/Include/core_cm4.h **** 
1366:../Drivers/CMSIS/Include/core_cm4.h **** /** \ingroup    CMSIS_core_register
1367:../Drivers/CMSIS/Include/core_cm4.h ****     \defgroup   CMSIS_core_base     Core Definitions
1368:../Drivers/CMSIS/Include/core_cm4.h ****     \brief      Definitions for base addresses, unions, and structures.
1369:../Drivers/CMSIS/Include/core_cm4.h ****   @{
1370:../Drivers/CMSIS/Include/core_cm4.h ****  */
1371:../Drivers/CMSIS/Include/core_cm4.h **** 
1372:../Drivers/CMSIS/Include/core_cm4.h **** /* Memory mapping of Cortex-M4 Hardware */
1373:../Drivers/CMSIS/Include/core_cm4.h **** #define SCS_BASE            (0xE000E000UL)                            /*!< System Control Space Bas
1374:../Drivers/CMSIS/Include/core_cm4.h **** #define ITM_BASE            (0xE0000000UL)                            /*!< ITM Base Address        
1375:../Drivers/CMSIS/Include/core_cm4.h **** #define DWT_BASE            (0xE0001000UL)                            /*!< DWT Base Address        
1376:../Drivers/CMSIS/Include/core_cm4.h **** #define TPI_BASE            (0xE0040000UL)                            /*!< TPI Base Address        
1377:../Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_BASE      (0xE000EDF0UL)                            /*!< Core Debug Base Address 
1378:../Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_BASE        (SCS_BASE +  0x0010UL)                    /*!< SysTick Base Address    
1379:../Drivers/CMSIS/Include/core_cm4.h **** #define NVIC_BASE           (SCS_BASE +  0x0100UL)                    /*!< NVIC Base Address       
1380:../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_BASE            (SCS_BASE +  0x0D00UL)                    /*!< System Control Block Bas
1381:../Drivers/CMSIS/Include/core_cm4.h **** 
1382:../Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB              ((SCnSCB_Type    *)     SCS_BASE      )   /*!< System control Register 
1383:../Drivers/CMSIS/Include/core_cm4.h **** #define SCB                 ((SCB_Type       *)     SCB_BASE      )   /*!< SCB configuration struct
1384:../Drivers/CMSIS/Include/core_cm4.h **** #define SysTick             ((SysTick_Type   *)     SysTick_BASE  )   /*!< SysTick configuration st
1385:../Drivers/CMSIS/Include/core_cm4.h **** #define NVIC                ((NVIC_Type      *)     NVIC_BASE     )   /*!< NVIC configuration struc
1386:../Drivers/CMSIS/Include/core_cm4.h **** #define ITM                 ((ITM_Type       *)     ITM_BASE      )   /*!< ITM configuration struct
1387:../Drivers/CMSIS/Include/core_cm4.h **** #define DWT                 ((DWT_Type       *)     DWT_BASE      )   /*!< DWT configuration struct
1388:../Drivers/CMSIS/Include/core_cm4.h **** #define TPI                 ((TPI_Type       *)     TPI_BASE      )   /*!< TPI configuration struct
1389:../Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug           ((CoreDebug_Type *)     CoreDebug_BASE)   /*!< Core Debug configuration
1390:../Drivers/CMSIS/Include/core_cm4.h **** 
1391:../Drivers/CMSIS/Include/core_cm4.h **** #if (__MPU_PRESENT == 1)
1392:../Drivers/CMSIS/Include/core_cm4.h ****   #define MPU_BASE          (SCS_BASE +  0x0D90UL)                    /*!< Memory Protection Unit  
1393:../Drivers/CMSIS/Include/core_cm4.h ****   #define MPU               ((MPU_Type       *)     MPU_BASE      )   /*!< Memory Protection Unit  
1394:../Drivers/CMSIS/Include/core_cm4.h **** #endif
1395:../Drivers/CMSIS/Include/core_cm4.h **** 
1396:../Drivers/CMSIS/Include/core_cm4.h **** #if (__FPU_PRESENT == 1)
1397:../Drivers/CMSIS/Include/core_cm4.h ****   #define FPU_BASE          (SCS_BASE +  0x0F30UL)                    /*!< Floating Point Unit     
ARM GAS  /tmp/ccYchH6m.s 			page 29


1398:../Drivers/CMSIS/Include/core_cm4.h ****   #define FPU               ((FPU_Type       *)     FPU_BASE      )   /*!< Floating Point Unit     
1399:../Drivers/CMSIS/Include/core_cm4.h **** #endif
1400:../Drivers/CMSIS/Include/core_cm4.h **** 
1401:../Drivers/CMSIS/Include/core_cm4.h **** /*@} */
1402:../Drivers/CMSIS/Include/core_cm4.h **** 
1403:../Drivers/CMSIS/Include/core_cm4.h **** 
1404:../Drivers/CMSIS/Include/core_cm4.h **** 
1405:../Drivers/CMSIS/Include/core_cm4.h **** /*******************************************************************************
1406:../Drivers/CMSIS/Include/core_cm4.h ****  *                Hardware Abstraction Layer
1407:../Drivers/CMSIS/Include/core_cm4.h ****   Core Function Interface contains:
1408:../Drivers/CMSIS/Include/core_cm4.h ****   - Core NVIC Functions
1409:../Drivers/CMSIS/Include/core_cm4.h ****   - Core SysTick Functions
1410:../Drivers/CMSIS/Include/core_cm4.h ****   - Core Debug Functions
1411:../Drivers/CMSIS/Include/core_cm4.h ****   - Core Register Access Functions
1412:../Drivers/CMSIS/Include/core_cm4.h ****  ******************************************************************************/
1413:../Drivers/CMSIS/Include/core_cm4.h **** /** \defgroup CMSIS_Core_FunctionInterface Functions and Instructions Reference
1414:../Drivers/CMSIS/Include/core_cm4.h **** */
1415:../Drivers/CMSIS/Include/core_cm4.h **** 
1416:../Drivers/CMSIS/Include/core_cm4.h **** 
1417:../Drivers/CMSIS/Include/core_cm4.h **** 
1418:../Drivers/CMSIS/Include/core_cm4.h **** /* ##########################   NVIC functions  #################################### */
1419:../Drivers/CMSIS/Include/core_cm4.h **** /** \ingroup  CMSIS_Core_FunctionInterface
1420:../Drivers/CMSIS/Include/core_cm4.h ****     \defgroup CMSIS_Core_NVICFunctions NVIC Functions
1421:../Drivers/CMSIS/Include/core_cm4.h ****     \brief      Functions that manage interrupts and exceptions via the NVIC.
1422:../Drivers/CMSIS/Include/core_cm4.h ****     @{
1423:../Drivers/CMSIS/Include/core_cm4.h ****  */
1424:../Drivers/CMSIS/Include/core_cm4.h **** 
1425:../Drivers/CMSIS/Include/core_cm4.h **** /** \brief  Set Priority Grouping
1426:../Drivers/CMSIS/Include/core_cm4.h **** 
1427:../Drivers/CMSIS/Include/core_cm4.h ****   The function sets the priority grouping field using the required unlock sequence.
1428:../Drivers/CMSIS/Include/core_cm4.h ****   The parameter PriorityGroup is assigned to the field SCB->AIRCR [10:8] PRIGROUP field.
1429:../Drivers/CMSIS/Include/core_cm4.h ****   Only values from 0..7 are used.
1430:../Drivers/CMSIS/Include/core_cm4.h ****   In case of a conflict between priority grouping and available
1431:../Drivers/CMSIS/Include/core_cm4.h ****   priority bits (__NVIC_PRIO_BITS), the smallest possible priority group is set.
1432:../Drivers/CMSIS/Include/core_cm4.h **** 
1433:../Drivers/CMSIS/Include/core_cm4.h ****     \param [in]      PriorityGroup  Priority grouping field.
1434:../Drivers/CMSIS/Include/core_cm4.h ****  */
1435:../Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE void NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
1436:../Drivers/CMSIS/Include/core_cm4.h **** {
1437:../Drivers/CMSIS/Include/core_cm4.h ****   uint32_t reg_value;
1438:../Drivers/CMSIS/Include/core_cm4.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07);               /* only values 0..7 a
1439:../Drivers/CMSIS/Include/core_cm4.h **** 
1440:../Drivers/CMSIS/Include/core_cm4.h ****   reg_value  =  SCB->AIRCR;                                                   /* read old register 
  39              		.loc 2 1440 0
  40 0000 074A     		ldr	r2, .L2
  41 0002 D368     		ldr	r3, [r2, #12]
  42              	.LVL1:
1441:../Drivers/CMSIS/Include/core_cm4.h ****   reg_value &= ~(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk);             /* clear bits to chan
  43              		.loc 2 1441 0
  44 0004 23F4E063 		bic	r3, r3, #1792
  45              	.LVL2:
  46 0008 1B04     		lsls	r3, r3, #16
  47 000a 1B0C     		lsrs	r3, r3, #16
  48              	.LVL3:
1442:../Drivers/CMSIS/Include/core_cm4.h ****   reg_value  =  (reg_value                                 |
1443:../Drivers/CMSIS/Include/core_cm4.h ****                 ((uint32_t)0x5FA << SCB_AIRCR_VECTKEY_Pos) |
1444:../Drivers/CMSIS/Include/core_cm4.h ****                 (PriorityGroupTmp << 8));                                     /* Insert write key a
ARM GAS  /tmp/ccYchH6m.s 			page 30


  49              		.loc 2 1444 0
  50 000c 0002     		lsls	r0, r0, #8
  51              	.LVL4:
  52 000e 00F4E060 		and	r0, r0, #1792
1443:../Drivers/CMSIS/Include/core_cm4.h ****                 (PriorityGroupTmp << 8));                                     /* Insert write key a
  53              		.loc 2 1443 0
  54 0012 1843     		orrs	r0, r0, r3
1442:../Drivers/CMSIS/Include/core_cm4.h ****   reg_value  =  (reg_value                                 |
  55              		.loc 2 1442 0
  56 0014 40F0BF60 		orr	r0, r0, #100139008
  57 0018 40F40030 		orr	r0, r0, #131072
  58              	.LVL5:
1445:../Drivers/CMSIS/Include/core_cm4.h ****   SCB->AIRCR =  reg_value;
  59              		.loc 2 1445 0
  60 001c D060     		str	r0, [r2, #12]
  61              	.LVL6:
  62 001e 7047     		bx	lr
  63              	.L3:
  64              		.align	2
  65              	.L2:
  66 0020 00ED00E0 		.word	-536810240
  67              	.LBE39:
  68              	.LBE38:
  69              		.cfi_endproc
  70              	.LFE112:
  72              		.section	.text.HAL_NVIC_SetPriority,"ax",%progbits
  73              		.align	2
  74              		.global	HAL_NVIC_SetPriority
  75              		.thumb
  76              		.thumb_func
  78              	HAL_NVIC_SetPriority:
  79              	.LFB113:
 163:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   /* Check the parameters */
 164:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));
 165:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   
 166:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
 167:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   NVIC_SetPriorityGrouping(PriorityGroup);
 168:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c **** }
 169:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c **** 
 170:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c **** /**
 171:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   * @brief  Sets the priority of an interrupt.
 172:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   * @param  IRQn: External interrupt number.
 173:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   *         This parameter can be an enumerator of IRQn_Type enumeration
 174:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   *         (For the complete STM32 Devices IRQ Channels list, please refer to stm32f4xx.h file)
 175:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   * @param  PreemptPriority: The pre-emption priority for the IRQn channel.
 176:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   *         This parameter can be a value between 0 and 15
 177:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   *         A lower priority value indicates a higher priority 
 178:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   * @param  SubPriority: the subpriority level for the IRQ channel.
 179:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   *         This parameter can be a value between 0 and 15
 180:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   *         A lower priority value indicates a higher priority.          
 181:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   * @retval None
 182:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   */
 183:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c **** void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
 184:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c **** { 
  80              		.loc 1 184 0
  81              		.cfi_startproc
  82              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/ccYchH6m.s 			page 31


  83              		@ frame_needed = 0, uses_anonymous_args = 0
  84              		@ link register save eliminated.
  85              	.LVL7:
  86 0000 30B4     		push	{r4, r5}
  87              	.LCFI0:
  88              		.cfi_def_cfa_offset 8
  89              		.cfi_offset 4, -8
  90              		.cfi_offset 5, -4
  91              	.LVL8:
  92              	.LBB40:
  93              	.LBB41:
1446:../Drivers/CMSIS/Include/core_cm4.h **** }
1447:../Drivers/CMSIS/Include/core_cm4.h **** 
1448:../Drivers/CMSIS/Include/core_cm4.h **** 
1449:../Drivers/CMSIS/Include/core_cm4.h **** /** \brief  Get Priority Grouping
1450:../Drivers/CMSIS/Include/core_cm4.h **** 
1451:../Drivers/CMSIS/Include/core_cm4.h ****   The function reads the priority grouping field from the NVIC Interrupt Controller.
1452:../Drivers/CMSIS/Include/core_cm4.h **** 
1453:../Drivers/CMSIS/Include/core_cm4.h ****     \return                Priority grouping field (SCB->AIRCR [10:8] PRIGROUP field).
1454:../Drivers/CMSIS/Include/core_cm4.h ****  */
1455:../Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE uint32_t NVIC_GetPriorityGrouping(void)
1456:../Drivers/CMSIS/Include/core_cm4.h **** {
1457:../Drivers/CMSIS/Include/core_cm4.h ****   return ((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos);   /* read priority grou
  94              		.loc 2 1457 0
  95 0002 164B     		ldr	r3, .L10
  96 0004 DB68     		ldr	r3, [r3, #12]
  97 0006 C3F30223 		ubfx	r3, r3, #8, #3
  98              	.LVL9:
  99              	.LBE41:
 100              	.LBE40:
 101              	.LBB42:
 102              	.LBB43:
1458:../Drivers/CMSIS/Include/core_cm4.h **** }
1459:../Drivers/CMSIS/Include/core_cm4.h **** 
1460:../Drivers/CMSIS/Include/core_cm4.h **** 
1461:../Drivers/CMSIS/Include/core_cm4.h **** /** \brief  Enable External Interrupt
1462:../Drivers/CMSIS/Include/core_cm4.h **** 
1463:../Drivers/CMSIS/Include/core_cm4.h ****     The function enables a device-specific interrupt in the NVIC interrupt controller.
1464:../Drivers/CMSIS/Include/core_cm4.h **** 
1465:../Drivers/CMSIS/Include/core_cm4.h ****     \param [in]      IRQn  External interrupt number. Value cannot be negative.
1466:../Drivers/CMSIS/Include/core_cm4.h ****  */
1467:../Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE void NVIC_EnableIRQ(IRQn_Type IRQn)
1468:../Drivers/CMSIS/Include/core_cm4.h **** {
1469:../Drivers/CMSIS/Include/core_cm4.h **** /*  NVIC->ISER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F));  enable interrupt */
1470:../Drivers/CMSIS/Include/core_cm4.h ****   NVIC->ISER[(uint32_t)((int32_t)IRQn) >> 5] = (uint32_t)(1 << ((uint32_t)((int32_t)IRQn) & (uint32
1471:../Drivers/CMSIS/Include/core_cm4.h **** }
1472:../Drivers/CMSIS/Include/core_cm4.h **** 
1473:../Drivers/CMSIS/Include/core_cm4.h **** 
1474:../Drivers/CMSIS/Include/core_cm4.h **** /** \brief  Disable External Interrupt
1475:../Drivers/CMSIS/Include/core_cm4.h **** 
1476:../Drivers/CMSIS/Include/core_cm4.h ****     The function disables a device-specific interrupt in the NVIC interrupt controller.
1477:../Drivers/CMSIS/Include/core_cm4.h **** 
1478:../Drivers/CMSIS/Include/core_cm4.h ****     \param [in]      IRQn  External interrupt number. Value cannot be negative.
1479:../Drivers/CMSIS/Include/core_cm4.h ****  */
1480:../Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE void NVIC_DisableIRQ(IRQn_Type IRQn)
1481:../Drivers/CMSIS/Include/core_cm4.h **** {
1482:../Drivers/CMSIS/Include/core_cm4.h ****   NVIC->ICER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* disable interrupt */
ARM GAS  /tmp/ccYchH6m.s 			page 32


1483:../Drivers/CMSIS/Include/core_cm4.h **** }
1484:../Drivers/CMSIS/Include/core_cm4.h **** 
1485:../Drivers/CMSIS/Include/core_cm4.h **** 
1486:../Drivers/CMSIS/Include/core_cm4.h **** /** \brief  Get Pending Interrupt
1487:../Drivers/CMSIS/Include/core_cm4.h **** 
1488:../Drivers/CMSIS/Include/core_cm4.h ****     The function reads the pending register in the NVIC and returns the pending bit
1489:../Drivers/CMSIS/Include/core_cm4.h ****     for the specified interrupt.
1490:../Drivers/CMSIS/Include/core_cm4.h **** 
1491:../Drivers/CMSIS/Include/core_cm4.h ****     \param [in]      IRQn  Interrupt number.
1492:../Drivers/CMSIS/Include/core_cm4.h **** 
1493:../Drivers/CMSIS/Include/core_cm4.h ****     \return             0  Interrupt status is not pending.
1494:../Drivers/CMSIS/Include/core_cm4.h ****     \return             1  Interrupt status is pending.
1495:../Drivers/CMSIS/Include/core_cm4.h ****  */
1496:../Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE uint32_t NVIC_GetPendingIRQ(IRQn_Type IRQn)
1497:../Drivers/CMSIS/Include/core_cm4.h **** {
1498:../Drivers/CMSIS/Include/core_cm4.h ****   return((uint32_t) ((NVIC->ISPR[(uint32_t)(IRQn) >> 5] & (1 << ((uint32_t)(IRQn) & 0x1F)))?1:0)); 
1499:../Drivers/CMSIS/Include/core_cm4.h **** }
1500:../Drivers/CMSIS/Include/core_cm4.h **** 
1501:../Drivers/CMSIS/Include/core_cm4.h **** 
1502:../Drivers/CMSIS/Include/core_cm4.h **** /** \brief  Set Pending Interrupt
1503:../Drivers/CMSIS/Include/core_cm4.h **** 
1504:../Drivers/CMSIS/Include/core_cm4.h ****     The function sets the pending bit of an external interrupt.
1505:../Drivers/CMSIS/Include/core_cm4.h **** 
1506:../Drivers/CMSIS/Include/core_cm4.h ****     \param [in]      IRQn  Interrupt number. Value cannot be negative.
1507:../Drivers/CMSIS/Include/core_cm4.h ****  */
1508:../Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE void NVIC_SetPendingIRQ(IRQn_Type IRQn)
1509:../Drivers/CMSIS/Include/core_cm4.h **** {
1510:../Drivers/CMSIS/Include/core_cm4.h ****   NVIC->ISPR[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* set interrupt pending 
1511:../Drivers/CMSIS/Include/core_cm4.h **** }
1512:../Drivers/CMSIS/Include/core_cm4.h **** 
1513:../Drivers/CMSIS/Include/core_cm4.h **** 
1514:../Drivers/CMSIS/Include/core_cm4.h **** /** \brief  Clear Pending Interrupt
1515:../Drivers/CMSIS/Include/core_cm4.h **** 
1516:../Drivers/CMSIS/Include/core_cm4.h ****     The function clears the pending bit of an external interrupt.
1517:../Drivers/CMSIS/Include/core_cm4.h **** 
1518:../Drivers/CMSIS/Include/core_cm4.h ****     \param [in]      IRQn  External interrupt number. Value cannot be negative.
1519:../Drivers/CMSIS/Include/core_cm4.h ****  */
1520:../Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE void NVIC_ClearPendingIRQ(IRQn_Type IRQn)
1521:../Drivers/CMSIS/Include/core_cm4.h **** {
1522:../Drivers/CMSIS/Include/core_cm4.h ****   NVIC->ICPR[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* Clear pending interrup
1523:../Drivers/CMSIS/Include/core_cm4.h **** }
1524:../Drivers/CMSIS/Include/core_cm4.h **** 
1525:../Drivers/CMSIS/Include/core_cm4.h **** 
1526:../Drivers/CMSIS/Include/core_cm4.h **** /** \brief  Get Active Interrupt
1527:../Drivers/CMSIS/Include/core_cm4.h **** 
1528:../Drivers/CMSIS/Include/core_cm4.h ****     The function reads the active register in NVIC and returns the active bit.
1529:../Drivers/CMSIS/Include/core_cm4.h **** 
1530:../Drivers/CMSIS/Include/core_cm4.h ****     \param [in]      IRQn  Interrupt number.
1531:../Drivers/CMSIS/Include/core_cm4.h **** 
1532:../Drivers/CMSIS/Include/core_cm4.h ****     \return             0  Interrupt status is not active.
1533:../Drivers/CMSIS/Include/core_cm4.h ****     \return             1  Interrupt status is active.
1534:../Drivers/CMSIS/Include/core_cm4.h ****  */
1535:../Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE uint32_t NVIC_GetActive(IRQn_Type IRQn)
1536:../Drivers/CMSIS/Include/core_cm4.h **** {
1537:../Drivers/CMSIS/Include/core_cm4.h ****   return((uint32_t)((NVIC->IABR[(uint32_t)(IRQn) >> 5] & (1 << ((uint32_t)(IRQn) & 0x1F)))?1:0)); /
1538:../Drivers/CMSIS/Include/core_cm4.h **** }
1539:../Drivers/CMSIS/Include/core_cm4.h **** 
ARM GAS  /tmp/ccYchH6m.s 			page 33


1540:../Drivers/CMSIS/Include/core_cm4.h **** 
1541:../Drivers/CMSIS/Include/core_cm4.h **** /** \brief  Set Interrupt Priority
1542:../Drivers/CMSIS/Include/core_cm4.h **** 
1543:../Drivers/CMSIS/Include/core_cm4.h ****     The function sets the priority of an interrupt.
1544:../Drivers/CMSIS/Include/core_cm4.h **** 
1545:../Drivers/CMSIS/Include/core_cm4.h ****     \note The priority cannot be set for every core interrupt.
1546:../Drivers/CMSIS/Include/core_cm4.h **** 
1547:../Drivers/CMSIS/Include/core_cm4.h ****     \param [in]      IRQn  Interrupt number.
1548:../Drivers/CMSIS/Include/core_cm4.h ****     \param [in]  priority  Priority to set.
1549:../Drivers/CMSIS/Include/core_cm4.h ****  */
1550:../Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE void NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
1551:../Drivers/CMSIS/Include/core_cm4.h **** {
1552:../Drivers/CMSIS/Include/core_cm4.h ****   if(IRQn < 0) {
1553:../Drivers/CMSIS/Include/core_cm4.h ****     SCB->SHP[((uint32_t)(IRQn) & 0xF)-4] = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff); } /* set 
1554:../Drivers/CMSIS/Include/core_cm4.h ****   else {
1555:../Drivers/CMSIS/Include/core_cm4.h ****     NVIC->IP[(uint32_t)(IRQn)] = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff);    }        /* set 
1556:../Drivers/CMSIS/Include/core_cm4.h **** }
1557:../Drivers/CMSIS/Include/core_cm4.h **** 
1558:../Drivers/CMSIS/Include/core_cm4.h **** 
1559:../Drivers/CMSIS/Include/core_cm4.h **** /** \brief  Get Interrupt Priority
1560:../Drivers/CMSIS/Include/core_cm4.h **** 
1561:../Drivers/CMSIS/Include/core_cm4.h ****     The function reads the priority of an interrupt. The interrupt
1562:../Drivers/CMSIS/Include/core_cm4.h ****     number can be positive to specify an external (device specific)
1563:../Drivers/CMSIS/Include/core_cm4.h ****     interrupt, or negative to specify an internal (core) interrupt.
1564:../Drivers/CMSIS/Include/core_cm4.h **** 
1565:../Drivers/CMSIS/Include/core_cm4.h **** 
1566:../Drivers/CMSIS/Include/core_cm4.h ****     \param [in]   IRQn  Interrupt number.
1567:../Drivers/CMSIS/Include/core_cm4.h ****     \return             Interrupt Priority. Value is aligned automatically to the implemented
1568:../Drivers/CMSIS/Include/core_cm4.h ****                         priority bits of the microcontroller.
1569:../Drivers/CMSIS/Include/core_cm4.h ****  */
1570:../Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE uint32_t NVIC_GetPriority(IRQn_Type IRQn)
1571:../Drivers/CMSIS/Include/core_cm4.h **** {
1572:../Drivers/CMSIS/Include/core_cm4.h **** 
1573:../Drivers/CMSIS/Include/core_cm4.h ****   if(IRQn < 0) {
1574:../Drivers/CMSIS/Include/core_cm4.h ****     return((uint32_t)(SCB->SHP[((uint32_t)(IRQn) & 0xF)-4] >> (8 - __NVIC_PRIO_BITS)));  } /* get p
1575:../Drivers/CMSIS/Include/core_cm4.h ****   else {
1576:../Drivers/CMSIS/Include/core_cm4.h ****     return((uint32_t)(NVIC->IP[(uint32_t)(IRQn)]           >> (8 - __NVIC_PRIO_BITS)));  } /* get p
1577:../Drivers/CMSIS/Include/core_cm4.h **** }
1578:../Drivers/CMSIS/Include/core_cm4.h **** 
1579:../Drivers/CMSIS/Include/core_cm4.h **** 
1580:../Drivers/CMSIS/Include/core_cm4.h **** /** \brief  Encode Priority
1581:../Drivers/CMSIS/Include/core_cm4.h **** 
1582:../Drivers/CMSIS/Include/core_cm4.h ****     The function encodes the priority for an interrupt with the given priority group,
1583:../Drivers/CMSIS/Include/core_cm4.h ****     preemptive priority value, and subpriority value.
1584:../Drivers/CMSIS/Include/core_cm4.h ****     In case of a conflict between priority grouping and available
1585:../Drivers/CMSIS/Include/core_cm4.h ****     priority bits (__NVIC_PRIO_BITS), the samllest possible priority group is set.
1586:../Drivers/CMSIS/Include/core_cm4.h **** 
1587:../Drivers/CMSIS/Include/core_cm4.h ****     \param [in]     PriorityGroup  Used priority group.
1588:../Drivers/CMSIS/Include/core_cm4.h ****     \param [in]   PreemptPriority  Preemptive priority value (starting from 0).
1589:../Drivers/CMSIS/Include/core_cm4.h ****     \param [in]       SubPriority  Subpriority value (starting from 0).
1590:../Drivers/CMSIS/Include/core_cm4.h ****     \return                        Encoded priority. Value can be used in the function \ref NVIC_Se
1591:../Drivers/CMSIS/Include/core_cm4.h ****  */
1592:../Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE uint32_t NVIC_EncodePriority (uint32_t PriorityGroup, uint32_t PreemptPriority, uin
1593:../Drivers/CMSIS/Include/core_cm4.h **** {
1594:../Drivers/CMSIS/Include/core_cm4.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & 0x07);          /* only values 0..7 are used        
1595:../Drivers/CMSIS/Include/core_cm4.h ****   uint32_t PreemptPriorityBits;
1596:../Drivers/CMSIS/Include/core_cm4.h ****   uint32_t SubPriorityBits;
ARM GAS  /tmp/ccYchH6m.s 			page 34


1597:../Drivers/CMSIS/Include/core_cm4.h **** 
1598:../Drivers/CMSIS/Include/core_cm4.h ****   PreemptPriorityBits = ((7 - PriorityGroupTmp) > __NVIC_PRIO_BITS) ? __NVIC_PRIO_BITS : 7 - Priori
 103              		.loc 2 1598 0
 104 000a C3F10704 		rsb	r4, r3, #7
 105 000e 042C     		cmp	r4, #4
 106 0010 28BF     		it	cs
 107 0012 0424     		movcs	r4, #4
 108              	.LVL10:
1599:../Drivers/CMSIS/Include/core_cm4.h ****   SubPriorityBits     = ((PriorityGroupTmp + __NVIC_PRIO_BITS) < 7) ? 0 : PriorityGroupTmp - 7 + __
 109              		.loc 2 1599 0
 110 0014 1D1D     		adds	r5, r3, #4
 111 0016 062D     		cmp	r5, #6
 112 0018 01D9     		bls	.L8
 113 001a 033B     		subs	r3, r3, #3
 114              	.LVL11:
 115 001c 00E0     		b	.L5
 116              	.LVL12:
 117              	.L8:
 118 001e 0023     		movs	r3, #0
 119              	.LVL13:
 120              	.L5:
1600:../Drivers/CMSIS/Include/core_cm4.h **** 
1601:../Drivers/CMSIS/Include/core_cm4.h ****   return (
1602:../Drivers/CMSIS/Include/core_cm4.h ****            ((PreemptPriority & ((1 << (PreemptPriorityBits)) - 1)) << SubPriorityBits) |
 121              		.loc 2 1602 0
 122 0020 0125     		movs	r5, #1
 123              	.LVL14:
 124 0022 05FA04F4 		lsl	r4, r5, r4
 125              	.LVL15:
 126 0026 013C     		subs	r4, r4, #1
 127 0028 2140     		ands	r1, r1, r4
 128              	.LVL16:
 129 002a 9940     		lsls	r1, r1, r3
1603:../Drivers/CMSIS/Include/core_cm4.h ****            ((SubPriority     & ((1 << (SubPriorityBits    )) - 1)))
 130              		.loc 2 1603 0
 131 002c 05FA03F3 		lsl	r3, r5, r3
 132              	.LVL17:
 133 0030 013B     		subs	r3, r3, #1
 134 0032 1A40     		ands	r2, r2, r3
 135              	.LVL18:
1601:../Drivers/CMSIS/Include/core_cm4.h ****            ((PreemptPriority & ((1 << (PreemptPriorityBits)) - 1)) << SubPriorityBits) |
 136              		.loc 2 1601 0
 137 0034 0A43     		orrs	r2, r2, r1
 138              	.LVL19:
 139              	.LBE43:
 140              	.LBE42:
 141              	.LBB44:
 142              	.LBB45:
1552:../Drivers/CMSIS/Include/core_cm4.h ****     SCB->SHP[((uint32_t)(IRQn) & 0xF)-4] = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff); } /* set 
 143              		.loc 2 1552 0
 144 0036 0028     		cmp	r0, #0
 145 0038 06DA     		bge	.L6
1553:../Drivers/CMSIS/Include/core_cm4.h ****   else {
 146              		.loc 2 1553 0
 147 003a 00F00F00 		and	r0, r0, #15
 148              	.LVL20:
 149 003e 1201     		lsls	r2, r2, #4
ARM GAS  /tmp/ccYchH6m.s 			page 35


 150 0040 D2B2     		uxtb	r2, r2
 151 0042 074B     		ldr	r3, .L10+4
 152 0044 1A54     		strb	r2, [r3, r0]
 153 0046 07E0     		b	.L4
 154              	.LVL21:
 155              	.L6:
1555:../Drivers/CMSIS/Include/core_cm4.h **** }
 156              		.loc 2 1555 0
 157 0048 1201     		lsls	r2, r2, #4
 158 004a D2B2     		uxtb	r2, r2
 159 004c 00F16040 		add	r0, r0, #-536870912
 160              	.LVL22:
 161 0050 00F56140 		add	r0, r0, #57600
 162 0054 80F80023 		strb	r2, [r0, #768]
 163              	.LVL23:
 164              	.L4:
 165              	.LBE45:
 166              	.LBE44:
 185:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   uint32_t prioritygroup = 0x00;
 186:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   
 187:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   /* Check the parameters */
 188:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   assert_param(IS_NVIC_SUB_PRIORITY(SubPriority));
 189:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
 190:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   
 191:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   prioritygroup = NVIC_GetPriorityGrouping();
 192:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   
 193:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
 194:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c **** }
 167              		.loc 1 194 0
 168 0058 30BC     		pop	{r4, r5}
 169              	.LCFI1:
 170              		.cfi_restore 5
 171              		.cfi_restore 4
 172              		.cfi_def_cfa_offset 0
 173 005a 7047     		bx	lr
 174              	.L11:
 175              		.align	2
 176              	.L10:
 177 005c 00ED00E0 		.word	-536810240
 178 0060 14ED00E0 		.word	-536810220
 179              		.cfi_endproc
 180              	.LFE113:
 182              		.section	.text.HAL_NVIC_EnableIRQ,"ax",%progbits
 183              		.align	2
 184              		.global	HAL_NVIC_EnableIRQ
 185              		.thumb
 186              		.thumb_func
 188              	HAL_NVIC_EnableIRQ:
 189              	.LFB114:
 195:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c **** 
 196:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c **** /**
 197:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   * @brief  Enables a device specific interrupt in the NVIC interrupt controller.
 198:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   * @note   To configure interrupts priority correctly, the NVIC_PriorityGroupConfig()
 199:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   *         function should be called before. 
 200:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   * @param  IRQn External interrupt number.
 201:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   *         This parameter can be an enumerator of IRQn_Type enumeration
 202:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   *         (For the complete STM32 Devices IRQ Channels list, please refer to stm32f4xx.h file)  
ARM GAS  /tmp/ccYchH6m.s 			page 36


 203:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   * @retval None
 204:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   */
 205:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c **** void HAL_NVIC_EnableIRQ(IRQn_Type IRQn)
 206:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c **** {
 190              		.loc 1 206 0
 191              		.cfi_startproc
 192              		@ args = 0, pretend = 0, frame = 0
 193              		@ frame_needed = 0, uses_anonymous_args = 0
 194              		@ link register save eliminated.
 195              	.LVL24:
 196              	.LBB46:
 197              	.LBB47:
1470:../Drivers/CMSIS/Include/core_cm4.h **** }
 198              		.loc 2 1470 0
 199 0000 4209     		lsrs	r2, r0, #5
 200 0002 00F01F00 		and	r0, r0, #31
 201              	.LVL25:
 202 0006 0123     		movs	r3, #1
 203 0008 03FA00F0 		lsl	r0, r3, r0
 204 000c 014B     		ldr	r3, .L13
 205 000e 43F82200 		str	r0, [r3, r2, lsl #2]
 206              	.LVL26:
 207 0012 7047     		bx	lr
 208              	.L14:
 209              		.align	2
 210              	.L13:
 211 0014 00E100E0 		.word	-536813312
 212              	.LBE47:
 213              	.LBE46:
 214              		.cfi_endproc
 215              	.LFE114:
 217              		.section	.text.HAL_NVIC_DisableIRQ,"ax",%progbits
 218              		.align	2
 219              		.global	HAL_NVIC_DisableIRQ
 220              		.thumb
 221              		.thumb_func
 223              	HAL_NVIC_DisableIRQ:
 224              	.LFB115:
 207:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   /* Enable interrupt */
 208:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   NVIC_EnableIRQ(IRQn);
 209:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c **** }
 210:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c **** 
 211:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c **** /**
 212:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   * @brief  Disables a device specific interrupt in the NVIC interrupt controller.
 213:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   * @param  IRQn External interrupt number.
 214:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   *         This parameter can be an enumerator of IRQn_Type enumeration
 215:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   *         (For the complete STM32 Devices IRQ Channels list, please refer to stm32f4xx.h file)  
 216:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   * @retval None
 217:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   */
 218:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c **** void HAL_NVIC_DisableIRQ(IRQn_Type IRQn)
 219:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c **** {
 225              		.loc 1 219 0
 226              		.cfi_startproc
 227              		@ args = 0, pretend = 0, frame = 0
 228              		@ frame_needed = 0, uses_anonymous_args = 0
 229              		@ link register save eliminated.
 230              	.LVL27:
ARM GAS  /tmp/ccYchH6m.s 			page 37


 231              	.LBB48:
 232              	.LBB49:
1482:../Drivers/CMSIS/Include/core_cm4.h **** }
 233              		.loc 2 1482 0
 234 0000 4309     		lsrs	r3, r0, #5
 235 0002 00F01F00 		and	r0, r0, #31
 236              	.LVL28:
 237 0006 0122     		movs	r2, #1
 238 0008 02FA00F0 		lsl	r0, r2, r0
 239 000c 2033     		adds	r3, r3, #32
 240 000e 024A     		ldr	r2, .L16
 241 0010 42F82300 		str	r0, [r2, r3, lsl #2]
 242              	.LVL29:
 243 0014 7047     		bx	lr
 244              	.L17:
 245 0016 00BF     		.align	2
 246              	.L16:
 247 0018 00E100E0 		.word	-536813312
 248              	.LBE49:
 249              	.LBE48:
 250              		.cfi_endproc
 251              	.LFE115:
 253              		.section	.text.HAL_NVIC_SystemReset,"ax",%progbits
 254              		.align	2
 255              		.global	HAL_NVIC_SystemReset
 256              		.thumb
 257              		.thumb_func
 259              	HAL_NVIC_SystemReset:
 260              	.LFB116:
 220:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   /* Disable interrupt */
 221:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   NVIC_DisableIRQ(IRQn);
 222:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c **** }
 223:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c **** 
 224:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c **** /**
 225:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   * @brief  Initiates a system reset request to reset the MCU.
 226:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   * @param None
 227:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   * @retval None
 228:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   */
 229:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c **** void HAL_NVIC_SystemReset(void)
 230:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c **** {
 261              		.loc 1 230 0
 262              		.cfi_startproc
 263              		@ Volatile: function does not return.
 264              		@ args = 0, pretend = 0, frame = 0
 265              		@ frame_needed = 0, uses_anonymous_args = 0
 266              		@ link register save eliminated.
 267              	.LBB56:
 268              	.LBB57:
 269              	.LBB58:
 270              	.LBB59:
 271              		.file 3 "../Drivers/CMSIS/Include/core_cmInstr.h"
   1:../Drivers/CMSIS/Include/core_cmInstr.h **** /**************************************************************************//**
   2:../Drivers/CMSIS/Include/core_cmInstr.h ****  * @file     core_cmInstr.h
   3:../Drivers/CMSIS/Include/core_cmInstr.h ****  * @brief    CMSIS Cortex-M Core Instruction Access Header File
   4:../Drivers/CMSIS/Include/core_cmInstr.h ****  * @version  V3.20
   5:../Drivers/CMSIS/Include/core_cmInstr.h ****  * @date     05. March 2013
   6:../Drivers/CMSIS/Include/core_cmInstr.h ****  *
ARM GAS  /tmp/ccYchH6m.s 			page 38


   7:../Drivers/CMSIS/Include/core_cmInstr.h ****  * @note
   8:../Drivers/CMSIS/Include/core_cmInstr.h ****  *
   9:../Drivers/CMSIS/Include/core_cmInstr.h ****  ******************************************************************************/
  10:../Drivers/CMSIS/Include/core_cmInstr.h **** /* Copyright (c) 2009 - 2013 ARM LIMITED
  11:../Drivers/CMSIS/Include/core_cmInstr.h **** 
  12:../Drivers/CMSIS/Include/core_cmInstr.h ****    All rights reserved.
  13:../Drivers/CMSIS/Include/core_cmInstr.h ****    Redistribution and use in source and binary forms, with or without
  14:../Drivers/CMSIS/Include/core_cmInstr.h ****    modification, are permitted provided that the following conditions are met:
  15:../Drivers/CMSIS/Include/core_cmInstr.h ****    - Redistributions of source code must retain the above copyright
  16:../Drivers/CMSIS/Include/core_cmInstr.h ****      notice, this list of conditions and the following disclaimer.
  17:../Drivers/CMSIS/Include/core_cmInstr.h ****    - Redistributions in binary form must reproduce the above copyright
  18:../Drivers/CMSIS/Include/core_cmInstr.h ****      notice, this list of conditions and the following disclaimer in the
  19:../Drivers/CMSIS/Include/core_cmInstr.h ****      documentation and/or other materials provided with the distribution.
  20:../Drivers/CMSIS/Include/core_cmInstr.h ****    - Neither the name of ARM nor the names of its contributors may be used
  21:../Drivers/CMSIS/Include/core_cmInstr.h ****      to endorse or promote products derived from this software without
  22:../Drivers/CMSIS/Include/core_cmInstr.h ****      specific prior written permission.
  23:../Drivers/CMSIS/Include/core_cmInstr.h ****    *
  24:../Drivers/CMSIS/Include/core_cmInstr.h ****    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  25:../Drivers/CMSIS/Include/core_cmInstr.h ****    AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  26:../Drivers/CMSIS/Include/core_cmInstr.h ****    IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  27:../Drivers/CMSIS/Include/core_cmInstr.h ****    ARE DISCLAIMED. IN NO EVENT SHALL COPYRIGHT HOLDERS AND CONTRIBUTORS BE
  28:../Drivers/CMSIS/Include/core_cmInstr.h ****    LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  29:../Drivers/CMSIS/Include/core_cmInstr.h ****    CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  30:../Drivers/CMSIS/Include/core_cmInstr.h ****    SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  31:../Drivers/CMSIS/Include/core_cmInstr.h ****    INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  32:../Drivers/CMSIS/Include/core_cmInstr.h ****    CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  33:../Drivers/CMSIS/Include/core_cmInstr.h ****    ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  34:../Drivers/CMSIS/Include/core_cmInstr.h ****    POSSIBILITY OF SUCH DAMAGE.
  35:../Drivers/CMSIS/Include/core_cmInstr.h ****    ---------------------------------------------------------------------------*/
  36:../Drivers/CMSIS/Include/core_cmInstr.h **** 
  37:../Drivers/CMSIS/Include/core_cmInstr.h **** 
  38:../Drivers/CMSIS/Include/core_cmInstr.h **** #ifndef __CORE_CMINSTR_H
  39:../Drivers/CMSIS/Include/core_cmInstr.h **** #define __CORE_CMINSTR_H
  40:../Drivers/CMSIS/Include/core_cmInstr.h **** 
  41:../Drivers/CMSIS/Include/core_cmInstr.h **** 
  42:../Drivers/CMSIS/Include/core_cmInstr.h **** /* ##########################  Core Instruction Access  ######################### */
  43:../Drivers/CMSIS/Include/core_cmInstr.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
  44:../Drivers/CMSIS/Include/core_cmInstr.h ****   Access to dedicated instructions
  45:../Drivers/CMSIS/Include/core_cmInstr.h ****   @{
  46:../Drivers/CMSIS/Include/core_cmInstr.h **** */
  47:../Drivers/CMSIS/Include/core_cmInstr.h **** 
  48:../Drivers/CMSIS/Include/core_cmInstr.h **** #if   defined ( __CC_ARM ) /*------------------RealView Compiler -----------------*/
  49:../Drivers/CMSIS/Include/core_cmInstr.h **** /* ARM armcc specific functions */
  50:../Drivers/CMSIS/Include/core_cmInstr.h **** 
  51:../Drivers/CMSIS/Include/core_cmInstr.h **** #if (__ARMCC_VERSION < 400677)
  52:../Drivers/CMSIS/Include/core_cmInstr.h ****   #error "Please use ARM Compiler Toolchain V4.0.677 or later!"
  53:../Drivers/CMSIS/Include/core_cmInstr.h **** #endif
  54:../Drivers/CMSIS/Include/core_cmInstr.h **** 
  55:../Drivers/CMSIS/Include/core_cmInstr.h **** 
  56:../Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  No Operation
  57:../Drivers/CMSIS/Include/core_cmInstr.h **** 
  58:../Drivers/CMSIS/Include/core_cmInstr.h ****     No Operation does nothing. This instruction can be used for code alignment purposes.
  59:../Drivers/CMSIS/Include/core_cmInstr.h ****  */
  60:../Drivers/CMSIS/Include/core_cmInstr.h **** #define __NOP                             __nop
  61:../Drivers/CMSIS/Include/core_cmInstr.h **** 
  62:../Drivers/CMSIS/Include/core_cmInstr.h **** 
  63:../Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  Wait For Interrupt
ARM GAS  /tmp/ccYchH6m.s 			page 39


  64:../Drivers/CMSIS/Include/core_cmInstr.h **** 
  65:../Drivers/CMSIS/Include/core_cmInstr.h ****     Wait For Interrupt is a hint instruction that suspends execution
  66:../Drivers/CMSIS/Include/core_cmInstr.h ****     until one of a number of events occurs.
  67:../Drivers/CMSIS/Include/core_cmInstr.h ****  */
  68:../Drivers/CMSIS/Include/core_cmInstr.h **** #define __WFI                             __wfi
  69:../Drivers/CMSIS/Include/core_cmInstr.h **** 
  70:../Drivers/CMSIS/Include/core_cmInstr.h **** 
  71:../Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  Wait For Event
  72:../Drivers/CMSIS/Include/core_cmInstr.h **** 
  73:../Drivers/CMSIS/Include/core_cmInstr.h ****     Wait For Event is a hint instruction that permits the processor to enter
  74:../Drivers/CMSIS/Include/core_cmInstr.h ****     a low-power state until one of a number of events occurs.
  75:../Drivers/CMSIS/Include/core_cmInstr.h ****  */
  76:../Drivers/CMSIS/Include/core_cmInstr.h **** #define __WFE                             __wfe
  77:../Drivers/CMSIS/Include/core_cmInstr.h **** 
  78:../Drivers/CMSIS/Include/core_cmInstr.h **** 
  79:../Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  Send Event
  80:../Drivers/CMSIS/Include/core_cmInstr.h **** 
  81:../Drivers/CMSIS/Include/core_cmInstr.h ****     Send Event is a hint instruction. It causes an event to be signaled to the CPU.
  82:../Drivers/CMSIS/Include/core_cmInstr.h ****  */
  83:../Drivers/CMSIS/Include/core_cmInstr.h **** #define __SEV                             __sev
  84:../Drivers/CMSIS/Include/core_cmInstr.h **** 
  85:../Drivers/CMSIS/Include/core_cmInstr.h **** 
  86:../Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  Instruction Synchronization Barrier
  87:../Drivers/CMSIS/Include/core_cmInstr.h **** 
  88:../Drivers/CMSIS/Include/core_cmInstr.h ****     Instruction Synchronization Barrier flushes the pipeline in the processor,
  89:../Drivers/CMSIS/Include/core_cmInstr.h ****     so that all instructions following the ISB are fetched from cache or
  90:../Drivers/CMSIS/Include/core_cmInstr.h ****     memory, after the instruction has been completed.
  91:../Drivers/CMSIS/Include/core_cmInstr.h ****  */
  92:../Drivers/CMSIS/Include/core_cmInstr.h **** #define __ISB()                           __isb(0xF)
  93:../Drivers/CMSIS/Include/core_cmInstr.h **** 
  94:../Drivers/CMSIS/Include/core_cmInstr.h **** 
  95:../Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  Data Synchronization Barrier
  96:../Drivers/CMSIS/Include/core_cmInstr.h **** 
  97:../Drivers/CMSIS/Include/core_cmInstr.h ****     This function acts as a special kind of Data Memory Barrier.
  98:../Drivers/CMSIS/Include/core_cmInstr.h ****     It completes when all explicit memory accesses before this instruction complete.
  99:../Drivers/CMSIS/Include/core_cmInstr.h ****  */
 100:../Drivers/CMSIS/Include/core_cmInstr.h **** #define __DSB()                           __dsb(0xF)
 101:../Drivers/CMSIS/Include/core_cmInstr.h **** 
 102:../Drivers/CMSIS/Include/core_cmInstr.h **** 
 103:../Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  Data Memory Barrier
 104:../Drivers/CMSIS/Include/core_cmInstr.h **** 
 105:../Drivers/CMSIS/Include/core_cmInstr.h ****     This function ensures the apparent order of the explicit memory operations before
 106:../Drivers/CMSIS/Include/core_cmInstr.h ****     and after the instruction, without ensuring their completion.
 107:../Drivers/CMSIS/Include/core_cmInstr.h ****  */
 108:../Drivers/CMSIS/Include/core_cmInstr.h **** #define __DMB()                           __dmb(0xF)
 109:../Drivers/CMSIS/Include/core_cmInstr.h **** 
 110:../Drivers/CMSIS/Include/core_cmInstr.h **** 
 111:../Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  Reverse byte order (32 bit)
 112:../Drivers/CMSIS/Include/core_cmInstr.h **** 
 113:../Drivers/CMSIS/Include/core_cmInstr.h ****     This function reverses the byte order in integer value.
 114:../Drivers/CMSIS/Include/core_cmInstr.h **** 
 115:../Drivers/CMSIS/Include/core_cmInstr.h ****     \param [in]    value  Value to reverse
 116:../Drivers/CMSIS/Include/core_cmInstr.h ****     \return               Reversed value
 117:../Drivers/CMSIS/Include/core_cmInstr.h ****  */
 118:../Drivers/CMSIS/Include/core_cmInstr.h **** #define __REV                             __rev
 119:../Drivers/CMSIS/Include/core_cmInstr.h **** 
 120:../Drivers/CMSIS/Include/core_cmInstr.h **** 
ARM GAS  /tmp/ccYchH6m.s 			page 40


 121:../Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  Reverse byte order (16 bit)
 122:../Drivers/CMSIS/Include/core_cmInstr.h **** 
 123:../Drivers/CMSIS/Include/core_cmInstr.h ****     This function reverses the byte order in two unsigned short values.
 124:../Drivers/CMSIS/Include/core_cmInstr.h **** 
 125:../Drivers/CMSIS/Include/core_cmInstr.h ****     \param [in]    value  Value to reverse
 126:../Drivers/CMSIS/Include/core_cmInstr.h ****     \return               Reversed value
 127:../Drivers/CMSIS/Include/core_cmInstr.h ****  */
 128:../Drivers/CMSIS/Include/core_cmInstr.h **** #ifndef __NO_EMBEDDED_ASM
 129:../Drivers/CMSIS/Include/core_cmInstr.h **** __attribute__((section(".rev16_text"))) __STATIC_INLINE __ASM uint32_t __REV16(uint32_t value)
 130:../Drivers/CMSIS/Include/core_cmInstr.h **** {
 131:../Drivers/CMSIS/Include/core_cmInstr.h ****   rev16 r0, r0
 132:../Drivers/CMSIS/Include/core_cmInstr.h ****   bx lr
 133:../Drivers/CMSIS/Include/core_cmInstr.h **** }
 134:../Drivers/CMSIS/Include/core_cmInstr.h **** #endif
 135:../Drivers/CMSIS/Include/core_cmInstr.h **** 
 136:../Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  Reverse byte order in signed short value
 137:../Drivers/CMSIS/Include/core_cmInstr.h **** 
 138:../Drivers/CMSIS/Include/core_cmInstr.h ****     This function reverses the byte order in a signed short value with sign extension to integer.
 139:../Drivers/CMSIS/Include/core_cmInstr.h **** 
 140:../Drivers/CMSIS/Include/core_cmInstr.h ****     \param [in]    value  Value to reverse
 141:../Drivers/CMSIS/Include/core_cmInstr.h ****     \return               Reversed value
 142:../Drivers/CMSIS/Include/core_cmInstr.h ****  */
 143:../Drivers/CMSIS/Include/core_cmInstr.h **** #ifndef __NO_EMBEDDED_ASM
 144:../Drivers/CMSIS/Include/core_cmInstr.h **** __attribute__((section(".revsh_text"))) __STATIC_INLINE __ASM int32_t __REVSH(int32_t value)
 145:../Drivers/CMSIS/Include/core_cmInstr.h **** {
 146:../Drivers/CMSIS/Include/core_cmInstr.h ****   revsh r0, r0
 147:../Drivers/CMSIS/Include/core_cmInstr.h ****   bx lr
 148:../Drivers/CMSIS/Include/core_cmInstr.h **** }
 149:../Drivers/CMSIS/Include/core_cmInstr.h **** #endif
 150:../Drivers/CMSIS/Include/core_cmInstr.h **** 
 151:../Drivers/CMSIS/Include/core_cmInstr.h **** 
 152:../Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  Rotate Right in unsigned value (32 bit)
 153:../Drivers/CMSIS/Include/core_cmInstr.h **** 
 154:../Drivers/CMSIS/Include/core_cmInstr.h ****     This function Rotate Right (immediate) provides the value of the contents of a register rotated
 155:../Drivers/CMSIS/Include/core_cmInstr.h **** 
 156:../Drivers/CMSIS/Include/core_cmInstr.h ****     \param [in]    value  Value to rotate
 157:../Drivers/CMSIS/Include/core_cmInstr.h ****     \param [in]    value  Number of Bits to rotate
 158:../Drivers/CMSIS/Include/core_cmInstr.h ****     \return               Rotated value
 159:../Drivers/CMSIS/Include/core_cmInstr.h ****  */
 160:../Drivers/CMSIS/Include/core_cmInstr.h **** #define __ROR                             __ror
 161:../Drivers/CMSIS/Include/core_cmInstr.h **** 
 162:../Drivers/CMSIS/Include/core_cmInstr.h **** 
 163:../Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  Breakpoint
 164:../Drivers/CMSIS/Include/core_cmInstr.h **** 
 165:../Drivers/CMSIS/Include/core_cmInstr.h ****     This function causes the processor to enter Debug state.
 166:../Drivers/CMSIS/Include/core_cmInstr.h ****     Debug tools can use this to investigate system state when the instruction at a particular addre
 167:../Drivers/CMSIS/Include/core_cmInstr.h **** 
 168:../Drivers/CMSIS/Include/core_cmInstr.h ****     \param [in]    value  is ignored by the processor.
 169:../Drivers/CMSIS/Include/core_cmInstr.h ****                    If required, a debugger can use it to store additional information about the bre
 170:../Drivers/CMSIS/Include/core_cmInstr.h ****  */
 171:../Drivers/CMSIS/Include/core_cmInstr.h **** #define __BKPT(value)                       __breakpoint(value)
 172:../Drivers/CMSIS/Include/core_cmInstr.h **** 
 173:../Drivers/CMSIS/Include/core_cmInstr.h **** 
 174:../Drivers/CMSIS/Include/core_cmInstr.h **** #if       (__CORTEX_M >= 0x03)
 175:../Drivers/CMSIS/Include/core_cmInstr.h **** 
 176:../Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  Reverse bit order of value
 177:../Drivers/CMSIS/Include/core_cmInstr.h **** 
ARM GAS  /tmp/ccYchH6m.s 			page 41


 178:../Drivers/CMSIS/Include/core_cmInstr.h ****     This function reverses the bit order of the given value.
 179:../Drivers/CMSIS/Include/core_cmInstr.h **** 
 180:../Drivers/CMSIS/Include/core_cmInstr.h ****     \param [in]    value  Value to reverse
 181:../Drivers/CMSIS/Include/core_cmInstr.h ****     \return               Reversed value
 182:../Drivers/CMSIS/Include/core_cmInstr.h ****  */
 183:../Drivers/CMSIS/Include/core_cmInstr.h **** #define __RBIT                            __rbit
 184:../Drivers/CMSIS/Include/core_cmInstr.h **** 
 185:../Drivers/CMSIS/Include/core_cmInstr.h **** 
 186:../Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  LDR Exclusive (8 bit)
 187:../Drivers/CMSIS/Include/core_cmInstr.h **** 
 188:../Drivers/CMSIS/Include/core_cmInstr.h ****     This function performs a exclusive LDR command for 8 bit value.
 189:../Drivers/CMSIS/Include/core_cmInstr.h **** 
 190:../Drivers/CMSIS/Include/core_cmInstr.h ****     \param [in]    ptr  Pointer to data
 191:../Drivers/CMSIS/Include/core_cmInstr.h ****     \return             value of type uint8_t at (*ptr)
 192:../Drivers/CMSIS/Include/core_cmInstr.h ****  */
 193:../Drivers/CMSIS/Include/core_cmInstr.h **** #define __LDREXB(ptr)                     ((uint8_t ) __ldrex(ptr))
 194:../Drivers/CMSIS/Include/core_cmInstr.h **** 
 195:../Drivers/CMSIS/Include/core_cmInstr.h **** 
 196:../Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  LDR Exclusive (16 bit)
 197:../Drivers/CMSIS/Include/core_cmInstr.h **** 
 198:../Drivers/CMSIS/Include/core_cmInstr.h ****     This function performs a exclusive LDR command for 16 bit values.
 199:../Drivers/CMSIS/Include/core_cmInstr.h **** 
 200:../Drivers/CMSIS/Include/core_cmInstr.h ****     \param [in]    ptr  Pointer to data
 201:../Drivers/CMSIS/Include/core_cmInstr.h ****     \return        value of type uint16_t at (*ptr)
 202:../Drivers/CMSIS/Include/core_cmInstr.h ****  */
 203:../Drivers/CMSIS/Include/core_cmInstr.h **** #define __LDREXH(ptr)                     ((uint16_t) __ldrex(ptr))
 204:../Drivers/CMSIS/Include/core_cmInstr.h **** 
 205:../Drivers/CMSIS/Include/core_cmInstr.h **** 
 206:../Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  LDR Exclusive (32 bit)
 207:../Drivers/CMSIS/Include/core_cmInstr.h **** 
 208:../Drivers/CMSIS/Include/core_cmInstr.h ****     This function performs a exclusive LDR command for 32 bit values.
 209:../Drivers/CMSIS/Include/core_cmInstr.h **** 
 210:../Drivers/CMSIS/Include/core_cmInstr.h ****     \param [in]    ptr  Pointer to data
 211:../Drivers/CMSIS/Include/core_cmInstr.h ****     \return        value of type uint32_t at (*ptr)
 212:../Drivers/CMSIS/Include/core_cmInstr.h ****  */
 213:../Drivers/CMSIS/Include/core_cmInstr.h **** #define __LDREXW(ptr)                     ((uint32_t ) __ldrex(ptr))
 214:../Drivers/CMSIS/Include/core_cmInstr.h **** 
 215:../Drivers/CMSIS/Include/core_cmInstr.h **** 
 216:../Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  STR Exclusive (8 bit)
 217:../Drivers/CMSIS/Include/core_cmInstr.h **** 
 218:../Drivers/CMSIS/Include/core_cmInstr.h ****     This function performs a exclusive STR command for 8 bit values.
 219:../Drivers/CMSIS/Include/core_cmInstr.h **** 
 220:../Drivers/CMSIS/Include/core_cmInstr.h ****     \param [in]  value  Value to store
 221:../Drivers/CMSIS/Include/core_cmInstr.h ****     \param [in]    ptr  Pointer to location
 222:../Drivers/CMSIS/Include/core_cmInstr.h ****     \return          0  Function succeeded
 223:../Drivers/CMSIS/Include/core_cmInstr.h ****     \return          1  Function failed
 224:../Drivers/CMSIS/Include/core_cmInstr.h ****  */
 225:../Drivers/CMSIS/Include/core_cmInstr.h **** #define __STREXB(value, ptr)              __strex(value, ptr)
 226:../Drivers/CMSIS/Include/core_cmInstr.h **** 
 227:../Drivers/CMSIS/Include/core_cmInstr.h **** 
 228:../Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  STR Exclusive (16 bit)
 229:../Drivers/CMSIS/Include/core_cmInstr.h **** 
 230:../Drivers/CMSIS/Include/core_cmInstr.h ****     This function performs a exclusive STR command for 16 bit values.
 231:../Drivers/CMSIS/Include/core_cmInstr.h **** 
 232:../Drivers/CMSIS/Include/core_cmInstr.h ****     \param [in]  value  Value to store
 233:../Drivers/CMSIS/Include/core_cmInstr.h ****     \param [in]    ptr  Pointer to location
 234:../Drivers/CMSIS/Include/core_cmInstr.h ****     \return          0  Function succeeded
ARM GAS  /tmp/ccYchH6m.s 			page 42


 235:../Drivers/CMSIS/Include/core_cmInstr.h ****     \return          1  Function failed
 236:../Drivers/CMSIS/Include/core_cmInstr.h ****  */
 237:../Drivers/CMSIS/Include/core_cmInstr.h **** #define __STREXH(value, ptr)              __strex(value, ptr)
 238:../Drivers/CMSIS/Include/core_cmInstr.h **** 
 239:../Drivers/CMSIS/Include/core_cmInstr.h **** 
 240:../Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  STR Exclusive (32 bit)
 241:../Drivers/CMSIS/Include/core_cmInstr.h **** 
 242:../Drivers/CMSIS/Include/core_cmInstr.h ****     This function performs a exclusive STR command for 32 bit values.
 243:../Drivers/CMSIS/Include/core_cmInstr.h **** 
 244:../Drivers/CMSIS/Include/core_cmInstr.h ****     \param [in]  value  Value to store
 245:../Drivers/CMSIS/Include/core_cmInstr.h ****     \param [in]    ptr  Pointer to location
 246:../Drivers/CMSIS/Include/core_cmInstr.h ****     \return          0  Function succeeded
 247:../Drivers/CMSIS/Include/core_cmInstr.h ****     \return          1  Function failed
 248:../Drivers/CMSIS/Include/core_cmInstr.h ****  */
 249:../Drivers/CMSIS/Include/core_cmInstr.h **** #define __STREXW(value, ptr)              __strex(value, ptr)
 250:../Drivers/CMSIS/Include/core_cmInstr.h **** 
 251:../Drivers/CMSIS/Include/core_cmInstr.h **** 
 252:../Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  Remove the exclusive lock
 253:../Drivers/CMSIS/Include/core_cmInstr.h **** 
 254:../Drivers/CMSIS/Include/core_cmInstr.h ****     This function removes the exclusive lock which is created by LDREX.
 255:../Drivers/CMSIS/Include/core_cmInstr.h **** 
 256:../Drivers/CMSIS/Include/core_cmInstr.h ****  */
 257:../Drivers/CMSIS/Include/core_cmInstr.h **** #define __CLREX                           __clrex
 258:../Drivers/CMSIS/Include/core_cmInstr.h **** 
 259:../Drivers/CMSIS/Include/core_cmInstr.h **** 
 260:../Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  Signed Saturate
 261:../Drivers/CMSIS/Include/core_cmInstr.h **** 
 262:../Drivers/CMSIS/Include/core_cmInstr.h ****     This function saturates a signed value.
 263:../Drivers/CMSIS/Include/core_cmInstr.h **** 
 264:../Drivers/CMSIS/Include/core_cmInstr.h ****     \param [in]  value  Value to be saturated
 265:../Drivers/CMSIS/Include/core_cmInstr.h ****     \param [in]    sat  Bit position to saturate to (1..32)
 266:../Drivers/CMSIS/Include/core_cmInstr.h ****     \return             Saturated value
 267:../Drivers/CMSIS/Include/core_cmInstr.h ****  */
 268:../Drivers/CMSIS/Include/core_cmInstr.h **** #define __SSAT                            __ssat
 269:../Drivers/CMSIS/Include/core_cmInstr.h **** 
 270:../Drivers/CMSIS/Include/core_cmInstr.h **** 
 271:../Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  Unsigned Saturate
 272:../Drivers/CMSIS/Include/core_cmInstr.h **** 
 273:../Drivers/CMSIS/Include/core_cmInstr.h ****     This function saturates an unsigned value.
 274:../Drivers/CMSIS/Include/core_cmInstr.h **** 
 275:../Drivers/CMSIS/Include/core_cmInstr.h ****     \param [in]  value  Value to be saturated
 276:../Drivers/CMSIS/Include/core_cmInstr.h ****     \param [in]    sat  Bit position to saturate to (0..31)
 277:../Drivers/CMSIS/Include/core_cmInstr.h ****     \return             Saturated value
 278:../Drivers/CMSIS/Include/core_cmInstr.h ****  */
 279:../Drivers/CMSIS/Include/core_cmInstr.h **** #define __USAT                            __usat
 280:../Drivers/CMSIS/Include/core_cmInstr.h **** 
 281:../Drivers/CMSIS/Include/core_cmInstr.h **** 
 282:../Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  Count leading zeros
 283:../Drivers/CMSIS/Include/core_cmInstr.h **** 
 284:../Drivers/CMSIS/Include/core_cmInstr.h ****     This function counts the number of leading zeros of a data value.
 285:../Drivers/CMSIS/Include/core_cmInstr.h **** 
 286:../Drivers/CMSIS/Include/core_cmInstr.h ****     \param [in]  value  Value to count the leading zeros
 287:../Drivers/CMSIS/Include/core_cmInstr.h ****     \return             number of leading zeros in value
 288:../Drivers/CMSIS/Include/core_cmInstr.h ****  */
 289:../Drivers/CMSIS/Include/core_cmInstr.h **** #define __CLZ                             __clz
 290:../Drivers/CMSIS/Include/core_cmInstr.h **** 
 291:../Drivers/CMSIS/Include/core_cmInstr.h **** #endif /* (__CORTEX_M >= 0x03) */
ARM GAS  /tmp/ccYchH6m.s 			page 43


 292:../Drivers/CMSIS/Include/core_cmInstr.h **** 
 293:../Drivers/CMSIS/Include/core_cmInstr.h **** 
 294:../Drivers/CMSIS/Include/core_cmInstr.h **** 
 295:../Drivers/CMSIS/Include/core_cmInstr.h **** #elif defined ( __ICCARM__ ) /*------------------ ICC Compiler -------------------*/
 296:../Drivers/CMSIS/Include/core_cmInstr.h **** /* IAR iccarm specific functions */
 297:../Drivers/CMSIS/Include/core_cmInstr.h **** 
 298:../Drivers/CMSIS/Include/core_cmInstr.h **** #include <cmsis_iar.h>
 299:../Drivers/CMSIS/Include/core_cmInstr.h **** 
 300:../Drivers/CMSIS/Include/core_cmInstr.h **** 
 301:../Drivers/CMSIS/Include/core_cmInstr.h **** #elif defined ( __TMS470__ ) /*---------------- TI CCS Compiler ------------------*/
 302:../Drivers/CMSIS/Include/core_cmInstr.h **** /* TI CCS specific functions */
 303:../Drivers/CMSIS/Include/core_cmInstr.h **** 
 304:../Drivers/CMSIS/Include/core_cmInstr.h **** #include <cmsis_ccs.h>
 305:../Drivers/CMSIS/Include/core_cmInstr.h **** 
 306:../Drivers/CMSIS/Include/core_cmInstr.h **** 
 307:../Drivers/CMSIS/Include/core_cmInstr.h **** #elif defined ( __GNUC__ ) /*------------------ GNU Compiler ---------------------*/
 308:../Drivers/CMSIS/Include/core_cmInstr.h **** /* GNU gcc specific functions */
 309:../Drivers/CMSIS/Include/core_cmInstr.h **** 
 310:../Drivers/CMSIS/Include/core_cmInstr.h **** /* Define macros for porting to both thumb1 and thumb2.
 311:../Drivers/CMSIS/Include/core_cmInstr.h ****  * For thumb1, use low register (r0-r7), specified by constrant "l"
 312:../Drivers/CMSIS/Include/core_cmInstr.h ****  * Otherwise, use general registers, specified by constrant "r" */
 313:../Drivers/CMSIS/Include/core_cmInstr.h **** #if defined (__thumb__) && !defined (__thumb2__)
 314:../Drivers/CMSIS/Include/core_cmInstr.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 315:../Drivers/CMSIS/Include/core_cmInstr.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 316:../Drivers/CMSIS/Include/core_cmInstr.h **** #else
 317:../Drivers/CMSIS/Include/core_cmInstr.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 318:../Drivers/CMSIS/Include/core_cmInstr.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 319:../Drivers/CMSIS/Include/core_cmInstr.h **** #endif
 320:../Drivers/CMSIS/Include/core_cmInstr.h **** 
 321:../Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  No Operation
 322:../Drivers/CMSIS/Include/core_cmInstr.h **** 
 323:../Drivers/CMSIS/Include/core_cmInstr.h ****     No Operation does nothing. This instruction can be used for code alignment purposes.
 324:../Drivers/CMSIS/Include/core_cmInstr.h ****  */
 325:../Drivers/CMSIS/Include/core_cmInstr.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __NOP(void)
 326:../Drivers/CMSIS/Include/core_cmInstr.h **** {
 327:../Drivers/CMSIS/Include/core_cmInstr.h ****   __ASM volatile ("nop");
 328:../Drivers/CMSIS/Include/core_cmInstr.h **** }
 329:../Drivers/CMSIS/Include/core_cmInstr.h **** 
 330:../Drivers/CMSIS/Include/core_cmInstr.h **** 
 331:../Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  Wait For Interrupt
 332:../Drivers/CMSIS/Include/core_cmInstr.h **** 
 333:../Drivers/CMSIS/Include/core_cmInstr.h ****     Wait For Interrupt is a hint instruction that suspends execution
 334:../Drivers/CMSIS/Include/core_cmInstr.h ****     until one of a number of events occurs.
 335:../Drivers/CMSIS/Include/core_cmInstr.h ****  */
 336:../Drivers/CMSIS/Include/core_cmInstr.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __WFI(void)
 337:../Drivers/CMSIS/Include/core_cmInstr.h **** {
 338:../Drivers/CMSIS/Include/core_cmInstr.h ****   __ASM volatile ("wfi");
 339:../Drivers/CMSIS/Include/core_cmInstr.h **** }
 340:../Drivers/CMSIS/Include/core_cmInstr.h **** 
 341:../Drivers/CMSIS/Include/core_cmInstr.h **** 
 342:../Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  Wait For Event
 343:../Drivers/CMSIS/Include/core_cmInstr.h **** 
 344:../Drivers/CMSIS/Include/core_cmInstr.h ****     Wait For Event is a hint instruction that permits the processor to enter
 345:../Drivers/CMSIS/Include/core_cmInstr.h ****     a low-power state until one of a number of events occurs.
 346:../Drivers/CMSIS/Include/core_cmInstr.h ****  */
 347:../Drivers/CMSIS/Include/core_cmInstr.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __WFE(void)
 348:../Drivers/CMSIS/Include/core_cmInstr.h **** {
ARM GAS  /tmp/ccYchH6m.s 			page 44


 349:../Drivers/CMSIS/Include/core_cmInstr.h ****   __ASM volatile ("wfe");
 350:../Drivers/CMSIS/Include/core_cmInstr.h **** }
 351:../Drivers/CMSIS/Include/core_cmInstr.h **** 
 352:../Drivers/CMSIS/Include/core_cmInstr.h **** 
 353:../Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  Send Event
 354:../Drivers/CMSIS/Include/core_cmInstr.h **** 
 355:../Drivers/CMSIS/Include/core_cmInstr.h ****     Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 356:../Drivers/CMSIS/Include/core_cmInstr.h ****  */
 357:../Drivers/CMSIS/Include/core_cmInstr.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __SEV(void)
 358:../Drivers/CMSIS/Include/core_cmInstr.h **** {
 359:../Drivers/CMSIS/Include/core_cmInstr.h ****   __ASM volatile ("sev");
 360:../Drivers/CMSIS/Include/core_cmInstr.h **** }
 361:../Drivers/CMSIS/Include/core_cmInstr.h **** 
 362:../Drivers/CMSIS/Include/core_cmInstr.h **** 
 363:../Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  Instruction Synchronization Barrier
 364:../Drivers/CMSIS/Include/core_cmInstr.h **** 
 365:../Drivers/CMSIS/Include/core_cmInstr.h ****     Instruction Synchronization Barrier flushes the pipeline in the processor,
 366:../Drivers/CMSIS/Include/core_cmInstr.h ****     so that all instructions following the ISB are fetched from cache or
 367:../Drivers/CMSIS/Include/core_cmInstr.h ****     memory, after the instruction has been completed.
 368:../Drivers/CMSIS/Include/core_cmInstr.h ****  */
 369:../Drivers/CMSIS/Include/core_cmInstr.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __ISB(void)
 370:../Drivers/CMSIS/Include/core_cmInstr.h **** {
 371:../Drivers/CMSIS/Include/core_cmInstr.h ****   __ASM volatile ("isb");
 372:../Drivers/CMSIS/Include/core_cmInstr.h **** }
 373:../Drivers/CMSIS/Include/core_cmInstr.h **** 
 374:../Drivers/CMSIS/Include/core_cmInstr.h **** 
 375:../Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  Data Synchronization Barrier
 376:../Drivers/CMSIS/Include/core_cmInstr.h **** 
 377:../Drivers/CMSIS/Include/core_cmInstr.h ****     This function acts as a special kind of Data Memory Barrier.
 378:../Drivers/CMSIS/Include/core_cmInstr.h ****     It completes when all explicit memory accesses before this instruction complete.
 379:../Drivers/CMSIS/Include/core_cmInstr.h ****  */
 380:../Drivers/CMSIS/Include/core_cmInstr.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __DSB(void)
 381:../Drivers/CMSIS/Include/core_cmInstr.h **** {
 382:../Drivers/CMSIS/Include/core_cmInstr.h ****   __ASM volatile ("dsb");
 272              		.loc 3 382 0
 273              		.syntax unified
 274              	@ 382 "../Drivers/CMSIS/Include/core_cmInstr.h" 1
 275 0000 BFF34F8F 		dsb
 276              	@ 0 "" 2
 277              		.thumb
 278              		.syntax unified
 279              	.LBE59:
 280              	.LBE58:
1604:../Drivers/CMSIS/Include/core_cm4.h ****          );
1605:../Drivers/CMSIS/Include/core_cm4.h **** }
1606:../Drivers/CMSIS/Include/core_cm4.h **** 
1607:../Drivers/CMSIS/Include/core_cm4.h **** 
1608:../Drivers/CMSIS/Include/core_cm4.h **** /** \brief  Decode Priority
1609:../Drivers/CMSIS/Include/core_cm4.h **** 
1610:../Drivers/CMSIS/Include/core_cm4.h ****     The function decodes an interrupt priority value with a given priority group to
1611:../Drivers/CMSIS/Include/core_cm4.h ****     preemptive priority value and subpriority value.
1612:../Drivers/CMSIS/Include/core_cm4.h ****     In case of a conflict between priority grouping and available
1613:../Drivers/CMSIS/Include/core_cm4.h ****     priority bits (__NVIC_PRIO_BITS) the samllest possible priority group is set.
1614:../Drivers/CMSIS/Include/core_cm4.h **** 
1615:../Drivers/CMSIS/Include/core_cm4.h ****     \param [in]         Priority   Priority value, which can be retrieved with the function \ref NV
1616:../Drivers/CMSIS/Include/core_cm4.h ****     \param [in]     PriorityGroup  Used priority group.
1617:../Drivers/CMSIS/Include/core_cm4.h ****     \param [out] pPreemptPriority  Preemptive priority value (starting from 0).
ARM GAS  /tmp/ccYchH6m.s 			page 45


1618:../Drivers/CMSIS/Include/core_cm4.h ****     \param [out]     pSubPriority  Subpriority value (starting from 0).
1619:../Drivers/CMSIS/Include/core_cm4.h ****  */
1620:../Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE void NVIC_DecodePriority (uint32_t Priority, uint32_t PriorityGroup, uint32_t* pPre
1621:../Drivers/CMSIS/Include/core_cm4.h **** {
1622:../Drivers/CMSIS/Include/core_cm4.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & 0x07);          /* only values 0..7 are used        
1623:../Drivers/CMSIS/Include/core_cm4.h ****   uint32_t PreemptPriorityBits;
1624:../Drivers/CMSIS/Include/core_cm4.h ****   uint32_t SubPriorityBits;
1625:../Drivers/CMSIS/Include/core_cm4.h **** 
1626:../Drivers/CMSIS/Include/core_cm4.h ****   PreemptPriorityBits = ((7 - PriorityGroupTmp) > __NVIC_PRIO_BITS) ? __NVIC_PRIO_BITS : 7 - Priori
1627:../Drivers/CMSIS/Include/core_cm4.h ****   SubPriorityBits     = ((PriorityGroupTmp + __NVIC_PRIO_BITS) < 7) ? 0 : PriorityGroupTmp - 7 + __
1628:../Drivers/CMSIS/Include/core_cm4.h **** 
1629:../Drivers/CMSIS/Include/core_cm4.h ****   *pPreemptPriority = (Priority >> SubPriorityBits) & ((1 << (PreemptPriorityBits)) - 1);
1630:../Drivers/CMSIS/Include/core_cm4.h ****   *pSubPriority     = (Priority                   ) & ((1 << (SubPriorityBits    )) - 1);
1631:../Drivers/CMSIS/Include/core_cm4.h **** }
1632:../Drivers/CMSIS/Include/core_cm4.h **** 
1633:../Drivers/CMSIS/Include/core_cm4.h **** 
1634:../Drivers/CMSIS/Include/core_cm4.h **** /** \brief  System Reset
1635:../Drivers/CMSIS/Include/core_cm4.h **** 
1636:../Drivers/CMSIS/Include/core_cm4.h ****     The function initiates a system reset request to reset the MCU.
1637:../Drivers/CMSIS/Include/core_cm4.h ****  */
1638:../Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE void NVIC_SystemReset(void)
1639:../Drivers/CMSIS/Include/core_cm4.h **** {
1640:../Drivers/CMSIS/Include/core_cm4.h ****   __DSB();                                                     /* Ensure all outstanding memory acc
1641:../Drivers/CMSIS/Include/core_cm4.h ****                                                                   buffered write are completed befo
1642:../Drivers/CMSIS/Include/core_cm4.h ****   SCB->AIRCR  = ((0x5FA << SCB_AIRCR_VECTKEY_Pos)      |
1643:../Drivers/CMSIS/Include/core_cm4.h ****                  (SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) |
 281              		.loc 2 1643 0
 282 0004 0449     		ldr	r1, .L20
 283 0006 CA68     		ldr	r2, [r1, #12]
 284 0008 02F4E062 		and	r2, r2, #1792
 285 000c 034B     		ldr	r3, .L20+4
 286 000e 1343     		orrs	r3, r3, r2
1642:../Drivers/CMSIS/Include/core_cm4.h ****                  (SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) |
 287              		.loc 2 1642 0
 288 0010 CB60     		str	r3, [r1, #12]
 289              	.LBB60:
 290              	.LBB61:
 291              		.loc 3 382 0
 292              		.syntax unified
 293              	@ 382 "../Drivers/CMSIS/Include/core_cmInstr.h" 1
 294 0012 BFF34F8F 		dsb
 295              	@ 0 "" 2
 296              		.thumb
 297              		.syntax unified
 298              	.L19:
 299 0016 FEE7     		b	.L19
 300              	.L21:
 301              		.align	2
 302              	.L20:
 303 0018 00ED00E0 		.word	-536810240
 304 001c 0400FA05 		.word	100270084
 305              	.LBE61:
 306              	.LBE60:
 307              	.LBE57:
 308              	.LBE56:
 309              		.cfi_endproc
 310              	.LFE116:
ARM GAS  /tmp/ccYchH6m.s 			page 46


 312              		.section	.text.HAL_SYSTICK_Config,"ax",%progbits
 313              		.align	2
 314              		.global	HAL_SYSTICK_Config
 315              		.thumb
 316              		.thumb_func
 318              	HAL_SYSTICK_Config:
 319              	.LFB117:
 231:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   /* System Reset */
 232:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   NVIC_SystemReset();
 233:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c **** }
 234:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c **** 
 235:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c **** /**
 236:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   * @brief  Initializes the System Timer and its interrupt, and starts the System Tick Timer.
 237:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   *         Counter is in free running mode to generate periodic interrupts.
 238:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   * @param  TicksNumb: Specifies the ticks Number of ticks between two interrupts.
 239:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   * @retval status:  - 0  Function succeeded.
 240:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   *                  - 1  Function failed.
 241:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   */
 242:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c **** uint32_t HAL_SYSTICK_Config(uint32_t TicksNumb)
 243:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c **** {
 320              		.loc 1 243 0
 321              		.cfi_startproc
 322              		@ args = 0, pretend = 0, frame = 0
 323              		@ frame_needed = 0, uses_anonymous_args = 0
 324              		@ link register save eliminated.
 325              	.LVL30:
 326              	.LBB62:
 327              	.LBB63:
1644:../Drivers/CMSIS/Include/core_cm4.h ****                  SCB_AIRCR_SYSRESETREQ_Msk);                   /* Keep priority group unchanged */
1645:../Drivers/CMSIS/Include/core_cm4.h ****   __DSB();                                                     /* Ensure completion of memory acces
1646:../Drivers/CMSIS/Include/core_cm4.h ****   while(1);                                                    /* wait until reset */
1647:../Drivers/CMSIS/Include/core_cm4.h **** }
1648:../Drivers/CMSIS/Include/core_cm4.h **** 
1649:../Drivers/CMSIS/Include/core_cm4.h **** /*@} end of CMSIS_Core_NVICFunctions */
1650:../Drivers/CMSIS/Include/core_cm4.h **** 
1651:../Drivers/CMSIS/Include/core_cm4.h **** 
1652:../Drivers/CMSIS/Include/core_cm4.h **** 
1653:../Drivers/CMSIS/Include/core_cm4.h **** /* ##################################    SysTick function  ########################################
1654:../Drivers/CMSIS/Include/core_cm4.h **** /** \ingroup  CMSIS_Core_FunctionInterface
1655:../Drivers/CMSIS/Include/core_cm4.h ****     \defgroup CMSIS_Core_SysTickFunctions SysTick Functions
1656:../Drivers/CMSIS/Include/core_cm4.h ****     \brief      Functions that configure the System.
1657:../Drivers/CMSIS/Include/core_cm4.h ****   @{
1658:../Drivers/CMSIS/Include/core_cm4.h ****  */
1659:../Drivers/CMSIS/Include/core_cm4.h **** 
1660:../Drivers/CMSIS/Include/core_cm4.h **** #if (__Vendor_SysTickConfig == 0)
1661:../Drivers/CMSIS/Include/core_cm4.h **** 
1662:../Drivers/CMSIS/Include/core_cm4.h **** /** \brief  System Tick Configuration
1663:../Drivers/CMSIS/Include/core_cm4.h **** 
1664:../Drivers/CMSIS/Include/core_cm4.h ****     The function initializes the System Timer and its interrupt, and starts the System Tick Timer.
1665:../Drivers/CMSIS/Include/core_cm4.h ****     Counter is in free running mode to generate periodic interrupts.
1666:../Drivers/CMSIS/Include/core_cm4.h **** 
1667:../Drivers/CMSIS/Include/core_cm4.h ****     \param [in]  ticks  Number of ticks between two interrupts.
1668:../Drivers/CMSIS/Include/core_cm4.h **** 
1669:../Drivers/CMSIS/Include/core_cm4.h ****     \return          0  Function succeeded.
1670:../Drivers/CMSIS/Include/core_cm4.h ****     \return          1  Function failed.
1671:../Drivers/CMSIS/Include/core_cm4.h **** 
1672:../Drivers/CMSIS/Include/core_cm4.h ****     \note     When the variable <b>__Vendor_SysTickConfig</b> is set to 1, then the
ARM GAS  /tmp/ccYchH6m.s 			page 47


1673:../Drivers/CMSIS/Include/core_cm4.h ****     function <b>SysTick_Config</b> is not included. In this case, the file <b><i>device</i>.h</b>
1674:../Drivers/CMSIS/Include/core_cm4.h ****     must contain a vendor-specific implementation of this function.
1675:../Drivers/CMSIS/Include/core_cm4.h **** 
1676:../Drivers/CMSIS/Include/core_cm4.h ****  */
1677:../Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE uint32_t SysTick_Config(uint32_t ticks)
1678:../Drivers/CMSIS/Include/core_cm4.h **** {
1679:../Drivers/CMSIS/Include/core_cm4.h ****   if ((ticks - 1) > SysTick_LOAD_RELOAD_Msk)  return (1);      /* Reload value impossible */
 328              		.loc 2 1679 0
 329 0000 0138     		subs	r0, r0, #1
 330              	.LVL31:
 331 0002 B0F1807F 		cmp	r0, #16777216
 332 0006 0AD2     		bcs	.L24
1680:../Drivers/CMSIS/Include/core_cm4.h **** 
1681:../Drivers/CMSIS/Include/core_cm4.h ****   SysTick->LOAD  = ticks - 1;                                  /* set reload register */
 333              		.loc 2 1681 0
 334 0008 064B     		ldr	r3, .L25
 335 000a 5860     		str	r0, [r3, #4]
 336              	.LVL32:
 337              	.LBB64:
 338              	.LBB65:
1553:../Drivers/CMSIS/Include/core_cm4.h ****   else {
 339              		.loc 2 1553 0
 340 000c F021     		movs	r1, #240
 341 000e 064A     		ldr	r2, .L25+4
 342 0010 82F82310 		strb	r1, [r2, #35]
 343              	.LVL33:
 344              	.LBE65:
 345              	.LBE64:
1682:../Drivers/CMSIS/Include/core_cm4.h ****   NVIC_SetPriority (SysTick_IRQn, (1<<__NVIC_PRIO_BITS) - 1);  /* set Priority for Systick Interrup
1683:../Drivers/CMSIS/Include/core_cm4.h ****   SysTick->VAL   = 0;                                          /* Load the SysTick Counter Value */
 346              		.loc 2 1683 0
 347 0014 0020     		movs	r0, #0
 348              	.LVL34:
 349 0016 9860     		str	r0, [r3, #8]
1684:../Drivers/CMSIS/Include/core_cm4.h ****   SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
 350              		.loc 2 1684 0
 351 0018 0722     		movs	r2, #7
 352 001a 1A60     		str	r2, [r3]
 353 001c 7047     		bx	lr
 354              	.L24:
1679:../Drivers/CMSIS/Include/core_cm4.h **** 
 355              		.loc 2 1679 0
 356 001e 0120     		movs	r0, #1
 357              	.LVL35:
 358              	.LBE63:
 359              	.LBE62:
 244:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****    return SysTick_Config(TicksNumb);
 245:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c **** }
 360              		.loc 1 245 0
 361 0020 7047     		bx	lr
 362              	.L26:
 363 0022 00BF     		.align	2
 364              	.L25:
 365 0024 10E000E0 		.word	-536813552
 366 0028 00ED00E0 		.word	-536810240
 367              		.cfi_endproc
 368              	.LFE117:
ARM GAS  /tmp/ccYchH6m.s 			page 48


 370              		.section	.text.HAL_NVIC_GetPriorityGrouping,"ax",%progbits
 371              		.align	2
 372              		.global	HAL_NVIC_GetPriorityGrouping
 373              		.thumb
 374              		.thumb_func
 376              	HAL_NVIC_GetPriorityGrouping:
 377              	.LFB118:
 246:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c **** /**
 247:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   * @}
 248:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   */
 249:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c **** 
 250:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c **** /** @defgroup CORTEX_Group2 Peripheral Control functions 
 251:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****  *  @brief   Cortex control functions 
 252:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****  *
 253:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c **** @verbatim   
 254:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   ==============================================================================
 255:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****                       ##### Peripheral Control functions #####
 256:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   ==============================================================================  
 257:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****     [..]
 258:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****       This subsection provides a set of functions allowing to control the CORTEX
 259:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****       (NVIC, SYSTICK) functionalities. 
 260:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****  
 261:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****       
 262:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c **** @endverbatim
 263:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   * @{
 264:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   */
 265:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c **** 
 266:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c **** /**
 267:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   * @brief  Gets the priority grouping field from the NVIC Interrupt Controller.
 268:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   * @param  None
 269:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   * @retval Priority grouping field (SCB->AIRCR [10:8] PRIGROUP field)
 270:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   */
 271:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c **** uint32_t HAL_NVIC_GetPriorityGrouping(void)
 272:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c **** {
 378              		.loc 1 272 0
 379              		.cfi_startproc
 380              		@ args = 0, pretend = 0, frame = 0
 381              		@ frame_needed = 0, uses_anonymous_args = 0
 382              		@ link register save eliminated.
 383              	.LBB66:
 384              	.LBB67:
1457:../Drivers/CMSIS/Include/core_cm4.h **** }
 385              		.loc 2 1457 0
 386 0000 024B     		ldr	r3, .L28
 387 0002 D868     		ldr	r0, [r3, #12]
 388              	.LBE67:
 389              	.LBE66:
 273:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   /* Get the PRIGROUP[10:8] field value */
 274:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   return NVIC_GetPriorityGrouping();
 275:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c **** }
 390              		.loc 1 275 0
 391 0004 C0F30220 		ubfx	r0, r0, #8, #3
 392 0008 7047     		bx	lr
 393              	.L29:
 394 000a 00BF     		.align	2
 395              	.L28:
 396 000c 00ED00E0 		.word	-536810240
ARM GAS  /tmp/ccYchH6m.s 			page 49


 397              		.cfi_endproc
 398              	.LFE118:
 400              		.section	.text.HAL_NVIC_GetPriority,"ax",%progbits
 401              		.align	2
 402              		.global	HAL_NVIC_GetPriority
 403              		.thumb
 404              		.thumb_func
 406              	HAL_NVIC_GetPriority:
 407              	.LFB119:
 276:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c **** 
 277:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c **** /**
 278:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   * @brief  Gets the priority of an interrupt.
 279:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   * @param  IRQn: External interrupt number.
 280:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   *         This parameter can be an enumerator of IRQn_Type enumeration
 281:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   *         (For the complete STM32 Devices IRQ Channels list, please refer to stm32f4xx.h file)
 282:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   * @param   PriorityGroup: the priority grouping bits length.
 283:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   *         This parameter can be one of the following values:
 284:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   *           @arg NVIC_PRIORITYGROUP_0: 0 bits for pre-emption priority
 285:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   *                                      4 bits for subpriority
 286:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   *           @arg NVIC_PRIORITYGROUP_1: 1 bits for pre-emption priority
 287:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   *                                      3 bits for subpriority
 288:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   *           @arg NVIC_PRIORITYGROUP_2: 2 bits for pre-emption priority
 289:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   *                                      2 bits for subpriority
 290:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   *           @arg NVIC_PRIORITYGROUP_3: 3 bits for pre-emption priority
 291:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   *                                      1 bits for subpriority
 292:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   *           @arg NVIC_PRIORITYGROUP_4: 4 bits for pre-emption priority
 293:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   *                                      0 bits for subpriority
 294:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   * @param  pPreemptPriority: Pointer on the Preemptive priority value (starting from 0).
 295:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   * @param  pSubPriority: Pointer on the Subpriority value (starting from 0).
 296:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   * @retval None
 297:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   */
 298:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c **** void HAL_NVIC_GetPriority(IRQn_Type IRQn, uint32_t PriorityGroup, uint32_t *pPreemptPriority, uint3
 299:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c **** {
 408              		.loc 1 299 0
 409              		.cfi_startproc
 410              		@ args = 0, pretend = 0, frame = 0
 411              		@ frame_needed = 0, uses_anonymous_args = 0
 412              		@ link register save eliminated.
 413              	.LVL36:
 414 0000 70B4     		push	{r4, r5, r6}
 415              	.LCFI2:
 416              		.cfi_def_cfa_offset 12
 417              		.cfi_offset 4, -12
 418              		.cfi_offset 5, -8
 419              		.cfi_offset 6, -4
 420              	.LVL37:
 421              	.LBB68:
 422              	.LBB69:
1573:../Drivers/CMSIS/Include/core_cm4.h ****     return((uint32_t)(SCB->SHP[((uint32_t)(IRQn) & 0xF)-4] >> (8 - __NVIC_PRIO_BITS)));  } /* get p
 423              		.loc 2 1573 0
 424 0002 0028     		cmp	r0, #0
 425              	.LVL38:
 426 0004 05DA     		bge	.L31
1574:../Drivers/CMSIS/Include/core_cm4.h ****   else {
 427              		.loc 2 1574 0
 428 0006 00F00F00 		and	r0, r0, #15
 429 000a 134C     		ldr	r4, .L36
ARM GAS  /tmp/ccYchH6m.s 			page 50


 430 000c 245C     		ldrb	r4, [r4, r0]	@ zero_extendqisi2
 431 000e 2409     		lsrs	r4, r4, #4
 432 0010 06E0     		b	.L32
 433              	.L31:
1576:../Drivers/CMSIS/Include/core_cm4.h **** }
 434              		.loc 2 1576 0
 435 0012 00F16040 		add	r0, r0, #-536870912
 436 0016 00F56140 		add	r0, r0, #57600
 437 001a 90F80043 		ldrb	r4, [r0, #768]	@ zero_extendqisi2
 438 001e 2409     		lsrs	r4, r4, #4
 439              	.L32:
 440              	.LVL39:
 441              	.LBE69:
 442              	.LBE68:
 443              	.LBB70:
 444              	.LBB71:
1622:../Drivers/CMSIS/Include/core_cm4.h ****   uint32_t PreemptPriorityBits;
 445              		.loc 2 1622 0
 446 0020 01F00701 		and	r1, r1, #7
 447              	.LVL40:
1626:../Drivers/CMSIS/Include/core_cm4.h ****   SubPriorityBits     = ((PriorityGroupTmp + __NVIC_PRIO_BITS) < 7) ? 0 : PriorityGroupTmp - 7 + __
 448              		.loc 2 1626 0
 449 0024 C1F10700 		rsb	r0, r1, #7
 450 0028 0428     		cmp	r0, #4
 451 002a 28BF     		it	cs
 452 002c 0420     		movcs	r0, #4
 453              	.LVL41:
1627:../Drivers/CMSIS/Include/core_cm4.h **** 
 454              		.loc 2 1627 0
 455 002e 0D1D     		adds	r5, r1, #4
 456 0030 062D     		cmp	r5, #6
 457 0032 01D9     		bls	.L34
 458 0034 0339     		subs	r1, r1, #3
 459              	.LVL42:
 460 0036 00E0     		b	.L33
 461              	.LVL43:
 462              	.L34:
 463 0038 0021     		movs	r1, #0
 464              	.LVL44:
 465              	.L33:
1629:../Drivers/CMSIS/Include/core_cm4.h ****   *pSubPriority     = (Priority                   ) & ((1 << (SubPriorityBits    )) - 1);
 466              		.loc 2 1629 0
 467 003a 24FA01F6 		lsr	r6, r4, r1
 468 003e 0125     		movs	r5, #1
 469              	.LVL45:
 470 0040 05FA00F0 		lsl	r0, r5, r0
 471              	.LVL46:
 472 0044 0138     		subs	r0, r0, #1
 473 0046 3040     		ands	r0, r0, r6
 474 0048 1060     		str	r0, [r2]
1630:../Drivers/CMSIS/Include/core_cm4.h **** }
 475              		.loc 2 1630 0
 476 004a 05FA01F1 		lsl	r1, r5, r1
 477              	.LVL47:
 478 004e 0139     		subs	r1, r1, #1
 479 0050 2140     		ands	r1, r1, r4
 480 0052 1960     		str	r1, [r3]
ARM GAS  /tmp/ccYchH6m.s 			page 51


 481              	.LVL48:
 482              	.LBE71:
 483              	.LBE70:
 300:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   /* Check the parameters */
 301:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));
 302:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****  /* Get priority for Cortex-M system or device specific interrupts */
 303:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   NVIC_DecodePriority(NVIC_GetPriority(IRQn), PriorityGroup, pPreemptPriority, pSubPriority);
 304:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c **** }
 484              		.loc 1 304 0
 485 0054 70BC     		pop	{r4, r5, r6}
 486              	.LCFI3:
 487              		.cfi_restore 6
 488              		.cfi_restore 5
 489              		.cfi_restore 4
 490              		.cfi_def_cfa_offset 0
 491 0056 7047     		bx	lr
 492              	.L37:
 493              		.align	2
 494              	.L36:
 495 0058 14ED00E0 		.word	-536810220
 496              		.cfi_endproc
 497              	.LFE119:
 499              		.section	.text.HAL_NVIC_SetPendingIRQ,"ax",%progbits
 500              		.align	2
 501              		.global	HAL_NVIC_SetPendingIRQ
 502              		.thumb
 503              		.thumb_func
 505              	HAL_NVIC_SetPendingIRQ:
 506              	.LFB120:
 305:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c **** 
 306:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c **** /**
 307:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   * @brief  Sets Pending bit of an external interrupt.
 308:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   * @param  IRQn External interrupt number
 309:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   *         This parameter can be an enumerator of @ref IRQn_Type enumeration
 310:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   *         (For the complete STM32 Devices IRQ Channels list, please refer to stm32f4xx.h file)  
 311:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   * @retval None
 312:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   */
 313:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c **** void HAL_NVIC_SetPendingIRQ(IRQn_Type IRQn)
 314:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c **** { 
 507              		.loc 1 314 0
 508              		.cfi_startproc
 509              		@ args = 0, pretend = 0, frame = 0
 510              		@ frame_needed = 0, uses_anonymous_args = 0
 511              		@ link register save eliminated.
 512              	.LVL49:
 513              	.LBB72:
 514              	.LBB73:
1510:../Drivers/CMSIS/Include/core_cm4.h **** }
 515              		.loc 2 1510 0
 516 0000 4309     		lsrs	r3, r0, #5
 517 0002 00F01F00 		and	r0, r0, #31
 518              	.LVL50:
 519 0006 0122     		movs	r2, #1
 520 0008 02FA00F0 		lsl	r0, r2, r0
 521 000c 4033     		adds	r3, r3, #64
 522 000e 024A     		ldr	r2, .L39
 523 0010 42F82300 		str	r0, [r2, r3, lsl #2]
ARM GAS  /tmp/ccYchH6m.s 			page 52


 524              	.LVL51:
 525 0014 7047     		bx	lr
 526              	.L40:
 527 0016 00BF     		.align	2
 528              	.L39:
 529 0018 00E100E0 		.word	-536813312
 530              	.LBE73:
 531              	.LBE72:
 532              		.cfi_endproc
 533              	.LFE120:
 535              		.section	.text.HAL_NVIC_GetPendingIRQ,"ax",%progbits
 536              		.align	2
 537              		.global	HAL_NVIC_GetPendingIRQ
 538              		.thumb
 539              		.thumb_func
 541              	HAL_NVIC_GetPendingIRQ:
 542              	.LFB121:
 315:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   /* Set interrupt pending */
 316:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   NVIC_SetPendingIRQ(IRQn);
 317:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c **** }
 318:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c **** 
 319:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c **** /**
 320:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   * @brief  Gets Pending Interrupt (reads the pending register in the NVIC 
 321:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   *         and returns the pending bit for the specified interrupt).
 322:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   * @param  IRQn External interrupt number.
 323:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   *          This parameter can be an enumerator of IRQn_Type enumeration
 324:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   *          (For the complete STM32 Devices IRQ Channels list, please refer to stm32f4xx.h file)  
 325:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   * @retval status: - 0  Interrupt status is not pending.
 326:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   *                 - 1  Interrupt status is pending.
 327:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   */
 328:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c **** uint32_t HAL_NVIC_GetPendingIRQ(IRQn_Type IRQn)
 329:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c **** { 
 543              		.loc 1 329 0
 544              		.cfi_startproc
 545              		@ args = 0, pretend = 0, frame = 0
 546              		@ frame_needed = 0, uses_anonymous_args = 0
 547              		@ link register save eliminated.
 548              	.LVL52:
 549              	.LBB74:
 550              	.LBB75:
1498:../Drivers/CMSIS/Include/core_cm4.h **** }
 551              		.loc 2 1498 0
 552 0000 4309     		lsrs	r3, r0, #5
 553 0002 4033     		adds	r3, r3, #64
 554 0004 054A     		ldr	r2, .L43
 555 0006 52F82320 		ldr	r2, [r2, r3, lsl #2]
 556 000a 00F01F00 		and	r0, r0, #31
 557              	.LVL53:
 558 000e 0123     		movs	r3, #1
 559 0010 03FA00F0 		lsl	r0, r3, r0
 560 0014 1040     		ands	r0, r0, r2
 561 0016 00D0     		beq	.L42
 562 0018 1846     		mov	r0, r3
 563              	.L42:
 564              	.LVL54:
 565              	.LBE75:
 566              	.LBE74:
ARM GAS  /tmp/ccYchH6m.s 			page 53


 330:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   /* Return 1 if pending else 0 */
 331:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   return NVIC_GetPendingIRQ(IRQn);
 332:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c **** }
 567              		.loc 1 332 0
 568 001a 7047     		bx	lr
 569              	.L44:
 570              		.align	2
 571              	.L43:
 572 001c 00E100E0 		.word	-536813312
 573              		.cfi_endproc
 574              	.LFE121:
 576              		.section	.text.HAL_NVIC_ClearPendingIRQ,"ax",%progbits
 577              		.align	2
 578              		.global	HAL_NVIC_ClearPendingIRQ
 579              		.thumb
 580              		.thumb_func
 582              	HAL_NVIC_ClearPendingIRQ:
 583              	.LFB122:
 333:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c **** 
 334:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c **** /**
 335:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   * @brief  Clears the pending bit of an external interrupt.
 336:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   * @param  IRQn External interrupt number.
 337:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   *         This parameter can be an enumerator of IRQn_Type enumeration
 338:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   *         (For the complete STM32 Devices IRQ Channels list, please refer to stm32f4xx.h file)  
 339:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   * @retval None
 340:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   */
 341:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c **** void HAL_NVIC_ClearPendingIRQ(IRQn_Type IRQn)
 342:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c **** { 
 584              		.loc 1 342 0
 585              		.cfi_startproc
 586              		@ args = 0, pretend = 0, frame = 0
 587              		@ frame_needed = 0, uses_anonymous_args = 0
 588              		@ link register save eliminated.
 589              	.LVL55:
 590              	.LBB76:
 591              	.LBB77:
1522:../Drivers/CMSIS/Include/core_cm4.h **** }
 592              		.loc 2 1522 0
 593 0000 4309     		lsrs	r3, r0, #5
 594 0002 00F01F00 		and	r0, r0, #31
 595              	.LVL56:
 596 0006 0122     		movs	r2, #1
 597 0008 02FA00F0 		lsl	r0, r2, r0
 598 000c 6033     		adds	r3, r3, #96
 599 000e 024A     		ldr	r2, .L46
 600 0010 42F82300 		str	r0, [r2, r3, lsl #2]
 601              	.LVL57:
 602 0014 7047     		bx	lr
 603              	.L47:
 604 0016 00BF     		.align	2
 605              	.L46:
 606 0018 00E100E0 		.word	-536813312
 607              	.LBE77:
 608              	.LBE76:
 609              		.cfi_endproc
 610              	.LFE122:
 612              		.section	.text.HAL_NVIC_GetActive,"ax",%progbits
ARM GAS  /tmp/ccYchH6m.s 			page 54


 613              		.align	2
 614              		.global	HAL_NVIC_GetActive
 615              		.thumb
 616              		.thumb_func
 618              	HAL_NVIC_GetActive:
 619              	.LFB123:
 343:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   /* Clear pending interrupt */
 344:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   NVIC_ClearPendingIRQ(IRQn);
 345:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c **** }
 346:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c **** 
 347:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c **** /**
 348:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   * @brief Gets active interrupt ( reads the active register in NVIC and returns the active bit).
 349:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   * @param IRQn External interrupt number
 350:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   *         This parameter can be an enumerator of IRQn_Type enumeration
 351:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   *         (For the complete STM32 Devices IRQ Channels list, please refer to stm32f4xx.h file)  
 352:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   * @retval status: - 0  Interrupt status is not pending.
 353:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   *                 - 1  Interrupt status is pending.
 354:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   */
 355:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c **** uint32_t HAL_NVIC_GetActive(IRQn_Type IRQn)
 356:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c **** { 
 620              		.loc 1 356 0
 621              		.cfi_startproc
 622              		@ args = 0, pretend = 0, frame = 0
 623              		@ frame_needed = 0, uses_anonymous_args = 0
 624              		@ link register save eliminated.
 625              	.LVL58:
 626              	.LBB78:
 627              	.LBB79:
1537:../Drivers/CMSIS/Include/core_cm4.h **** }
 628              		.loc 2 1537 0
 629 0000 4309     		lsrs	r3, r0, #5
 630 0002 8033     		adds	r3, r3, #128
 631 0004 054A     		ldr	r2, .L50
 632 0006 52F82320 		ldr	r2, [r2, r3, lsl #2]
 633 000a 00F01F00 		and	r0, r0, #31
 634              	.LVL59:
 635 000e 0123     		movs	r3, #1
 636 0010 03FA00F0 		lsl	r0, r3, r0
 637 0014 1040     		ands	r0, r0, r2
 638 0016 00D0     		beq	.L49
 639 0018 1846     		mov	r0, r3
 640              	.L49:
 641              	.LVL60:
 642              	.LBE79:
 643              	.LBE78:
 357:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   /* Return 1 if active else 0 */
 358:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   return NVIC_GetActive(IRQn);
 359:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c **** }
 644              		.loc 1 359 0
 645 001a 7047     		bx	lr
 646              	.L51:
 647              		.align	2
 648              	.L50:
 649 001c 00E100E0 		.word	-536813312
 650              		.cfi_endproc
 651              	.LFE123:
 653              		.section	.text.HAL_SYSTICK_CLKSourceConfig,"ax",%progbits
ARM GAS  /tmp/ccYchH6m.s 			page 55


 654              		.align	2
 655              		.global	HAL_SYSTICK_CLKSourceConfig
 656              		.thumb
 657              		.thumb_func
 659              	HAL_SYSTICK_CLKSourceConfig:
 660              	.LFB124:
 360:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c **** 
 361:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c **** /**
 362:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   * @brief  Configures the SysTick clock source.
 363:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   * @param  CLKSource: specifies the SysTick clock source.
 364:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   *          This parameter can be one of the following values:
 365:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   *             @arg SYSTICK_CLKSOURCE_HCLK_DIV8: AHB clock divided by 8 selected as SysTick clock 
 366:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   *             @arg SYSTICK_CLKSOURCE_HCLK: AHB clock selected as SysTick clock source.
 367:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   * @retval None
 368:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   */
 369:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c **** void HAL_SYSTICK_CLKSourceConfig(uint32_t CLKSource)
 370:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c **** {
 661              		.loc 1 370 0
 662              		.cfi_startproc
 663              		@ args = 0, pretend = 0, frame = 0
 664              		@ frame_needed = 0, uses_anonymous_args = 0
 665              		@ link register save eliminated.
 666              	.LVL61:
 371:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   /* Check the parameters */
 372:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   assert_param(IS_SYSTICK_CLK_SOURCE(CLKSource));
 373:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   if (CLKSource == SYSTICK_CLKSOURCE_HCLK)
 667              		.loc 1 373 0
 668 0000 0428     		cmp	r0, #4
 669 0002 05D1     		bne	.L53
 374:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   {
 375:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****     SysTick->CTRL |= SYSTICK_CLKSOURCE_HCLK;
 670              		.loc 1 375 0
 671 0004 054A     		ldr	r2, .L55
 672 0006 1368     		ldr	r3, [r2]
 673 0008 43F00403 		orr	r3, r3, #4
 674 000c 1360     		str	r3, [r2]
 675 000e 7047     		bx	lr
 676              	.L53:
 376:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   }
 377:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   else
 378:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   {
 379:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****     SysTick->CTRL &= ~SYSTICK_CLKSOURCE_HCLK;
 677              		.loc 1 379 0
 678 0010 024A     		ldr	r2, .L55
 679 0012 1368     		ldr	r3, [r2]
 680 0014 23F00403 		bic	r3, r3, #4
 681 0018 1360     		str	r3, [r2]
 682 001a 7047     		bx	lr
 683              	.L56:
 684              		.align	2
 685              	.L55:
 686 001c 10E000E0 		.word	-536813552
 687              		.cfi_endproc
 688              	.LFE124:
 690              		.section	.text.HAL_SYSTICK_Callback,"ax",%progbits
 691              		.align	2
 692              		.weak	HAL_SYSTICK_Callback
ARM GAS  /tmp/ccYchH6m.s 			page 56


 693              		.thumb
 694              		.thumb_func
 696              	HAL_SYSTICK_Callback:
 697              	.LFB126:
 380:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   }
 381:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c **** }
 382:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c **** 
 383:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c **** /**
 384:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   * @brief  This function handles SYSTICK interrupt request.
 385:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   * @param  None
 386:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   * @retval None
 387:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   */
 388:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c **** void HAL_SYSTICK_IRQHandler(void)
 389:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c **** {
 390:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   HAL_SYSTICK_Callback();
 391:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c **** }
 392:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c **** 
 393:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c **** /**
 394:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   * @brief  SYSTICK callback.
 395:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   * @param  None
 396:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   * @retval None
 397:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   */
 398:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c **** __weak void HAL_SYSTICK_Callback(void)
 399:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c **** {
 698              		.loc 1 399 0
 699              		.cfi_startproc
 700              		@ args = 0, pretend = 0, frame = 0
 701              		@ frame_needed = 0, uses_anonymous_args = 0
 702              		@ link register save eliminated.
 703 0000 7047     		bx	lr
 704              		.cfi_endproc
 705              	.LFE126:
 707 0002 00BF     		.section	.text.HAL_SYSTICK_IRQHandler,"ax",%progbits
 708              		.align	2
 709              		.global	HAL_SYSTICK_IRQHandler
 710              		.thumb
 711              		.thumb_func
 713              	HAL_SYSTICK_IRQHandler:
 714              	.LFB125:
 389:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   HAL_SYSTICK_Callback();
 715              		.loc 1 389 0
 716              		.cfi_startproc
 717              		@ args = 0, pretend = 0, frame = 0
 718              		@ frame_needed = 0, uses_anonymous_args = 0
 389:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   HAL_SYSTICK_Callback();
 719              		.loc 1 389 0
 720 0000 08B5     		push	{r3, lr}
 721              	.LCFI4:
 722              		.cfi_def_cfa_offset 8
 723              		.cfi_offset 3, -8
 724              		.cfi_offset 14, -4
 390:../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c **** }
 725              		.loc 1 390 0
 726 0002 FFF7FEFF 		bl	HAL_SYSTICK_Callback
 727              	.LVL62:
 728 0006 08BD     		pop	{r3, pc}
 729              		.cfi_endproc
ARM GAS  /tmp/ccYchH6m.s 			page 57


 730              	.LFE125:
 732              		.text
 733              	.Letext0:
 734              		.file 4 "../Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f401xe.h"
 735              		.file 5 "/usr/include/newlib/machine/_default_types.h"
 736              		.file 6 "/usr/include/newlib/sys/_stdint.h"
ARM GAS  /tmp/ccYchH6m.s 			page 58


DEFINED SYMBOLS
                            *ABS*:00000000 stm32f4xx_hal_cortex.c
     /tmp/ccYchH6m.s:22     .text.HAL_NVIC_SetPriorityGrouping:00000000 $t
     /tmp/ccYchH6m.s:27     .text.HAL_NVIC_SetPriorityGrouping:00000000 HAL_NVIC_SetPriorityGrouping
     /tmp/ccYchH6m.s:66     .text.HAL_NVIC_SetPriorityGrouping:00000020 $d
     /tmp/ccYchH6m.s:73     .text.HAL_NVIC_SetPriority:00000000 $t
     /tmp/ccYchH6m.s:78     .text.HAL_NVIC_SetPriority:00000000 HAL_NVIC_SetPriority
     /tmp/ccYchH6m.s:177    .text.HAL_NVIC_SetPriority:0000005c $d
     /tmp/ccYchH6m.s:183    .text.HAL_NVIC_EnableIRQ:00000000 $t
     /tmp/ccYchH6m.s:188    .text.HAL_NVIC_EnableIRQ:00000000 HAL_NVIC_EnableIRQ
     /tmp/ccYchH6m.s:211    .text.HAL_NVIC_EnableIRQ:00000014 $d
     /tmp/ccYchH6m.s:218    .text.HAL_NVIC_DisableIRQ:00000000 $t
     /tmp/ccYchH6m.s:223    .text.HAL_NVIC_DisableIRQ:00000000 HAL_NVIC_DisableIRQ
     /tmp/ccYchH6m.s:247    .text.HAL_NVIC_DisableIRQ:00000018 $d
     /tmp/ccYchH6m.s:254    .text.HAL_NVIC_SystemReset:00000000 $t
     /tmp/ccYchH6m.s:259    .text.HAL_NVIC_SystemReset:00000000 HAL_NVIC_SystemReset
     /tmp/ccYchH6m.s:303    .text.HAL_NVIC_SystemReset:00000018 $d
     /tmp/ccYchH6m.s:313    .text.HAL_SYSTICK_Config:00000000 $t
     /tmp/ccYchH6m.s:318    .text.HAL_SYSTICK_Config:00000000 HAL_SYSTICK_Config
     /tmp/ccYchH6m.s:365    .text.HAL_SYSTICK_Config:00000024 $d
     /tmp/ccYchH6m.s:371    .text.HAL_NVIC_GetPriorityGrouping:00000000 $t
     /tmp/ccYchH6m.s:376    .text.HAL_NVIC_GetPriorityGrouping:00000000 HAL_NVIC_GetPriorityGrouping
     /tmp/ccYchH6m.s:396    .text.HAL_NVIC_GetPriorityGrouping:0000000c $d
     /tmp/ccYchH6m.s:401    .text.HAL_NVIC_GetPriority:00000000 $t
     /tmp/ccYchH6m.s:406    .text.HAL_NVIC_GetPriority:00000000 HAL_NVIC_GetPriority
     /tmp/ccYchH6m.s:495    .text.HAL_NVIC_GetPriority:00000058 $d
     /tmp/ccYchH6m.s:500    .text.HAL_NVIC_SetPendingIRQ:00000000 $t
     /tmp/ccYchH6m.s:505    .text.HAL_NVIC_SetPendingIRQ:00000000 HAL_NVIC_SetPendingIRQ
     /tmp/ccYchH6m.s:529    .text.HAL_NVIC_SetPendingIRQ:00000018 $d
     /tmp/ccYchH6m.s:536    .text.HAL_NVIC_GetPendingIRQ:00000000 $t
     /tmp/ccYchH6m.s:541    .text.HAL_NVIC_GetPendingIRQ:00000000 HAL_NVIC_GetPendingIRQ
     /tmp/ccYchH6m.s:572    .text.HAL_NVIC_GetPendingIRQ:0000001c $d
     /tmp/ccYchH6m.s:577    .text.HAL_NVIC_ClearPendingIRQ:00000000 $t
     /tmp/ccYchH6m.s:582    .text.HAL_NVIC_ClearPendingIRQ:00000000 HAL_NVIC_ClearPendingIRQ
     /tmp/ccYchH6m.s:606    .text.HAL_NVIC_ClearPendingIRQ:00000018 $d
     /tmp/ccYchH6m.s:613    .text.HAL_NVIC_GetActive:00000000 $t
     /tmp/ccYchH6m.s:618    .text.HAL_NVIC_GetActive:00000000 HAL_NVIC_GetActive
     /tmp/ccYchH6m.s:649    .text.HAL_NVIC_GetActive:0000001c $d
     /tmp/ccYchH6m.s:654    .text.HAL_SYSTICK_CLKSourceConfig:00000000 $t
     /tmp/ccYchH6m.s:659    .text.HAL_SYSTICK_CLKSourceConfig:00000000 HAL_SYSTICK_CLKSourceConfig
     /tmp/ccYchH6m.s:686    .text.HAL_SYSTICK_CLKSourceConfig:0000001c $d
     /tmp/ccYchH6m.s:691    .text.HAL_SYSTICK_Callback:00000000 $t
     /tmp/ccYchH6m.s:696    .text.HAL_SYSTICK_Callback:00000000 HAL_SYSTICK_Callback
     /tmp/ccYchH6m.s:708    .text.HAL_SYSTICK_IRQHandler:00000000 $t
     /tmp/ccYchH6m.s:713    .text.HAL_SYSTICK_IRQHandler:00000000 HAL_SYSTICK_IRQHandler
                     .debug_frame:00000010 $d

NO UNDEFINED SYMBOLS
