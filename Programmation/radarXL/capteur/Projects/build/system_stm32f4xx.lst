ARM GAS  /tmp/ccAQfmJy.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 1
   4              		.eabi_attribute 28, 1
   5              		.fpu fpv4-sp-d16
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.thumb
  16              		.syntax unified
  17              		.file	"system_stm32f4xx.c"
  18              		.text
  19              	.Ltext0:
  20              		.cfi_sections	.debug_frame
  21              		.section	.text.SystemInit,"ax",%progbits
  22              		.align	2
  23              		.global	SystemInit
  24              		.thumb
  25              		.thumb_func
  27              	SystemInit:
  28              	.LFB112:
  29              		.file 1 "../Src/system_stm32f4xx.c"
   1:../Src/system_stm32f4xx.c **** /**
   2:../Src/system_stm32f4xx.c ****   ******************************************************************************
   3:../Src/system_stm32f4xx.c ****   * @file    system_stm32f4xx.c
   4:../Src/system_stm32f4xx.c ****   * @author  MCD Application Team
   5:../Src/system_stm32f4xx.c ****   * @version V2.1.0
   6:../Src/system_stm32f4xx.c ****   * @date    19-June-2014
   7:../Src/system_stm32f4xx.c ****   * @brief   CMSIS Cortex-M4 Device Peripheral Access Layer System Source File.
   8:../Src/system_stm32f4xx.c ****   *
   9:../Src/system_stm32f4xx.c ****   *   This file provides two functions and one global variable to be called from 
  10:../Src/system_stm32f4xx.c ****   *   user application:
  11:../Src/system_stm32f4xx.c ****   *      - SystemInit(): This function is called at startup just after reset and 
  12:../Src/system_stm32f4xx.c ****   *                      before branch to main program. This call is made inside
  13:../Src/system_stm32f4xx.c ****   *                      the "startup_stm32f4xx.s" file.
  14:../Src/system_stm32f4xx.c ****   *
  15:../Src/system_stm32f4xx.c ****   *      - SystemCoreClock variable: Contains the core clock (HCLK), it can be used
  16:../Src/system_stm32f4xx.c ****   *                                  by the user application to setup the SysTick 
  17:../Src/system_stm32f4xx.c ****   *                                  timer or configure other parameters.
  18:../Src/system_stm32f4xx.c ****   *                                     
  19:../Src/system_stm32f4xx.c ****   *      - SystemCoreClockUpdate(): Updates the variable SystemCoreClock and must
  20:../Src/system_stm32f4xx.c ****   *                                 be called whenever the core clock is changed
  21:../Src/system_stm32f4xx.c ****   *                                 during program execution.
  22:../Src/system_stm32f4xx.c ****   *
  23:../Src/system_stm32f4xx.c ****   *
  24:../Src/system_stm32f4xx.c ****   ******************************************************************************
  25:../Src/system_stm32f4xx.c ****   * @attention
  26:../Src/system_stm32f4xx.c ****   *
  27:../Src/system_stm32f4xx.c ****   * <h2><center>&copy; COPYRIGHT 2014 STMicroelectronics</center></h2>
  28:../Src/system_stm32f4xx.c ****   *
  29:../Src/system_stm32f4xx.c ****   * Redistribution and use in source and binary forms, with or without modification,
ARM GAS  /tmp/ccAQfmJy.s 			page 2


  30:../Src/system_stm32f4xx.c ****   * are permitted provided that the following conditions are met:
  31:../Src/system_stm32f4xx.c ****   *   1. Redistributions of source code must retain the above copyright notice,
  32:../Src/system_stm32f4xx.c ****   *      this list of conditions and the following disclaimer.
  33:../Src/system_stm32f4xx.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  34:../Src/system_stm32f4xx.c ****   *      this list of conditions and the following disclaimer in the documentation
  35:../Src/system_stm32f4xx.c ****   *      and/or other materials provided with the distribution.
  36:../Src/system_stm32f4xx.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  37:../Src/system_stm32f4xx.c ****   *      may be used to endorse or promote products derived from this software
  38:../Src/system_stm32f4xx.c ****   *      without specific prior written permission.
  39:../Src/system_stm32f4xx.c ****   *
  40:../Src/system_stm32f4xx.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  41:../Src/system_stm32f4xx.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  42:../Src/system_stm32f4xx.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  43:../Src/system_stm32f4xx.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  44:../Src/system_stm32f4xx.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  45:../Src/system_stm32f4xx.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  46:../Src/system_stm32f4xx.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  47:../Src/system_stm32f4xx.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  48:../Src/system_stm32f4xx.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  49:../Src/system_stm32f4xx.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  50:../Src/system_stm32f4xx.c ****   *
  51:../Src/system_stm32f4xx.c ****   ******************************************************************************
  52:../Src/system_stm32f4xx.c ****   */
  53:../Src/system_stm32f4xx.c **** 
  54:../Src/system_stm32f4xx.c **** /** @addtogroup CMSIS
  55:../Src/system_stm32f4xx.c ****   * @{
  56:../Src/system_stm32f4xx.c ****   */
  57:../Src/system_stm32f4xx.c **** 
  58:../Src/system_stm32f4xx.c **** /** @addtogroup stm32f4xx_system
  59:../Src/system_stm32f4xx.c ****   * @{
  60:../Src/system_stm32f4xx.c ****   */  
  61:../Src/system_stm32f4xx.c ****   
  62:../Src/system_stm32f4xx.c **** /** @addtogroup STM32F4xx_System_Private_Includes
  63:../Src/system_stm32f4xx.c ****   * @{
  64:../Src/system_stm32f4xx.c ****   */
  65:../Src/system_stm32f4xx.c **** 
  66:../Src/system_stm32f4xx.c **** 
  67:../Src/system_stm32f4xx.c **** #include "stm32f4xx.h"
  68:../Src/system_stm32f4xx.c **** 
  69:../Src/system_stm32f4xx.c **** #if !defined  (HSE_VALUE) 
  70:../Src/system_stm32f4xx.c ****   #define HSE_VALUE    ((uint32_t)8000000) /*!< Default value of the External oscillator in Hz */
  71:../Src/system_stm32f4xx.c **** #endif /* HSE_VALUE */
  72:../Src/system_stm32f4xx.c **** 
  73:../Src/system_stm32f4xx.c **** #if !defined  (HSI_VALUE)
  74:../Src/system_stm32f4xx.c ****   #define HSI_VALUE    ((uint32_t)16000000) /*!< Value of the Internal oscillator in Hz*/
  75:../Src/system_stm32f4xx.c **** #endif /* HSI_VALUE */
  76:../Src/system_stm32f4xx.c **** 
  77:../Src/system_stm32f4xx.c **** /**
  78:../Src/system_stm32f4xx.c ****   * @}
  79:../Src/system_stm32f4xx.c ****   */
  80:../Src/system_stm32f4xx.c **** 
  81:../Src/system_stm32f4xx.c **** /** @addtogroup STM32F4xx_System_Private_TypesDefinitions
  82:../Src/system_stm32f4xx.c ****   * @{
  83:../Src/system_stm32f4xx.c ****   */
  84:../Src/system_stm32f4xx.c **** 
  85:../Src/system_stm32f4xx.c **** /**
  86:../Src/system_stm32f4xx.c ****   * @}
ARM GAS  /tmp/ccAQfmJy.s 			page 3


  87:../Src/system_stm32f4xx.c ****   */
  88:../Src/system_stm32f4xx.c **** 
  89:../Src/system_stm32f4xx.c **** /** @addtogroup STM32F4xx_System_Private_Defines
  90:../Src/system_stm32f4xx.c ****   * @{
  91:../Src/system_stm32f4xx.c ****   */
  92:../Src/system_stm32f4xx.c **** 
  93:../Src/system_stm32f4xx.c **** /************************* Miscellaneous Configuration ************************/
  94:../Src/system_stm32f4xx.c **** /*!< Uncomment the following line if you need to use external SRAM or SDRAM mounted
  95:../Src/system_stm32f4xx.c ****      on STM324xG_EVAL/STM324x9I_EVAL boards as data memory  */
  96:../Src/system_stm32f4xx.c **** #if defined(STM32F405xx) || defined(STM32F415xx) || defined(STM32F407xx) || defined(STM32F417xx) ||
  97:../Src/system_stm32f4xx.c **** /* #define DATA_IN_ExtSRAM */
  98:../Src/system_stm32f4xx.c **** #endif /* STM32F405xx || STM32F415xx || STM32F407xx || STM32F417xx || STM32F427xx || STM32F437xx ||
  99:../Src/system_stm32f4xx.c ****  
 100:../Src/system_stm32f4xx.c **** #if defined(STM32F427xx) || defined(STM32F437xx) || defined(STM32F429xx) || defined(STM32F439xx)
 101:../Src/system_stm32f4xx.c **** /* #define DATA_IN_ExtSDRAM */
 102:../Src/system_stm32f4xx.c **** #endif /* STM32F427xx || STM32F437xx || STM32F429xx || STM32F439xx */
 103:../Src/system_stm32f4xx.c **** 
 104:../Src/system_stm32f4xx.c **** #if defined(DATA_IN_ExtSRAM) && defined(DATA_IN_ExtSDRAM)
 105:../Src/system_stm32f4xx.c ****  #error "Please select DATA_IN_ExtSRAM or DATA_IN_ExtSDRAM " 
 106:../Src/system_stm32f4xx.c **** #endif /* DATA_IN_ExtSRAM && DATA_IN_ExtSDRAM */
 107:../Src/system_stm32f4xx.c **** 
 108:../Src/system_stm32f4xx.c **** /*!< Uncomment the following line if you need to relocate your vector Table in
 109:../Src/system_stm32f4xx.c ****      Internal SRAM. */
 110:../Src/system_stm32f4xx.c **** /* #define VECT_TAB_SRAM */
 111:../Src/system_stm32f4xx.c **** #define VECT_TAB_OFFSET  0x00 /*!< Vector Table base offset field. 
 112:../Src/system_stm32f4xx.c ****                                    This value must be a multiple of 0x200. */
 113:../Src/system_stm32f4xx.c **** /******************************************************************************/
 114:../Src/system_stm32f4xx.c **** 
 115:../Src/system_stm32f4xx.c **** /**
 116:../Src/system_stm32f4xx.c ****   * @}
 117:../Src/system_stm32f4xx.c ****   */
 118:../Src/system_stm32f4xx.c **** 
 119:../Src/system_stm32f4xx.c **** /** @addtogroup STM32F4xx_System_Private_Macros
 120:../Src/system_stm32f4xx.c ****   * @{
 121:../Src/system_stm32f4xx.c ****   */
 122:../Src/system_stm32f4xx.c **** 
 123:../Src/system_stm32f4xx.c **** /**
 124:../Src/system_stm32f4xx.c ****   * @}
 125:../Src/system_stm32f4xx.c ****   */
 126:../Src/system_stm32f4xx.c **** 
 127:../Src/system_stm32f4xx.c **** /** @addtogroup STM32F4xx_System_Private_Variables
 128:../Src/system_stm32f4xx.c ****   * @{
 129:../Src/system_stm32f4xx.c ****   */
 130:../Src/system_stm32f4xx.c ****   /* This variable is updated in three ways:
 131:../Src/system_stm32f4xx.c ****       1) by calling CMSIS function SystemCoreClockUpdate()
 132:../Src/system_stm32f4xx.c ****       2) by calling HAL API function HAL_RCC_GetHCLKFreq()
 133:../Src/system_stm32f4xx.c ****       3) each time HAL_RCC_ClockConfig() is called to configure the system clock frequency 
 134:../Src/system_stm32f4xx.c ****          Note: If you use this function to configure the system clock; then there
 135:../Src/system_stm32f4xx.c ****                is no need to call the 2 first functions listed above, since SystemCoreClock
 136:../Src/system_stm32f4xx.c ****                variable is updated automatically.
 137:../Src/system_stm32f4xx.c ****   */
 138:../Src/system_stm32f4xx.c ****   uint32_t SystemCoreClock = 16000000;
 139:../Src/system_stm32f4xx.c ****   __IO const uint8_t AHBPrescTable[16] = {0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 4, 6, 7, 8, 9};
 140:../Src/system_stm32f4xx.c **** 
 141:../Src/system_stm32f4xx.c **** /**
 142:../Src/system_stm32f4xx.c ****   * @}
 143:../Src/system_stm32f4xx.c ****   */
ARM GAS  /tmp/ccAQfmJy.s 			page 4


 144:../Src/system_stm32f4xx.c **** 
 145:../Src/system_stm32f4xx.c **** /** @addtogroup STM32F4xx_System_Private_FunctionPrototypes
 146:../Src/system_stm32f4xx.c ****   * @{
 147:../Src/system_stm32f4xx.c ****   */
 148:../Src/system_stm32f4xx.c **** 
 149:../Src/system_stm32f4xx.c **** #if defined (DATA_IN_ExtSRAM) || defined (DATA_IN_ExtSDRAM)
 150:../Src/system_stm32f4xx.c ****   static void SystemInit_ExtMemCtl(void); 
 151:../Src/system_stm32f4xx.c **** #endif /* DATA_IN_ExtSRAM || DATA_IN_ExtSDRAM */
 152:../Src/system_stm32f4xx.c **** 
 153:../Src/system_stm32f4xx.c **** /**
 154:../Src/system_stm32f4xx.c ****   * @}
 155:../Src/system_stm32f4xx.c ****   */
 156:../Src/system_stm32f4xx.c **** 
 157:../Src/system_stm32f4xx.c **** /** @addtogroup STM32F4xx_System_Private_Functions
 158:../Src/system_stm32f4xx.c ****   * @{
 159:../Src/system_stm32f4xx.c ****   */
 160:../Src/system_stm32f4xx.c **** 
 161:../Src/system_stm32f4xx.c **** /**
 162:../Src/system_stm32f4xx.c ****   * @brief  Setup the microcontroller system
 163:../Src/system_stm32f4xx.c ****   *         Initialize the FPU setting, vector table location and External memory 
 164:../Src/system_stm32f4xx.c ****   *         configuration.
 165:../Src/system_stm32f4xx.c ****   * @param  None
 166:../Src/system_stm32f4xx.c ****   * @retval None
 167:../Src/system_stm32f4xx.c ****   */
 168:../Src/system_stm32f4xx.c **** void SystemInit(void)
 169:../Src/system_stm32f4xx.c **** {
  30              		.loc 1 169 0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
 170:../Src/system_stm32f4xx.c ****   /* FPU settings ------------------------------------------------------------*/
 171:../Src/system_stm32f4xx.c ****   #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
 172:../Src/system_stm32f4xx.c ****     SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
  35              		.loc 1 172 0
  36 0000 0F49     		ldr	r1, .L2
  37 0002 D1F88830 		ldr	r3, [r1, #136]
  38 0006 43F47003 		orr	r3, r3, #15728640
  39 000a C1F88830 		str	r3, [r1, #136]
 173:../Src/system_stm32f4xx.c ****   #endif
 174:../Src/system_stm32f4xx.c ****   /* Reset the RCC clock configuration to the default reset state ------------*/
 175:../Src/system_stm32f4xx.c ****   /* Set HSION bit */
 176:../Src/system_stm32f4xx.c ****   RCC->CR |= (uint32_t)0x00000001;
  40              		.loc 1 176 0
  41 000e 0D4B     		ldr	r3, .L2+4
  42 0010 1A68     		ldr	r2, [r3]
  43 0012 42F00102 		orr	r2, r2, #1
  44 0016 1A60     		str	r2, [r3]
 177:../Src/system_stm32f4xx.c **** 
 178:../Src/system_stm32f4xx.c ****   /* Reset CFGR register */
 179:../Src/system_stm32f4xx.c ****   RCC->CFGR = 0x00000000;
  45              		.loc 1 179 0
  46 0018 0020     		movs	r0, #0
  47 001a 9860     		str	r0, [r3, #8]
 180:../Src/system_stm32f4xx.c **** 
 181:../Src/system_stm32f4xx.c ****   /* Reset HSEON, CSSON and PLLON bits */
 182:../Src/system_stm32f4xx.c ****   RCC->CR &= (uint32_t)0xFEF6FFFF;
ARM GAS  /tmp/ccAQfmJy.s 			page 5


  48              		.loc 1 182 0
  49 001c 1A68     		ldr	r2, [r3]
  50 001e 22F08472 		bic	r2, r2, #17301504
  51 0022 22F48032 		bic	r2, r2, #65536
  52 0026 1A60     		str	r2, [r3]
 183:../Src/system_stm32f4xx.c **** 
 184:../Src/system_stm32f4xx.c ****   /* Reset PLLCFGR register */
 185:../Src/system_stm32f4xx.c ****   RCC->PLLCFGR = 0x24003010;
  53              		.loc 1 185 0
  54 0028 074A     		ldr	r2, .L2+8
  55 002a 5A60     		str	r2, [r3, #4]
 186:../Src/system_stm32f4xx.c **** 
 187:../Src/system_stm32f4xx.c ****   /* Reset HSEBYP bit */
 188:../Src/system_stm32f4xx.c ****   RCC->CR &= (uint32_t)0xFFFBFFFF;
  56              		.loc 1 188 0
  57 002c 1A68     		ldr	r2, [r3]
  58 002e 22F48022 		bic	r2, r2, #262144
  59 0032 1A60     		str	r2, [r3]
 189:../Src/system_stm32f4xx.c **** 
 190:../Src/system_stm32f4xx.c ****   /* Disable all interrupts */
 191:../Src/system_stm32f4xx.c ****   RCC->CIR = 0x00000000;
  60              		.loc 1 191 0
  61 0034 D860     		str	r0, [r3, #12]
 192:../Src/system_stm32f4xx.c **** 
 193:../Src/system_stm32f4xx.c **** #if defined (DATA_IN_ExtSRAM) || defined (DATA_IN_ExtSDRAM)
 194:../Src/system_stm32f4xx.c ****   SystemInit_ExtMemCtl(); 
 195:../Src/system_stm32f4xx.c **** #endif /* DATA_IN_ExtSRAM || DATA_IN_ExtSDRAM */
 196:../Src/system_stm32f4xx.c **** 
 197:../Src/system_stm32f4xx.c ****   /* Configure the Vector Table location add offset address ------------------*/
 198:../Src/system_stm32f4xx.c **** #ifdef VECT_TAB_SRAM
 199:../Src/system_stm32f4xx.c ****   SCB->VTOR = SRAM_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
 200:../Src/system_stm32f4xx.c **** #else
 201:../Src/system_stm32f4xx.c ****   SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
  62              		.loc 1 201 0
  63 0036 4FF00063 		mov	r3, #134217728
  64 003a 8B60     		str	r3, [r1, #8]
  65 003c 7047     		bx	lr
  66              	.L3:
  67 003e 00BF     		.align	2
  68              	.L2:
  69 0040 00ED00E0 		.word	-536810240
  70 0044 00380240 		.word	1073887232
  71 0048 10300024 		.word	603992080
  72              		.cfi_endproc
  73              	.LFE112:
  75              		.section	.text.SystemCoreClockUpdate,"ax",%progbits
  76              		.align	2
  77              		.global	SystemCoreClockUpdate
  78              		.thumb
  79              		.thumb_func
  81              	SystemCoreClockUpdate:
  82              	.LFB113:
 202:../Src/system_stm32f4xx.c **** #endif
 203:../Src/system_stm32f4xx.c **** }
 204:../Src/system_stm32f4xx.c **** 
 205:../Src/system_stm32f4xx.c **** /**
 206:../Src/system_stm32f4xx.c ****    * @brief  Update SystemCoreClock variable according to Clock Register Values.
ARM GAS  /tmp/ccAQfmJy.s 			page 6


 207:../Src/system_stm32f4xx.c ****   *         The SystemCoreClock variable contains the core clock (HCLK), it can
 208:../Src/system_stm32f4xx.c ****   *         be used by the user application to setup the SysTick timer or configure
 209:../Src/system_stm32f4xx.c ****   *         other parameters.
 210:../Src/system_stm32f4xx.c ****   *           
 211:../Src/system_stm32f4xx.c ****   * @note   Each time the core clock (HCLK) changes, this function must be called
 212:../Src/system_stm32f4xx.c ****   *         to update SystemCoreClock variable value. Otherwise, any configuration
 213:../Src/system_stm32f4xx.c ****   *         based on this variable will be incorrect.         
 214:../Src/system_stm32f4xx.c ****   *     
 215:../Src/system_stm32f4xx.c ****   * @note   - The system frequency computed by this function is not the real 
 216:../Src/system_stm32f4xx.c ****   *           frequency in the chip. It is calculated based on the predefined 
 217:../Src/system_stm32f4xx.c ****   *           constant and the selected clock source:
 218:../Src/system_stm32f4xx.c ****   *             
 219:../Src/system_stm32f4xx.c ****   *           - If SYSCLK source is HSI, SystemCoreClock will contain the HSI_VALUE(*)
 220:../Src/system_stm32f4xx.c ****   *                                              
 221:../Src/system_stm32f4xx.c ****   *           - If SYSCLK source is HSE, SystemCoreClock will contain the HSE_VALUE(**)
 222:../Src/system_stm32f4xx.c ****   *                          
 223:../Src/system_stm32f4xx.c ****   *           - If SYSCLK source is PLL, SystemCoreClock will contain the HSE_VALUE(**) 
 224:../Src/system_stm32f4xx.c ****   *             or HSI_VALUE(*) multiplied/divided by the PLL factors.
 225:../Src/system_stm32f4xx.c ****   *         
 226:../Src/system_stm32f4xx.c ****   *         (*) HSI_VALUE is a constant defined in stm32f4xx_hal_conf.h file (default value
 227:../Src/system_stm32f4xx.c ****   *             16 MHz) but the real value may vary depending on the variations
 228:../Src/system_stm32f4xx.c ****   *             in voltage and temperature.   
 229:../Src/system_stm32f4xx.c ****   *    
 230:../Src/system_stm32f4xx.c ****   *         (**) HSE_VALUE is a constant defined in stm32f4xx_hal_conf.h file (its value
 231:../Src/system_stm32f4xx.c ****   *              depends on the application requirements), user has to ensure that HSE_VALUE
 232:../Src/system_stm32f4xx.c ****   *              is same as the real frequency of the crystal used. Otherwise, this function
 233:../Src/system_stm32f4xx.c ****   *              may have wrong result.
 234:../Src/system_stm32f4xx.c ****   *                
 235:../Src/system_stm32f4xx.c ****   *         - The result of this function could be not correct when using fractional
 236:../Src/system_stm32f4xx.c ****   *           value for HSE crystal.
 237:../Src/system_stm32f4xx.c ****   *     
 238:../Src/system_stm32f4xx.c ****   * @param  None
 239:../Src/system_stm32f4xx.c ****   * @retval None
 240:../Src/system_stm32f4xx.c ****   */
 241:../Src/system_stm32f4xx.c **** void SystemCoreClockUpdate(void)
 242:../Src/system_stm32f4xx.c **** {
  83              		.loc 1 242 0
  84              		.cfi_startproc
  85              		@ args = 0, pretend = 0, frame = 0
  86              		@ frame_needed = 0, uses_anonymous_args = 0
  87              		@ link register save eliminated.
  88              	.LVL0:
 243:../Src/system_stm32f4xx.c ****   uint32_t tmp = 0, pllvco = 0, pllp = 2, pllsource = 0, pllm = 2;
 244:../Src/system_stm32f4xx.c ****   
 245:../Src/system_stm32f4xx.c ****   /* Get SYSCLK source -------------------------------------------------------*/
 246:../Src/system_stm32f4xx.c ****   tmp = RCC->CFGR & RCC_CFGR_SWS;
  89              		.loc 1 246 0
  90 0000 234B     		ldr	r3, .L13
  91 0002 9B68     		ldr	r3, [r3, #8]
  92 0004 03F00C03 		and	r3, r3, #12
  93              	.LVL1:
 247:../Src/system_stm32f4xx.c **** 
 248:../Src/system_stm32f4xx.c ****   switch (tmp)
  94              		.loc 1 248 0
  95 0008 042B     		cmp	r3, #4
  96 000a 07D0     		beq	.L6
  97 000c 082B     		cmp	r3, #8
ARM GAS  /tmp/ccAQfmJy.s 			page 7


  98 000e 09D0     		beq	.L7
  99 0010 002B     		cmp	r3, #0
 100 0012 2DD1     		bne	.L12
 249:../Src/system_stm32f4xx.c ****   {
 250:../Src/system_stm32f4xx.c ****     case 0x00:  /* HSI used as system clock source */
 251:../Src/system_stm32f4xx.c ****       SystemCoreClock = HSI_VALUE;
 101              		.loc 1 251 0
 102 0014 1F4A     		ldr	r2, .L13+4
 103 0016 204B     		ldr	r3, .L13+8
 104              	.LVL2:
 105 0018 1A60     		str	r2, [r3]
 252:../Src/system_stm32f4xx.c ****       break;
 106              		.loc 1 252 0
 107 001a 2CE0     		b	.L9
 108              	.LVL3:
 109              	.L6:
 253:../Src/system_stm32f4xx.c ****     case 0x04:  /* HSE used as system clock source */
 254:../Src/system_stm32f4xx.c ****       SystemCoreClock = HSE_VALUE;
 110              		.loc 1 254 0
 111 001c 1F4A     		ldr	r2, .L13+12
 112 001e 1E4B     		ldr	r3, .L13+8
 113              	.LVL4:
 114 0020 1A60     		str	r2, [r3]
 255:../Src/system_stm32f4xx.c ****       break;
 115              		.loc 1 255 0
 116 0022 28E0     		b	.L9
 117              	.LVL5:
 118              	.L7:
 256:../Src/system_stm32f4xx.c ****     case 0x08:  /* PLL used as system clock source */
 257:../Src/system_stm32f4xx.c **** 
 258:../Src/system_stm32f4xx.c ****       /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLL_M) * PLL_N
 259:../Src/system_stm32f4xx.c ****          SYSCLK = PLL_VCO / PLL_P
 260:../Src/system_stm32f4xx.c ****          */    
 261:../Src/system_stm32f4xx.c ****       pllsource = (RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) >> 22;
 119              		.loc 1 261 0
 120 0024 1A4B     		ldr	r3, .L13
 121              	.LVL6:
 122 0026 5A68     		ldr	r2, [r3, #4]
 123              	.LVL7:
 262:../Src/system_stm32f4xx.c ****       pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 124              		.loc 1 262 0
 125 0028 5B68     		ldr	r3, [r3, #4]
 126 002a 03F03F03 		and	r3, r3, #63
 127              	.LVL8:
 263:../Src/system_stm32f4xx.c ****       
 264:../Src/system_stm32f4xx.c ****       if (pllsource != 0)
 128              		.loc 1 264 0
 129 002e 12F4800F 		tst	r2, #4194304
 130 0032 09D0     		beq	.L10
 265:../Src/system_stm32f4xx.c ****       {
 266:../Src/system_stm32f4xx.c ****         /* HSE used as PLL clock source */
 267:../Src/system_stm32f4xx.c ****         pllvco = (HSE_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> 6);
 131              		.loc 1 267 0
 132 0034 194A     		ldr	r2, .L13+12
 133              	.LVL9:
 134 0036 B2FBF3F2 		udiv	r2, r2, r3
 135 003a 154B     		ldr	r3, .L13
ARM GAS  /tmp/ccAQfmJy.s 			page 8


 136              	.LVL10:
 137 003c 5B68     		ldr	r3, [r3, #4]
 138 003e C3F38813 		ubfx	r3, r3, #6, #9
 139 0042 03FB02F2 		mul	r2, r3, r2
 140              	.LVL11:
 141 0046 08E0     		b	.L11
 142              	.LVL12:
 143              	.L10:
 268:../Src/system_stm32f4xx.c ****       }
 269:../Src/system_stm32f4xx.c ****       else
 270:../Src/system_stm32f4xx.c ****       {
 271:../Src/system_stm32f4xx.c ****         /* HSI used as PLL clock source */
 272:../Src/system_stm32f4xx.c ****         pllvco = (HSI_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> 6);
 144              		.loc 1 272 0
 145 0048 124A     		ldr	r2, .L13+4
 146              	.LVL13:
 147 004a B2FBF3F3 		udiv	r3, r2, r3
 148              	.LVL14:
 149 004e 104A     		ldr	r2, .L13
 150 0050 5168     		ldr	r1, [r2, #4]
 151 0052 C1F38811 		ubfx	r1, r1, #6, #9
 152 0056 01FB03F2 		mul	r2, r1, r3
 153              	.LVL15:
 154              	.L11:
 273:../Src/system_stm32f4xx.c ****       }
 274:../Src/system_stm32f4xx.c **** 
 275:../Src/system_stm32f4xx.c ****       pllp = (((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >>16) + 1 ) *2;
 155              		.loc 1 275 0
 156 005a 0D4B     		ldr	r3, .L13
 157 005c 5B68     		ldr	r3, [r3, #4]
 158 005e C3F30143 		ubfx	r3, r3, #16, #2
 159 0062 0133     		adds	r3, r3, #1
 160 0064 5B00     		lsls	r3, r3, #1
 161              	.LVL16:
 276:../Src/system_stm32f4xx.c ****       SystemCoreClock = pllvco/pllp;
 162              		.loc 1 276 0
 163 0066 B2FBF3F3 		udiv	r3, r2, r3
 164              	.LVL17:
 165 006a 0B4A     		ldr	r2, .L13+8
 166              	.LVL18:
 167 006c 1360     		str	r3, [r2]
 277:../Src/system_stm32f4xx.c ****       break;
 168              		.loc 1 277 0
 169 006e 02E0     		b	.L9
 170              	.LVL19:
 171              	.L12:
 278:../Src/system_stm32f4xx.c ****     default:
 279:../Src/system_stm32f4xx.c ****       SystemCoreClock = HSI_VALUE;
 172              		.loc 1 279 0
 173 0070 084A     		ldr	r2, .L13+4
 174 0072 094B     		ldr	r3, .L13+8
 175              	.LVL20:
 176 0074 1A60     		str	r2, [r3]
 177              	.LVL21:
 178              	.L9:
 280:../Src/system_stm32f4xx.c ****       break;
 281:../Src/system_stm32f4xx.c ****   }
ARM GAS  /tmp/ccAQfmJy.s 			page 9


 282:../Src/system_stm32f4xx.c ****   /* Compute HCLK frequency --------------------------------------------------*/
 283:../Src/system_stm32f4xx.c ****   /* Get HCLK prescaler */
 284:../Src/system_stm32f4xx.c ****   tmp = AHBPrescTable[((RCC->CFGR & RCC_CFGR_HPRE) >> 4)];
 179              		.loc 1 284 0
 180 0076 064B     		ldr	r3, .L13
 181 0078 9B68     		ldr	r3, [r3, #8]
 182 007a C3F30313 		ubfx	r3, r3, #4, #4
 183 007e 084A     		ldr	r2, .L13+16
 184 0080 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 185 0082 DAB2     		uxtb	r2, r3
 186              	.LVL22:
 285:../Src/system_stm32f4xx.c ****   /* HCLK frequency */
 286:../Src/system_stm32f4xx.c ****   SystemCoreClock >>= tmp;
 187              		.loc 1 286 0
 188 0084 0449     		ldr	r1, .L13+8
 189 0086 0B68     		ldr	r3, [r1]
 190 0088 D340     		lsrs	r3, r3, r2
 191 008a 0B60     		str	r3, [r1]
 192 008c 7047     		bx	lr
 193              	.L14:
 194 008e 00BF     		.align	2
 195              	.L13:
 196 0090 00380240 		.word	1073887232
 197 0094 0024F400 		.word	16000000
 198 0098 00000000 		.word	.LANCHOR0
 199 009c 00127A00 		.word	8000000
 200 00a0 00000000 		.word	.LANCHOR1
 201              		.cfi_endproc
 202              	.LFE113:
 204              		.global	AHBPrescTable
 205              		.global	SystemCoreClock
 206              		.section	.data.AHBPrescTable,"aw",%progbits
 207              		.align	2
 208              		.set	.LANCHOR1,. + 0
 211              	AHBPrescTable:
 212 0000 00       		.byte	0
 213 0001 00       		.byte	0
 214 0002 00       		.byte	0
 215 0003 00       		.byte	0
 216 0004 00       		.byte	0
 217 0005 00       		.byte	0
 218 0006 00       		.byte	0
 219 0007 00       		.byte	0
 220 0008 01       		.byte	1
 221 0009 02       		.byte	2
 222 000a 03       		.byte	3
 223 000b 04       		.byte	4
 224 000c 06       		.byte	6
 225 000d 07       		.byte	7
 226 000e 08       		.byte	8
 227 000f 09       		.byte	9
 228              		.section	.data.SystemCoreClock,"aw",%progbits
 229              		.align	2
 230              		.set	.LANCHOR0,. + 0
 233              	SystemCoreClock:
 234 0000 0024F400 		.word	16000000
 235              		.text
ARM GAS  /tmp/ccAQfmJy.s 			page 10


 236              	.Letext0:
 237              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 238              		.file 3 "/usr/include/newlib/sys/_stdint.h"
 239              		.file 4 "../Drivers/CMSIS/Include/core_cm4.h"
 240              		.file 5 "../Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f401xe.h"
ARM GAS  /tmp/ccAQfmJy.s 			page 11


DEFINED SYMBOLS
                            *ABS*:00000000 system_stm32f4xx.c
     /tmp/ccAQfmJy.s:22     .text.SystemInit:00000000 $t
     /tmp/ccAQfmJy.s:27     .text.SystemInit:00000000 SystemInit
     /tmp/ccAQfmJy.s:69     .text.SystemInit:00000040 $d
     /tmp/ccAQfmJy.s:76     .text.SystemCoreClockUpdate:00000000 $t
     /tmp/ccAQfmJy.s:81     .text.SystemCoreClockUpdate:00000000 SystemCoreClockUpdate
     /tmp/ccAQfmJy.s:196    .text.SystemCoreClockUpdate:00000090 $d
     /tmp/ccAQfmJy.s:211    .data.AHBPrescTable:00000000 AHBPrescTable
     /tmp/ccAQfmJy.s:233    .data.SystemCoreClock:00000000 SystemCoreClock
     /tmp/ccAQfmJy.s:207    .data.AHBPrescTable:00000000 $d
     /tmp/ccAQfmJy.s:229    .data.SystemCoreClock:00000000 $d
                     .debug_frame:00000010 $d

NO UNDEFINED SYMBOLS
