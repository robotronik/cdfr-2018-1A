ARM GAS  /tmp/ccsfp71n.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 1
   4              		.eabi_attribute 28, 1
   5              		.fpu fpv4-sp-d16
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.thumb
  16              		.file	"xl_320.c"
  17              		.text
  18              	.Ltext0:
  19              		.cfi_sections	.debug_frame
  20              		.section	.text.XL_FSM_HEADER_0,"ax",%progbits
  21              		.align	2
  22              		.global	XL_FSM_HEADER_0
  23              		.thumb
  24              		.thumb_func
  26              	XL_FSM_HEADER_0:
  27              	.LFB0:
  28              		.file 1 "../Src/xl_320.c"
   1:../Src/xl_320.c **** #include "xl_320.h"
   2:../Src/xl_320.c **** #include <stdio.h>
   3:../Src/xl_320.c **** 
   4:../Src/xl_320.c **** //========================================
   5:../Src/xl_320.c **** //    CONSTANTES ET VARIABLES GLOBALES
   6:../Src/xl_320.c **** //========================================
   7:../Src/xl_320.c **** static const uint8_t header[4] = {0xFF, 0xFF, 0xFD, 0x00};
   8:../Src/xl_320.c **** static const uint8_t stuffing_byte = 0xFD;
   9:../Src/xl_320.c **** static const uint8_t field_addr[] = {
  10:../Src/xl_320.c ****   [XL_ID] = 3,
  11:../Src/xl_320.c ****   [XL_BAUD_RATE] = 4,
  12:../Src/xl_320.c ****   [XL_RETURN_DELAY_TIME] = 5,
  13:../Src/xl_320.c ****   [XL_CW_ANGLE_LIMIT] = 6,
  14:../Src/xl_320.c ****   [XL_CCW_ANGLE_LIMIT] = 8,
  15:../Src/xl_320.c ****   [XL_CONTROL_MODE] = 11,
  16:../Src/xl_320.c ****   [XL_LIMIT_TEMPERATURE] = 12,
  17:../Src/xl_320.c ****   [XL_LOWER_LIMIT_VOLTAGE] = 13,
  18:../Src/xl_320.c ****   [XL_UPPER_LIMIT_VOLTAGE] = 14,
  19:../Src/xl_320.c ****   [XL_MAX_TORQUE] = 15,
  20:../Src/xl_320.c ****   [XL_RETURN_LEVEL] = 17,
  21:../Src/xl_320.c ****   [XL_ALARM_SHUTDOWN] = 18,
  22:../Src/xl_320.c ****   //EEPROM - Info
  23:../Src/xl_320.c ****   [XL_MODEL_NUMBER] = 0,
  24:../Src/xl_320.c ****   [XL_FIRMWARE_VERSION] = 2,
  25:../Src/xl_320.c ****   //RAM - Contrôle
  26:../Src/xl_320.c ****   [XL_TORQUE_ENABLE] = 24,
  27:../Src/xl_320.c ****   [XL_LED] = 25,
  28:../Src/xl_320.c ****   [XL_D_GAIN] = 27,
  29:../Src/xl_320.c ****   [XL_I_GAIN] = 28,
  30:../Src/xl_320.c ****   [XL_P_GAIN] = 29,
ARM GAS  /tmp/ccsfp71n.s 			page 2


  31:../Src/xl_320.c ****   [XL_GOAL_POSITION] = 30,
  32:../Src/xl_320.c ****   [XL_MOVING_SPEED] = 32,
  33:../Src/xl_320.c ****   [XL_TORQUE_LIMIT] = 35,
  34:../Src/xl_320.c ****   [XL_PUNCH] = 51,
  35:../Src/xl_320.c ****   //RAM - Info
  36:../Src/xl_320.c ****   [XL_CURRENT_POSITION] = 37,
  37:../Src/xl_320.c ****   [XL_CURRENT_SPEED] = 39,
  38:../Src/xl_320.c ****   [XL_CURRENT_LOAD] = 41,
  39:../Src/xl_320.c ****   [XL_CURRENT_VOLTAGE] = 45,
  40:../Src/xl_320.c ****   [XL_CURRENT_TEMPERATURE] = 46,
  41:../Src/xl_320.c ****   [XL_REGISTERED_INSTRUCTION] = 47,
  42:../Src/xl_320.c ****   [XL_MOVING] = 49,
  43:../Src/xl_320.c ****   [XL_HARDWARE_ERROR_STATUS] = 50,
  44:../Src/xl_320.c **** };
  45:../Src/xl_320.c **** static const uint8_t field_length[] = {
  46:../Src/xl_320.c ****   [XL_ID] = 1,
  47:../Src/xl_320.c ****   [XL_BAUD_RATE] = 1,
  48:../Src/xl_320.c ****   [XL_RETURN_DELAY_TIME] = 1,
  49:../Src/xl_320.c ****   [XL_CW_ANGLE_LIMIT] = 2,
  50:../Src/xl_320.c ****   [XL_CCW_ANGLE_LIMIT] = 2,
  51:../Src/xl_320.c ****   [XL_CONTROL_MODE] = 1,
  52:../Src/xl_320.c ****   [XL_LIMIT_TEMPERATURE] = 1,
  53:../Src/xl_320.c ****   [XL_LOWER_LIMIT_VOLTAGE] = 1,
  54:../Src/xl_320.c ****   [XL_UPPER_LIMIT_VOLTAGE] = 1,
  55:../Src/xl_320.c ****   [XL_MAX_TORQUE] = 2,
  56:../Src/xl_320.c ****   [XL_RETURN_LEVEL] = 1,
  57:../Src/xl_320.c ****   [XL_ALARM_SHUTDOWN] = 1,
  58:../Src/xl_320.c ****   //EEPROM - Info
  59:../Src/xl_320.c ****   [XL_MODEL_NUMBER] = 2,
  60:../Src/xl_320.c ****   [XL_FIRMWARE_VERSION] = 1,
  61:../Src/xl_320.c ****   //RAM - Contrôle
  62:../Src/xl_320.c ****   [XL_TORQUE_ENABLE] = 1,
  63:../Src/xl_320.c ****   [XL_LED] = 1,
  64:../Src/xl_320.c ****   [XL_D_GAIN] = 1,
  65:../Src/xl_320.c ****   [XL_I_GAIN] = 1,
  66:../Src/xl_320.c ****   [XL_P_GAIN] = 1,
  67:../Src/xl_320.c ****   [XL_GOAL_POSITION] = 2,
  68:../Src/xl_320.c ****   [XL_MOVING_SPEED] = 2,
  69:../Src/xl_320.c ****   [XL_TORQUE_LIMIT] = 2,
  70:../Src/xl_320.c ****   [XL_PUNCH] = 2,
  71:../Src/xl_320.c ****   //RAM - Info
  72:../Src/xl_320.c ****   [XL_CURRENT_POSITION] = 2,
  73:../Src/xl_320.c ****   [XL_CURRENT_SPEED] = 2,
  74:../Src/xl_320.c ****   [XL_CURRENT_LOAD] = 2,
  75:../Src/xl_320.c ****   [XL_CURRENT_VOLTAGE] = 1,
  76:../Src/xl_320.c ****   [XL_CURRENT_TEMPERATURE] = 1,
  77:../Src/xl_320.c ****   [XL_REGISTERED_INSTRUCTION] = 1,
  78:../Src/xl_320.c ****   [XL_MOVING] = 1,
  79:../Src/xl_320.c ****   [XL_HARDWARE_ERROR_STATUS] = 1,
  80:../Src/xl_320.c **** };
  81:../Src/xl_320.c **** static uint16_t err;
  82:../Src/xl_320.c **** 
  83:../Src/xl_320.c **** //========================================
  84:../Src/xl_320.c **** //        FONCTIONS DE RECEPTION
  85:../Src/xl_320.c **** //========================================
  86:../Src/xl_320.c **** #define FSM_BYTE *(fsm->p_buffer)
  87:../Src/xl_320.c **** #define FSM_NEXT fsm->p_buffer++
ARM GAS  /tmp/ccsfp71n.s 			page 3


  88:../Src/xl_320.c **** #define FSM_RESET fsm->update_state = XL_FSM_HEADER_0; fsm->p_buffer = fsm->buffer
  89:../Src/xl_320.c **** #define FSM_UPDATE(state_function) fsm->update_state = state_function
  90:../Src/xl_320.c **** 
  91:../Src/xl_320.c **** void XL_FSM_HEADER_0(XL_Receiver_FSM *fsm){
  29              		.loc 1 91 0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
  34              	.LVL0:
  92:../Src/xl_320.c ****   if(FSM_BYTE == header[0]){
  35              		.loc 1 92 0
  36 0000 C368     		ldr	r3, [r0, #12]
  37 0002 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
  38 0004 FF2A     		cmp	r2, #255
  39 0006 03D1     		bne	.L1
  93:../Src/xl_320.c ****     FSM_NEXT;
  40              		.loc 1 93 0
  41 0008 0133     		adds	r3, r3, #1
  42 000a C360     		str	r3, [r0, #12]
  94:../Src/xl_320.c ****     FSM_UPDATE(XL_FSM_HEADER_1);
  43              		.loc 1 94 0
  44 000c 014B     		ldr	r3, .L3
  45 000e 0360     		str	r3, [r0]
  46              	.L1:
  47 0010 7047     		bx	lr
  48              	.L4:
  49 0012 00BF     		.align	2
  50              	.L3:
  51 0014 00000000 		.word	XL_FSM_HEADER_1
  52              		.cfi_endproc
  53              	.LFE0:
  55              		.section	.text.XL_FSM_HEADER_1,"ax",%progbits
  56              		.align	2
  57              		.global	XL_FSM_HEADER_1
  58              		.thumb
  59              		.thumb_func
  61              	XL_FSM_HEADER_1:
  62              	.LFB1:
  95:../Src/xl_320.c ****   }
  96:../Src/xl_320.c **** }
  97:../Src/xl_320.c **** 
  98:../Src/xl_320.c **** void XL_FSM_HEADER_1(XL_Receiver_FSM *fsm){
  63              		.loc 1 98 0
  64              		.cfi_startproc
  65              		@ args = 0, pretend = 0, frame = 0
  66              		@ frame_needed = 0, uses_anonymous_args = 0
  67              		@ link register save eliminated.
  68              	.LVL1:
  99:../Src/xl_320.c ****   if(FSM_BYTE == header[1]){
  69              		.loc 1 99 0
  70 0000 C368     		ldr	r3, [r0, #12]
  71 0002 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
  72 0004 FF2A     		cmp	r2, #255
  73 0006 04D1     		bne	.L6
 100:../Src/xl_320.c ****     FSM_NEXT;
  74              		.loc 1 100 0
ARM GAS  /tmp/ccsfp71n.s 			page 4


  75 0008 0133     		adds	r3, r3, #1
  76 000a C360     		str	r3, [r0, #12]
 101:../Src/xl_320.c ****     FSM_UPDATE(XL_FSM_HEADER_2);
  77              		.loc 1 101 0
  78 000c 034B     		ldr	r3, .L8
  79 000e 0360     		str	r3, [r0]
  80 0010 7047     		bx	lr
  81              	.L6:
 102:../Src/xl_320.c ****   }
 103:../Src/xl_320.c ****   else{
 104:../Src/xl_320.c ****     FSM_RESET;
  82              		.loc 1 104 0
  83 0012 034B     		ldr	r3, .L8+4
  84 0014 0360     		str	r3, [r0]
  85 0016 8368     		ldr	r3, [r0, #8]
  86 0018 C360     		str	r3, [r0, #12]
  87 001a 7047     		bx	lr
  88              	.L9:
  89              		.align	2
  90              	.L8:
  91 001c 00000000 		.word	XL_FSM_HEADER_2
  92 0020 00000000 		.word	XL_FSM_HEADER_0
  93              		.cfi_endproc
  94              	.LFE1:
  96              		.section	.text.XL_FSM_HEADER_2,"ax",%progbits
  97              		.align	2
  98              		.global	XL_FSM_HEADER_2
  99              		.thumb
 100              		.thumb_func
 102              	XL_FSM_HEADER_2:
 103              	.LFB2:
 105:../Src/xl_320.c ****   }
 106:../Src/xl_320.c **** }
 107:../Src/xl_320.c **** 
 108:../Src/xl_320.c **** void XL_FSM_HEADER_2(XL_Receiver_FSM *fsm){
 104              		.loc 1 108 0
 105              		.cfi_startproc
 106              		@ args = 0, pretend = 0, frame = 0
 107              		@ frame_needed = 0, uses_anonymous_args = 0
 108              		@ link register save eliminated.
 109              	.LVL2:
 109:../Src/xl_320.c ****   if(FSM_BYTE == header[2]){
 110              		.loc 1 109 0
 111 0000 C368     		ldr	r3, [r0, #12]
 112 0002 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 113 0004 FD2A     		cmp	r2, #253
 114 0006 04D1     		bne	.L11
 110:../Src/xl_320.c ****     FSM_NEXT;
 115              		.loc 1 110 0
 116 0008 0133     		adds	r3, r3, #1
 117 000a C360     		str	r3, [r0, #12]
 111:../Src/xl_320.c ****     FSM_UPDATE(XL_FSM_HEADER_3);
 118              		.loc 1 111 0
 119 000c 034B     		ldr	r3, .L13
 120 000e 0360     		str	r3, [r0]
 121 0010 7047     		bx	lr
 122              	.L11:
ARM GAS  /tmp/ccsfp71n.s 			page 5


 112:../Src/xl_320.c ****   }
 113:../Src/xl_320.c ****   else{
 114:../Src/xl_320.c ****     FSM_RESET;
 123              		.loc 1 114 0
 124 0012 034B     		ldr	r3, .L13+4
 125 0014 0360     		str	r3, [r0]
 126 0016 8368     		ldr	r3, [r0, #8]
 127 0018 C360     		str	r3, [r0, #12]
 128 001a 7047     		bx	lr
 129              	.L14:
 130              		.align	2
 131              	.L13:
 132 001c 00000000 		.word	XL_FSM_HEADER_3
 133 0020 00000000 		.word	XL_FSM_HEADER_0
 134              		.cfi_endproc
 135              	.LFE2:
 137              		.section	.text.XL_FSM_HEADER_3,"ax",%progbits
 138              		.align	2
 139              		.global	XL_FSM_HEADER_3
 140              		.thumb
 141              		.thumb_func
 143              	XL_FSM_HEADER_3:
 144              	.LFB3:
 115:../Src/xl_320.c ****   }
 116:../Src/xl_320.c **** }
 117:../Src/xl_320.c **** 
 118:../Src/xl_320.c **** void XL_FSM_HEADER_3(XL_Receiver_FSM *fsm){
 145              		.loc 1 118 0
 146              		.cfi_startproc
 147              		@ args = 0, pretend = 0, frame = 0
 148              		@ frame_needed = 0, uses_anonymous_args = 0
 149              		@ link register save eliminated.
 150              	.LVL3:
 119:../Src/xl_320.c ****   if(FSM_BYTE != stuffing_byte){
 151              		.loc 1 119 0
 152 0000 C368     		ldr	r3, [r0, #12]
 153 0002 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 154 0004 FD2A     		cmp	r2, #253
 155 0006 04D0     		beq	.L16
 120:../Src/xl_320.c ****     FSM_NEXT;
 156              		.loc 1 120 0
 157 0008 0133     		adds	r3, r3, #1
 158 000a C360     		str	r3, [r0, #12]
 121:../Src/xl_320.c ****     FSM_UPDATE(XL_FSM_ID);
 159              		.loc 1 121 0
 160 000c 034B     		ldr	r3, .L18
 161 000e 0360     		str	r3, [r0]
 162 0010 7047     		bx	lr
 163              	.L16:
 122:../Src/xl_320.c ****   }
 123:../Src/xl_320.c ****   else{
 124:../Src/xl_320.c ****     FSM_RESET;
 164              		.loc 1 124 0
 165 0012 034B     		ldr	r3, .L18+4
 166 0014 0360     		str	r3, [r0]
 167 0016 8368     		ldr	r3, [r0, #8]
 168 0018 C360     		str	r3, [r0, #12]
ARM GAS  /tmp/ccsfp71n.s 			page 6


 169 001a 7047     		bx	lr
 170              	.L19:
 171              		.align	2
 172              	.L18:
 173 001c 00000000 		.word	XL_FSM_ID
 174 0020 00000000 		.word	XL_FSM_HEADER_0
 175              		.cfi_endproc
 176              	.LFE3:
 178              		.section	.text.XL_FSM_ID,"ax",%progbits
 179              		.align	2
 180              		.global	XL_FSM_ID
 181              		.thumb
 182              		.thumb_func
 184              	XL_FSM_ID:
 185              	.LFB4:
 125:../Src/xl_320.c ****   }
 126:../Src/xl_320.c **** }
 127:../Src/xl_320.c **** 
 128:../Src/xl_320.c **** void XL_FSM_ID(XL_Receiver_FSM *fsm){
 186              		.loc 1 128 0
 187              		.cfi_startproc
 188              		@ args = 0, pretend = 0, frame = 0
 189              		@ frame_needed = 0, uses_anonymous_args = 0
 190              		@ link register save eliminated.
 191              	.LVL4:
 129:../Src/xl_320.c ****   if(FSM_BYTE != 0xFF && FSM_BYTE != 0xFD){
 192              		.loc 1 129 0
 193 0000 C368     		ldr	r3, [r0, #12]
 194 0002 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 195 0004 FF2A     		cmp	r2, #255
 196 0006 06D0     		beq	.L21
 197              		.loc 1 129 0 is_stmt 0 discriminator 1
 198 0008 FD2A     		cmp	r2, #253
 199 000a 04D0     		beq	.L21
 130:../Src/xl_320.c ****     FSM_NEXT;
 200              		.loc 1 130 0 is_stmt 1
 201 000c 0133     		adds	r3, r3, #1
 202 000e C360     		str	r3, [r0, #12]
 131:../Src/xl_320.c ****     FSM_UPDATE(XL_FSM_LENGTH_LOW);
 203              		.loc 1 131 0
 204 0010 034B     		ldr	r3, .L23
 205 0012 0360     		str	r3, [r0]
 206 0014 7047     		bx	lr
 207              	.L21:
 132:../Src/xl_320.c ****   }
 133:../Src/xl_320.c ****   else{
 134:../Src/xl_320.c ****     FSM_RESET;
 208              		.loc 1 134 0
 209 0016 034B     		ldr	r3, .L23+4
 210 0018 0360     		str	r3, [r0]
 211 001a 8368     		ldr	r3, [r0, #8]
 212 001c C360     		str	r3, [r0, #12]
 213 001e 7047     		bx	lr
 214              	.L24:
 215              		.align	2
 216              	.L23:
 217 0020 00000000 		.word	XL_FSM_LENGTH_LOW
ARM GAS  /tmp/ccsfp71n.s 			page 7


 218 0024 00000000 		.word	XL_FSM_HEADER_0
 219              		.cfi_endproc
 220              	.LFE4:
 222              		.section	.text.XL_FSM_LENGTH_LOW,"ax",%progbits
 223              		.align	2
 224              		.global	XL_FSM_LENGTH_LOW
 225              		.thumb
 226              		.thumb_func
 228              	XL_FSM_LENGTH_LOW:
 229              	.LFB5:
 135:../Src/xl_320.c ****   }
 136:../Src/xl_320.c **** }
 137:../Src/xl_320.c **** 
 138:../Src/xl_320.c **** void XL_FSM_LENGTH_LOW(XL_Receiver_FSM *fsm){
 230              		.loc 1 138 0
 231              		.cfi_startproc
 232              		@ args = 0, pretend = 0, frame = 0
 233              		@ frame_needed = 0, uses_anonymous_args = 0
 234              		@ link register save eliminated.
 235              	.LVL5:
 139:../Src/xl_320.c ****   fsm->remaining_bytes = FSM_BYTE;
 236              		.loc 1 139 0
 237 0000 C368     		ldr	r3, [r0, #12]
 238 0002 13F8012B 		ldrb	r2, [r3], #1	@ zero_extendqisi2
 239 0006 8280     		strh	r2, [r0, #4]	@ movhi
 140:../Src/xl_320.c ****   FSM_NEXT;
 240              		.loc 1 140 0
 241 0008 C360     		str	r3, [r0, #12]
 141:../Src/xl_320.c ****   FSM_UPDATE(XL_FSM_LENGTH_HIGH);
 242              		.loc 1 141 0
 243 000a 014B     		ldr	r3, .L26
 244 000c 0360     		str	r3, [r0]
 245 000e 7047     		bx	lr
 246              	.L27:
 247              		.align	2
 248              	.L26:
 249 0010 00000000 		.word	XL_FSM_LENGTH_HIGH
 250              		.cfi_endproc
 251              	.LFE5:
 253              		.section	.text.XL_FSM_LENGTH_HIGH,"ax",%progbits
 254              		.align	2
 255              		.global	XL_FSM_LENGTH_HIGH
 256              		.thumb
 257              		.thumb_func
 259              	XL_FSM_LENGTH_HIGH:
 260              	.LFB6:
 142:../Src/xl_320.c **** }
 143:../Src/xl_320.c **** 
 144:../Src/xl_320.c **** void XL_FSM_LENGTH_HIGH(XL_Receiver_FSM *fsm){
 261              		.loc 1 144 0
 262              		.cfi_startproc
 263              		@ args = 0, pretend = 0, frame = 0
 264              		@ frame_needed = 0, uses_anonymous_args = 0
 265              		@ link register save eliminated.
 266              	.LVL6:
 145:../Src/xl_320.c ****   fsm->remaining_bytes |= FSM_BYTE << 8;
 267              		.loc 1 145 0
ARM GAS  /tmp/ccsfp71n.s 			page 8


 268 0000 C268     		ldr	r2, [r0, #12]
 269 0002 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 270 0004 8388     		ldrh	r3, [r0, #4]
 271 0006 43EA0123 		orr	r3, r3, r1, lsl #8
 272 000a 8380     		strh	r3, [r0, #4]	@ movhi
 273              	.LVL7:
 146:../Src/xl_320.c ****   const uint16_t remaining_bytes = fsm->remaining_bytes;
 147:../Src/xl_320.c ****   if((remaining_bytes >= 4) && (7 + remaining_bytes <= XL_BUFFER_SIZE)){
 274              		.loc 1 147 0
 275 000c 032B     		cmp	r3, #3
 276 000e 07D9     		bls	.L29
 277              		.loc 1 147 0 is_stmt 0 discriminator 1
 278 0010 0733     		adds	r3, r3, #7
 279              	.LVL8:
 280 0012 202B     		cmp	r3, #32
 281 0014 04DC     		bgt	.L29
 148:../Src/xl_320.c ****     FSM_NEXT;
 282              		.loc 1 148 0 is_stmt 1
 283 0016 0132     		adds	r2, r2, #1
 284 0018 C260     		str	r2, [r0, #12]
 149:../Src/xl_320.c ****     FSM_UPDATE(XL_FSM_INSTRUCTION);
 285              		.loc 1 149 0
 286 001a 044B     		ldr	r3, .L31
 287 001c 0360     		str	r3, [r0]
 288 001e 7047     		bx	lr
 289              	.L29:
 150:../Src/xl_320.c ****   }
 151:../Src/xl_320.c ****   else{
 152:../Src/xl_320.c ****     FSM_RESET;
 290              		.loc 1 152 0
 291 0020 034B     		ldr	r3, .L31+4
 292 0022 0360     		str	r3, [r0]
 293 0024 8368     		ldr	r3, [r0, #8]
 294 0026 C360     		str	r3, [r0, #12]
 295 0028 7047     		bx	lr
 296              	.L32:
 297 002a 00BF     		.align	2
 298              	.L31:
 299 002c 00000000 		.word	XL_FSM_INSTRUCTION
 300 0030 00000000 		.word	XL_FSM_HEADER_0
 301              		.cfi_endproc
 302              	.LFE6:
 304              		.section	.text.XL_FSM_INSTRUCTION,"ax",%progbits
 305              		.align	2
 306              		.global	XL_FSM_INSTRUCTION
 307              		.thumb
 308              		.thumb_func
 310              	XL_FSM_INSTRUCTION:
 311              	.LFB7:
 153:../Src/xl_320.c ****   }
 154:../Src/xl_320.c **** }
 155:../Src/xl_320.c **** void XL_FSM_INSTRUCTION(XL_Receiver_FSM *fsm){
 312              		.loc 1 155 0
 313              		.cfi_startproc
 314              		@ args = 0, pretend = 0, frame = 0
 315              		@ frame_needed = 0, uses_anonymous_args = 0
 316              		@ link register save eliminated.
ARM GAS  /tmp/ccsfp71n.s 			page 9


 317              	.LVL9:
 156:../Src/xl_320.c ****   if(FSM_BYTE == XL_STATUS){
 318              		.loc 1 156 0
 319 0000 C368     		ldr	r3, [r0, #12]
 320 0002 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 321 0004 552A     		cmp	r2, #85
 322 0006 07D1     		bne	.L34
 157:../Src/xl_320.c ****     fsm->remaining_bytes--;
 323              		.loc 1 157 0
 324 0008 8288     		ldrh	r2, [r0, #4]
 325 000a 013A     		subs	r2, r2, #1
 326 000c 8280     		strh	r2, [r0, #4]	@ movhi
 158:../Src/xl_320.c ****     FSM_NEXT;
 327              		.loc 1 158 0
 328 000e 0133     		adds	r3, r3, #1
 329 0010 C360     		str	r3, [r0, #12]
 159:../Src/xl_320.c ****     FSM_UPDATE(XL_FSM_RECEIVING);
 330              		.loc 1 159 0
 331 0012 044B     		ldr	r3, .L36
 332 0014 0360     		str	r3, [r0]
 333 0016 7047     		bx	lr
 334              	.L34:
 160:../Src/xl_320.c ****   }else{
 161:../Src/xl_320.c ****     FSM_RESET;
 335              		.loc 1 161 0
 336 0018 034B     		ldr	r3, .L36+4
 337 001a 0360     		str	r3, [r0]
 338 001c 8368     		ldr	r3, [r0, #8]
 339 001e C360     		str	r3, [r0, #12]
 340 0020 7047     		bx	lr
 341              	.L37:
 342 0022 00BF     		.align	2
 343              	.L36:
 344 0024 00000000 		.word	XL_FSM_RECEIVING
 345 0028 00000000 		.word	XL_FSM_HEADER_0
 346              		.cfi_endproc
 347              	.LFE7:
 349              		.section	.text.XL_FSM_RECEIVING,"ax",%progbits
 350              		.align	2
 351              		.global	XL_FSM_RECEIVING
 352              		.thumb
 353              		.thumb_func
 355              	XL_FSM_RECEIVING:
 356              	.LFB8:
 162:../Src/xl_320.c ****   }
 163:../Src/xl_320.c **** }
 164:../Src/xl_320.c **** 
 165:../Src/xl_320.c **** void XL_FSM_RECEIVING(XL_Receiver_FSM *fsm){
 357              		.loc 1 165 0
 358              		.cfi_startproc
 359              		@ args = 0, pretend = 0, frame = 0
 360              		@ frame_needed = 0, uses_anonymous_args = 0
 361              		@ link register save eliminated.
 362              	.LVL10:
 166:../Src/xl_320.c ****   FSM_NEXT;
 363              		.loc 1 166 0
 364 0000 C368     		ldr	r3, [r0, #12]
ARM GAS  /tmp/ccsfp71n.s 			page 10


 365 0002 0133     		adds	r3, r3, #1
 366 0004 C360     		str	r3, [r0, #12]
 167:../Src/xl_320.c ****   fsm->remaining_bytes--;
 367              		.loc 1 167 0
 368 0006 8388     		ldrh	r3, [r0, #4]
 369 0008 013B     		subs	r3, r3, #1
 370 000a 9BB2     		uxth	r3, r3
 371 000c 8380     		strh	r3, [r0, #4]	@ movhi
 168:../Src/xl_320.c ****   if(fsm->remaining_bytes == 0){
 372              		.loc 1 168 0
 373 000e 0BB9     		cbnz	r3, .L38
 169:../Src/xl_320.c ****     fsm->done = 1;
 374              		.loc 1 169 0
 375 0010 0123     		movs	r3, #1
 376 0012 0374     		strb	r3, [r0, #16]
 377              	.L38:
 378 0014 7047     		bx	lr
 379              		.cfi_endproc
 380              	.LFE8:
 382 0016 00BF     		.section	.text.XL_Update_CRC,"ax",%progbits
 383              		.align	2
 384              		.global	XL_Update_CRC
 385              		.thumb
 386              		.thumb_func
 388              	XL_Update_CRC:
 389              	.LFB13:
 170:../Src/xl_320.c ****   }
 171:../Src/xl_320.c **** }
 172:../Src/xl_320.c **** 
 173:../Src/xl_320.c **** uint8_t XL_Extract_Status_Packet(XL_Status_Packet *packet, uint8_t frame[XL_BUFFER_SIZE], uint16_t 
 174:../Src/xl_320.c ****   //La taille est supposée vérifiée dans XL_Receive.
 175:../Src/xl_320.c ****   //CRC
 176:../Src/xl_320.c ****   uint16_t old_crc = (frame[length-1] << 8) | frame[length-2];
 177:../Src/xl_320.c ****   uint16_t new_crc = XL_Update_CRC(0, frame, length-2);
 178:../Src/xl_320.c ****   if(new_crc != old_crc){
 179:../Src/xl_320.c ****     err = XL_ERR_LINK | XL_ERR_BAD_FRAME;
 180:../Src/xl_320.c ****     return 1;
 181:../Src/xl_320.c ****   }
 182:../Src/xl_320.c **** 
 183:../Src/xl_320.c ****   packet->id = frame[4];
 184:../Src/xl_320.c ****   packet->err = frame[8];
 185:../Src/xl_320.c **** 
 186:../Src/xl_320.c ****   //Paramètres
 187:../Src/xl_320.c ****   uint8_t *start_stuffing = frame+7;
 188:../Src/xl_320.c ****   uint8_t *end_stuffing = frame+(length-2);
 189:../Src/xl_320.c ****   uint8_t *p_frame = frame+9;
 190:../Src/xl_320.c **** 
 191:../Src/xl_320.c ****   packet->nb_params = 0;
 192:../Src/xl_320.c ****   while(p_frame != end_stuffing){
 193:../Src/xl_320.c ****     packet->params[packet->nb_params++] = *(p_frame++);
 194:../Src/xl_320.c ****     if(p_frame - start_stuffing == 3){
 195:../Src/xl_320.c ****       if(start_stuffing[0] == header[0] && start_stuffing[1] == header[1] && start_stuffing[2] == h
 196:../Src/xl_320.c **** 	if(*p_frame != stuffing_byte){
 197:../Src/xl_320.c **** 	  err = XL_ERR_LINK | XL_ERR_BAD_FRAME;
 198:../Src/xl_320.c **** 	  return 1;
 199:../Src/xl_320.c **** 	}
 200:../Src/xl_320.c **** 	p_frame++;
ARM GAS  /tmp/ccsfp71n.s 			page 11


 201:../Src/xl_320.c **** 	start_stuffing = p_frame;
 202:../Src/xl_320.c ****       }
 203:../Src/xl_320.c ****       else{
 204:../Src/xl_320.c **** 	start_stuffing++;
 205:../Src/xl_320.c ****       }
 206:../Src/xl_320.c ****     }
 207:../Src/xl_320.c ****   }
 208:../Src/xl_320.c ****   
 209:../Src/xl_320.c ****   return 0;
 210:../Src/xl_320.c **** }
 211:../Src/xl_320.c **** 
 212:../Src/xl_320.c **** uint8_t XL_Receive(XL_Interface *interface, uint16_t packet_size, uint32_t timeout){
 213:../Src/xl_320.c ****   //Evite un overflow
 214:../Src/xl_320.c ****   if(packet_size > XL_BUFFER_SIZE){
 215:../Src/xl_320.c ****     err = XL_ERR_INTERNAL | XL_ERR_BUFFER_OVERFLOW;
 216:../Src/xl_320.c ****     return 1;
 217:../Src/xl_320.c ****   }
 218:../Src/xl_320.c ****   
 219:../Src/xl_320.c ****   //Préparation de la réception
 220:../Src/xl_320.c ****   interface->set_direction(XL_RECEIVE);
 221:../Src/xl_320.c ****   
 222:../Src/xl_320.c ****   interface->fsm.update_state = XL_FSM_HEADER_0;
 223:../Src/xl_320.c ****   interface->fsm.remaining_bytes = 0;
 224:../Src/xl_320.c ****   interface->fsm.buffer = interface->buffer;
 225:../Src/xl_320.c ****   interface->fsm.p_buffer = interface->buffer;
 226:../Src/xl_320.c ****   interface->fsm.done = 0;
 227:../Src/xl_320.c **** 
 228:../Src/xl_320.c ****   //Réception
 229:../Src/xl_320.c ****   if(interface->receive(interface->fsm.p_buffer, packet_size, timeout) != 0){
 230:../Src/xl_320.c ****     err = XL_ERR_LINK | XL_ERR_TIMEOUT;
 231:../Src/xl_320.c ****     return 1;
 232:../Src/xl_320.c ****   }
 233:../Src/xl_320.c **** 
 234:../Src/xl_320.c ****   //FSM
 235:../Src/xl_320.c ****   do{
 236:../Src/xl_320.c ****     interface->fsm.update_state(&(interface->fsm));
 237:../Src/xl_320.c **** 
 238:../Src/xl_320.c ****     /*uint8_t *p;
 239:../Src/xl_320.c ****     printf("Buffer : ");
 240:../Src/xl_320.c ****     for(p = interface->buffer; p < interface->fsm.p_buffer; p++){
 241:../Src/xl_320.c ****       printf("0x%2.2X ", *p);
 242:../Src/xl_320.c ****     }
 243:../Src/xl_320.c ****     printf("\n");*/
 244:../Src/xl_320.c ****   }while(interface->fsm.p_buffer != interface->fsm.buffer && interface->fsm.done != 1);
 245:../Src/xl_320.c **** 
 246:../Src/xl_320.c ****   //Récupération du paquet
 247:../Src/xl_320.c ****   if(interface->fsm.done == 0){
 248:../Src/xl_320.c ****     err = XL_ERR_LINK | XL_ERR_BAD_FRAME;
 249:../Src/xl_320.c ****     return 1;
 250:../Src/xl_320.c ****   }
 251:../Src/xl_320.c **** 
 252:../Src/xl_320.c ****   //Vérification de la taille du paquet (au cas où)
 253:../Src/xl_320.c ****   uint16_t r_packet_size = interface->fsm.p_buffer - interface->fsm.buffer;
 254:../Src/xl_320.c ****   if(r_packet_size != packet_size){
 255:../Src/xl_320.c ****     err = XL_ERR_LINK | XL_ERR_BAD_FRAME;
 256:../Src/xl_320.c ****     return 1;
 257:../Src/xl_320.c ****   }
ARM GAS  /tmp/ccsfp71n.s 			page 12


 258:../Src/xl_320.c **** 
 259:../Src/xl_320.c ****   return XL_Extract_Status_Packet(&interface->status, interface->buffer, packet_size);
 260:../Src/xl_320.c **** }
 261:../Src/xl_320.c **** 
 262:../Src/xl_320.c **** //======================================
 263:../Src/xl_320.c **** //           FONCTIONS D'ENVOI          
 264:../Src/xl_320.c **** //======================================
 265:../Src/xl_320.c **** uint8_t XL_Build_Frame(XL_Instruction_Packet *packet, uint8_t buffer[XL_BUFFER_SIZE]){
 266:../Src/xl_320.c ****   //Vérification des arguments
 267:../Src/xl_320.c ****   if(packet == 0 || (packet->params == 0 && packet->nb_params > 0) || buffer == 0){
 268:../Src/xl_320.c ****     err = XL_ERR_INTERNAL | XL_ERR_ILLEGAL_ARGUMENTS;
 269:../Src/xl_320.c ****     return 0;
 270:../Src/xl_320.c ****   }
 271:../Src/xl_320.c ****   //Evite une collision avec l'en-tête
 272:../Src/xl_320.c ****   if(packet->id == 0xFD || packet->id == 0xFF){
 273:../Src/xl_320.c ****     err = XL_ERR_INTERNAL | XL_ERR_ILLEGAL_ARGUMENTS;
 274:../Src/xl_320.c ****     return 0;
 275:../Src/xl_320.c ****   }
 276:../Src/xl_320.c ****   //Evite un overflow
 277:../Src/xl_320.c ****   if(10+packet->nb_params+packet->nb_params/3 > XL_BUFFER_SIZE){
 278:../Src/xl_320.c ****     err = XL_ERR_INTERNAL | XL_ERR_BUFFER_OVERFLOW;
 279:../Src/xl_320.c ****     return 0;
 280:../Src/xl_320.c ****   }
 281:../Src/xl_320.c **** 
 282:../Src/xl_320.c ****   uint8_t *p_buffer = buffer;
 283:../Src/xl_320.c ****   //Header
 284:../Src/xl_320.c ****   *(p_buffer++) = header[0];
 285:../Src/xl_320.c ****   *(p_buffer++) = header[1];
 286:../Src/xl_320.c ****   *(p_buffer++) = header[2];
 287:../Src/xl_320.c ****   *(p_buffer++) = header[3];
 288:../Src/xl_320.c **** 
 289:../Src/xl_320.c ****   //Packet ID
 290:../Src/xl_320.c ****   *(p_buffer++) = packet->id;
 291:../Src/xl_320.c **** 
 292:../Src/xl_320.c ****   //Packet length (temporaire)
 293:../Src/xl_320.c ****   p_buffer += 2;
 294:../Src/xl_320.c **** 
 295:../Src/xl_320.c ****   //<BEGIN BYTE STUFFING>
 296:../Src/xl_320.c ****   //Instruction
 297:../Src/xl_320.c ****   uint8_t *start_stuffing = p_buffer;
 298:../Src/xl_320.c ****   *(p_buffer++) = packet->instruction;
 299:../Src/xl_320.c **** 
 300:../Src/xl_320.c ****   //Paramètres
 301:../Src/xl_320.c ****   int i;
 302:../Src/xl_320.c ****   for(i = 0; i < packet->nb_params; i++){
 303:../Src/xl_320.c ****     *(p_buffer++) = packet->params[i];
 304:../Src/xl_320.c ****     if(p_buffer - start_stuffing == 3){
 305:../Src/xl_320.c ****       if(start_stuffing[0] == header[0] && start_stuffing[1] == header[1] && start_stuffing[2] == h
 306:../Src/xl_320.c **** 	*(p_buffer++) = stuffing_byte;
 307:../Src/xl_320.c **** 	start_stuffing = p_buffer;
 308:../Src/xl_320.c ****       }else{
 309:../Src/xl_320.c **** 	start_stuffing++;
 310:../Src/xl_320.c ****       }
 311:../Src/xl_320.c ****     }
 312:../Src/xl_320.c ****   }
 313:../Src/xl_320.c ****   //<END BYTE STUFFING>
 314:../Src/xl_320.c **** 
ARM GAS  /tmp/ccsfp71n.s 			page 13


 315:../Src/xl_320.c ****   //Packet length
 316:../Src/xl_320.c ****   uint16_t packet_length = (p_buffer-buffer) - 7 + 2;//Ce qu'on a écrit - (header+id+length) + crc
 317:../Src/xl_320.c ****   buffer[5] = packet_length & 0x00FF;
 318:../Src/xl_320.c ****   buffer[6] = packet_length >> 8;
 319:../Src/xl_320.c **** 
 320:../Src/xl_320.c ****   //Cyclic Redundancy Check
 321:../Src/xl_320.c ****   uint16_t crc = XL_Update_CRC(0, buffer, packet_length+7-2);
 322:../Src/xl_320.c ****   *(p_buffer++) = crc & 0x00FF;
 323:../Src/xl_320.c ****   *(p_buffer++) = crc >> 8;
 324:../Src/xl_320.c ****   
 325:../Src/xl_320.c ****   return p_buffer-buffer;    
 326:../Src/xl_320.c **** }
 327:../Src/xl_320.c **** 
 328:../Src/xl_320.c **** uint8_t XL_Send(XL_Interface *interface, XL_Instruction_Packet *packet, uint32_t timeout){
 329:../Src/xl_320.c ****   //Préparation de la trame
 330:../Src/xl_320.c ****   uint8_t length = XL_Build_Frame(packet, interface->buffer);
 331:../Src/xl_320.c ****   if(!length){
 332:../Src/xl_320.c ****     return 1;
 333:../Src/xl_320.c ****   }
 334:../Src/xl_320.c **** 
 335:../Src/xl_320.c ****   //Envoi
 336:../Src/xl_320.c ****   interface->set_direction(XL_SEND);
 337:../Src/xl_320.c ****   if(interface->send(interface->buffer, length, timeout) == 1){
 338:../Src/xl_320.c ****     err = XL_ERR_LINK | XL_ERR_TIMEOUT;
 339:../Src/xl_320.c ****     return 1;
 340:../Src/xl_320.c ****   }
 341:../Src/xl_320.c ****   return 0;
 342:../Src/xl_320.c **** }
 343:../Src/xl_320.c **** 
 344:../Src/xl_320.c **** uint16_t XL_Update_CRC(uint16_t crc_accum, uint8_t *data_blk_ptr, uint16_t data_blk_size){
 390              		.loc 1 344 0
 391              		.cfi_startproc
 392              		@ args = 0, pretend = 0, frame = 512
 393              		@ frame_needed = 0, uses_anonymous_args = 0
 394              	.LVL11:
 395 0000 70B5     		push	{r4, r5, r6, lr}
 396              	.LCFI0:
 397              		.cfi_def_cfa_offset 16
 398              		.cfi_offset 4, -16
 399              		.cfi_offset 5, -12
 400              		.cfi_offset 6, -8
 401              		.cfi_offset 14, -4
 402 0002 ADF5007D 		sub	sp, sp, #512
 403              	.LCFI1:
 404              		.cfi_def_cfa_offset 528
 405 0006 0446     		mov	r4, r0
 406 0008 0E46     		mov	r6, r1
 407 000a 1546     		mov	r5, r2
 345:../Src/xl_320.c ****   uint16_t i, j;
 346:../Src/xl_320.c ****   uint16_t crc_table[256] = {
 408              		.loc 1 346 0
 409 000c 6846     		mov	r0, sp
 410              	.LVL12:
 411 000e 0B49     		ldr	r1, .L44
 412              	.LVL13:
 413 0010 4FF40072 		mov	r2, #512
 414              	.LVL14:
ARM GAS  /tmp/ccsfp71n.s 			page 14


 415 0014 FFF7FEFF 		bl	memcpy
 416              	.LVL15:
 347:../Src/xl_320.c ****     0x0000, 0x8005, 0x800F, 0x000A, 0x801B, 0x001E, 0x0014, 0x8011,
 348:../Src/xl_320.c ****     0x8033, 0x0036, 0x003C, 0x8039, 0x0028, 0x802D, 0x8027, 0x0022,
 349:../Src/xl_320.c ****     0x8063, 0x0066, 0x006C, 0x8069, 0x0078, 0x807D, 0x8077, 0x0072,
 350:../Src/xl_320.c ****     0x0050, 0x8055, 0x805F, 0x005A, 0x804B, 0x004E, 0x0044, 0x8041,
 351:../Src/xl_320.c ****     0x80C3, 0x00C6, 0x00CC, 0x80C9, 0x00D8, 0x80DD, 0x80D7, 0x00D2,
 352:../Src/xl_320.c ****     0x00F0, 0x80F5, 0x80FF, 0x00FA, 0x80EB, 0x00EE, 0x00E4, 0x80E1,
 353:../Src/xl_320.c ****     0x00A0, 0x80A5, 0x80AF, 0x00AA, 0x80BB, 0x00BE, 0x00B4, 0x80B1,
 354:../Src/xl_320.c ****     0x8093, 0x0096, 0x009C, 0x8099, 0x0088, 0x808D, 0x8087, 0x0082,
 355:../Src/xl_320.c ****     0x8183, 0x0186, 0x018C, 0x8189, 0x0198, 0x819D, 0x8197, 0x0192,
 356:../Src/xl_320.c ****     0x01B0, 0x81B5, 0x81BF, 0x01BA, 0x81AB, 0x01AE, 0x01A4, 0x81A1,
 357:../Src/xl_320.c ****     0x01E0, 0x81E5, 0x81EF, 0x01EA, 0x81FB, 0x01FE, 0x01F4, 0x81F1,
 358:../Src/xl_320.c ****     0x81D3, 0x01D6, 0x01DC, 0x81D9, 0x01C8, 0x81CD, 0x81C7, 0x01C2,
 359:../Src/xl_320.c ****     0x0140, 0x8145, 0x814F, 0x014A, 0x815B, 0x015E, 0x0154, 0x8151,
 360:../Src/xl_320.c ****     0x8173, 0x0176, 0x017C, 0x8179, 0x0168, 0x816D, 0x8167, 0x0162,
 361:../Src/xl_320.c ****     0x8123, 0x0126, 0x012C, 0x8129, 0x0138, 0x813D, 0x8137, 0x0132,
 362:../Src/xl_320.c ****     0x0110, 0x8115, 0x811F, 0x011A, 0x810B, 0x010E, 0x0104, 0x8101,
 363:../Src/xl_320.c ****     0x8303, 0x0306, 0x030C, 0x8309, 0x0318, 0x831D, 0x8317, 0x0312,
 364:../Src/xl_320.c ****     0x0330, 0x8335, 0x833F, 0x033A, 0x832B, 0x032E, 0x0324, 0x8321,
 365:../Src/xl_320.c ****     0x0360, 0x8365, 0x836F, 0x036A, 0x837B, 0x037E, 0x0374, 0x8371,
 366:../Src/xl_320.c ****     0x8353, 0x0356, 0x035C, 0x8359, 0x0348, 0x834D, 0x8347, 0x0342,
 367:../Src/xl_320.c ****     0x03C0, 0x83C5, 0x83CF, 0x03CA, 0x83DB, 0x03DE, 0x03D4, 0x83D1,
 368:../Src/xl_320.c ****     0x83F3, 0x03F6, 0x03FC, 0x83F9, 0x03E8, 0x83ED, 0x83E7, 0x03E2,
 369:../Src/xl_320.c ****     0x83A3, 0x03A6, 0x03AC, 0x83A9, 0x03B8, 0x83BD, 0x83B7, 0x03B2,
 370:../Src/xl_320.c ****     0x0390, 0x8395, 0x839F, 0x039A, 0x838B, 0x038E, 0x0384, 0x8381,
 371:../Src/xl_320.c ****     0x0280, 0x8285, 0x828F, 0x028A, 0x829B, 0x029E, 0x0294, 0x8291,
 372:../Src/xl_320.c ****     0x82B3, 0x02B6, 0x02BC, 0x82B9, 0x02A8, 0x82AD, 0x82A7, 0x02A2,
 373:../Src/xl_320.c ****     0x82E3, 0x02E6, 0x02EC, 0x82E9, 0x02F8, 0x82FD, 0x82F7, 0x02F2,
 374:../Src/xl_320.c ****     0x02D0, 0x82D5, 0x82DF, 0x02DA, 0x82CB, 0x02CE, 0x02C4, 0x82C1,
 375:../Src/xl_320.c ****     0x8243, 0x0246, 0x024C, 0x8249, 0x0258, 0x825D, 0x8257, 0x0252,
 376:../Src/xl_320.c ****     0x0270, 0x8275, 0x827F, 0x027A, 0x826B, 0x026E, 0x0264, 0x8261,
 377:../Src/xl_320.c ****     0x0220, 0x8225, 0x822F, 0x022A, 0x823B, 0x023E, 0x0234, 0x8231,
 378:../Src/xl_320.c ****     0x8213, 0x0216, 0x021C, 0x8219, 0x0208, 0x820D, 0x8207, 0x0202};
 379:../Src/xl_320.c **** 
 380:../Src/xl_320.c ****   for(j = 0; j < data_blk_size; j++){
 417              		.loc 1 380 0
 418 0018 0023     		movs	r3, #0
 419 001a 09E0     		b	.L41
 420              	.LVL16:
 421              	.L42:
 381:../Src/xl_320.c ****       i = ((uint16_t)(crc_accum >> 8) ^ data_blk_ptr[j]) & 0xFF;
 422              		.loc 1 381 0 discriminator 3
 423 001c F25C     		ldrb	r2, [r6, r3]	@ zero_extendqisi2
 424 001e 82EA1422 		eor	r2, r2, r4, lsr #8
 425              	.LVL17:
 382:../Src/xl_320.c ****       crc_accum = (crc_accum << 8) ^ crc_table[i];
 426              		.loc 1 382 0 discriminator 3
 427 0022 3DF81220 		ldrh	r2, [sp, r2, lsl #1]
 428              	.LVL18:
 429 0026 82EA0424 		eor	r4, r2, r4, lsl #8
 430              	.LVL19:
 431 002a A4B2     		uxth	r4, r4
 432              	.LVL20:
 380:../Src/xl_320.c ****       i = ((uint16_t)(crc_accum >> 8) ^ data_blk_ptr[j]) & 0xFF;
 433              		.loc 1 380 0 discriminator 3
 434 002c 0133     		adds	r3, r3, #1
ARM GAS  /tmp/ccsfp71n.s 			page 15


 435              	.LVL21:
 436 002e 9BB2     		uxth	r3, r3
 437              	.LVL22:
 438              	.L41:
 380:../Src/xl_320.c ****       i = ((uint16_t)(crc_accum >> 8) ^ data_blk_ptr[j]) & 0xFF;
 439              		.loc 1 380 0 is_stmt 0 discriminator 1
 440 0030 AB42     		cmp	r3, r5
 441 0032 F3D3     		bcc	.L42
 383:../Src/xl_320.c ****   }
 384:../Src/xl_320.c **** 
 385:../Src/xl_320.c ****   return crc_accum;
 386:../Src/xl_320.c **** }
 442              		.loc 1 386 0 is_stmt 1
 443 0034 2046     		mov	r0, r4
 444 0036 0DF5007D 		add	sp, sp, #512
 445              	.LCFI2:
 446              		.cfi_def_cfa_offset 16
 447              		@ sp needed
 448 003a 70BD     		pop	{r4, r5, r6, pc}
 449              	.LVL23:
 450              	.L45:
 451              		.align	2
 452              	.L44:
 453 003c 00000000 		.word	.LANCHOR0
 454              		.cfi_endproc
 455              	.LFE13:
 457              		.section	.text.XL_Extract_Status_Packet,"ax",%progbits
 458              		.align	2
 459              		.global	XL_Extract_Status_Packet
 460              		.thumb
 461              		.thumb_func
 463              	XL_Extract_Status_Packet:
 464              	.LFB9:
 173:../Src/xl_320.c ****   //La taille est supposée vérifiée dans XL_Receive.
 465              		.loc 1 173 0
 466              		.cfi_startproc
 467              		@ args = 0, pretend = 0, frame = 0
 468              		@ frame_needed = 0, uses_anonymous_args = 0
 469              	.LVL24:
 470 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 471              	.LCFI3:
 472              		.cfi_def_cfa_offset 24
 473              		.cfi_offset 3, -24
 474              		.cfi_offset 4, -20
 475              		.cfi_offset 5, -16
 476              		.cfi_offset 6, -12
 477              		.cfi_offset 7, -8
 478              		.cfi_offset 14, -4
 479 0002 0546     		mov	r5, r0
 480 0004 0C46     		mov	r4, r1
 176:../Src/xl_320.c ****   uint16_t new_crc = XL_Update_CRC(0, frame, length-2);
 481              		.loc 1 176 0
 482 0006 8B18     		adds	r3, r1, r2
 483 0008 13F8017C 		ldrb	r7, [r3, #-1]	@ zero_extendqisi2
 484 000c 023A     		subs	r2, r2, #2
 485              	.LVL25:
 486 000e 8E18     		adds	r6, r1, r2
ARM GAS  /tmp/ccsfp71n.s 			page 16


 487 0010 8B5C     		ldrb	r3, [r1, r2]	@ zero_extendqisi2
 488 0012 43EA0727 		orr	r7, r3, r7, lsl #8
 489              	.LVL26:
 177:../Src/xl_320.c ****   if(new_crc != old_crc){
 490              		.loc 1 177 0
 491 0016 0020     		movs	r0, #0
 492              	.LVL27:
 493 0018 92B2     		uxth	r2, r2
 494 001a FFF7FEFF 		bl	XL_Update_CRC
 495              	.LVL28:
 178:../Src/xl_320.c ****     err = XL_ERR_LINK | XL_ERR_BAD_FRAME;
 496              		.loc 1 178 0
 497 001e B842     		cmp	r0, r7
 498 0020 05D0     		beq	.L47
 179:../Src/xl_320.c ****     return 1;
 499              		.loc 1 179 0
 500 0022 4FF48072 		mov	r2, #256
 501 0026 194B     		ldr	r3, .L55
 502 0028 1A80     		strh	r2, [r3]	@ movhi
 180:../Src/xl_320.c ****   }
 503              		.loc 1 180 0
 504 002a 0120     		movs	r0, #1
 505              	.LVL29:
 506 002c F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 507              	.LVL30:
 508              	.L47:
 183:../Src/xl_320.c ****   packet->err = frame[8];
 509              		.loc 1 183 0
 510 002e 2379     		ldrb	r3, [r4, #4]	@ zero_extendqisi2
 511 0030 2B70     		strb	r3, [r5]
 184:../Src/xl_320.c **** 
 512              		.loc 1 184 0
 513 0032 237A     		ldrb	r3, [r4, #8]	@ zero_extendqisi2
 514 0034 6B70     		strb	r3, [r5, #1]
 187:../Src/xl_320.c ****   uint8_t *end_stuffing = frame+(length-2);
 515              		.loc 1 187 0
 516 0036 E71D     		adds	r7, r4, #7
 517              	.LVL31:
 189:../Src/xl_320.c **** 
 518              		.loc 1 189 0
 519 0038 04F10902 		add	r2, r4, #9
 520              	.LVL32:
 191:../Src/xl_320.c ****   while(p_frame != end_stuffing){
 521              		.loc 1 191 0
 522 003c 0023     		movs	r3, #0
 523 003e AB70     		strb	r3, [r5, #2]
 192:../Src/xl_320.c ****     packet->params[packet->nb_params++] = *(p_frame++);
 524              		.loc 1 192 0
 525 0040 20E0     		b	.L49
 526              	.LVL33:
 527              	.L53:
 193:../Src/xl_320.c ****     if(p_frame - start_stuffing == 3){
 528              		.loc 1 193 0
 529 0042 AB78     		ldrb	r3, [r5, #2]	@ zero_extendqisi2
 530 0044 591C     		adds	r1, r3, #1
 531 0046 A970     		strb	r1, [r5, #2]
 532 0048 511C     		adds	r1, r2, #1
ARM GAS  /tmp/ccsfp71n.s 			page 17


 533              	.LVL34:
 534 004a 1078     		ldrb	r0, [r2]	@ zero_extendqisi2
 535 004c 2B44     		add	r3, r3, r5
 536 004e D870     		strb	r0, [r3, #3]
 194:../Src/xl_320.c ****       if(start_stuffing[0] == header[0] && start_stuffing[1] == header[1] && start_stuffing[2] == h
 537              		.loc 1 194 0
 538 0050 CB1B     		subs	r3, r1, r7
 539 0052 032B     		cmp	r3, #3
 540 0054 15D1     		bne	.L50
 195:../Src/xl_320.c **** 	if(*p_frame != stuffing_byte){
 541              		.loc 1 195 0
 542 0056 3B78     		ldrb	r3, [r7]	@ zero_extendqisi2
 543 0058 FF2B     		cmp	r3, #255
 544 005a 11D1     		bne	.L51
 195:../Src/xl_320.c **** 	if(*p_frame != stuffing_byte){
 545              		.loc 1 195 0 is_stmt 0 discriminator 1
 546 005c 7B78     		ldrb	r3, [r7, #1]	@ zero_extendqisi2
 547 005e FF2B     		cmp	r3, #255
 548 0060 0ED1     		bne	.L51
 195:../Src/xl_320.c **** 	if(*p_frame != stuffing_byte){
 549              		.loc 1 195 0 discriminator 2
 550 0062 BB78     		ldrb	r3, [r7, #2]	@ zero_extendqisi2
 551 0064 FD2B     		cmp	r3, #253
 552 0066 0BD1     		bne	.L51
 196:../Src/xl_320.c **** 	  err = XL_ERR_LINK | XL_ERR_BAD_FRAME;
 553              		.loc 1 196 0 is_stmt 1
 554 0068 5378     		ldrb	r3, [r2, #1]	@ zero_extendqisi2
 555 006a FD2B     		cmp	r3, #253
 556 006c 05D0     		beq	.L52
 197:../Src/xl_320.c **** 	  return 1;
 557              		.loc 1 197 0
 558 006e 4FF48072 		mov	r2, #256
 559 0072 064B     		ldr	r3, .L55
 560 0074 1A80     		strh	r2, [r3]	@ movhi
 198:../Src/xl_320.c **** 	}
 561              		.loc 1 198 0
 562 0076 0120     		movs	r0, #1
 563 0078 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 564              	.LVL35:
 565              	.L52:
 200:../Src/xl_320.c **** 	start_stuffing = p_frame;
 566              		.loc 1 200 0
 567 007a 971C     		adds	r7, r2, #2
 568              	.LVL36:
 569 007c 3946     		mov	r1, r7
 201:../Src/xl_320.c ****       }
 570              		.loc 1 201 0
 571 007e 00E0     		b	.L50
 572              	.LVL37:
 573              	.L51:
 204:../Src/xl_320.c ****       }
 574              		.loc 1 204 0
 575 0080 0137     		adds	r7, r7, #1
 576              	.LVL38:
 577              	.L50:
 200:../Src/xl_320.c **** 	start_stuffing = p_frame;
 578              		.loc 1 200 0
ARM GAS  /tmp/ccsfp71n.s 			page 18


 579 0082 0A46     		mov	r2, r1
 580              	.LVL39:
 581              	.L49:
 192:../Src/xl_320.c ****     packet->params[packet->nb_params++] = *(p_frame++);
 582              		.loc 1 192 0
 583 0084 B242     		cmp	r2, r6
 584 0086 DCD1     		bne	.L53
 209:../Src/xl_320.c **** }
 585              		.loc 1 209 0
 586 0088 0020     		movs	r0, #0
 210:../Src/xl_320.c **** 
 587              		.loc 1 210 0
 588 008a F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 589              	.LVL40:
 590              	.L56:
 591              		.align	2
 592              	.L55:
 593 008c 00000000 		.word	.LANCHOR1
 594              		.cfi_endproc
 595              	.LFE9:
 597              		.section	.text.XL_Receive,"ax",%progbits
 598              		.align	2
 599              		.global	XL_Receive
 600              		.thumb
 601              		.thumb_func
 603              	XL_Receive:
 604              	.LFB10:
 212:../Src/xl_320.c ****   //Evite un overflow
 605              		.loc 1 212 0
 606              		.cfi_startproc
 607              		@ args = 0, pretend = 0, frame = 0
 608              		@ frame_needed = 0, uses_anonymous_args = 0
 609              	.LVL41:
 610 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 611              	.LCFI4:
 612              		.cfi_def_cfa_offset 24
 613              		.cfi_offset 3, -24
 614              		.cfi_offset 4, -20
 615              		.cfi_offset 5, -16
 616              		.cfi_offset 6, -12
 617              		.cfi_offset 7, -8
 618              		.cfi_offset 14, -4
 214:../Src/xl_320.c ****     err = XL_ERR_INTERNAL | XL_ERR_BUFFER_OVERFLOW;
 619              		.loc 1 214 0
 620 0002 2029     		cmp	r1, #32
 621 0004 03D9     		bls	.L58
 215:../Src/xl_320.c ****     return 1;
 622              		.loc 1 215 0
 623 0006 0120     		movs	r0, #1
 624              	.LVL42:
 625 0008 224B     		ldr	r3, .L65
 626 000a 1880     		strh	r0, [r3]	@ movhi
 216:../Src/xl_320.c ****   }
 627              		.loc 1 216 0
 628 000c F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 629              	.LVL43:
 630              	.L58:
ARM GAS  /tmp/ccsfp71n.s 			page 19


 631 000e 1746     		mov	r7, r2
 632 0010 0D46     		mov	r5, r1
 633 0012 0446     		mov	r4, r0
 220:../Src/xl_320.c ****   
 634              		.loc 1 220 0
 635 0014 8368     		ldr	r3, [r0, #8]
 636 0016 0120     		movs	r0, #1
 637              	.LVL44:
 638 0018 9847     		blx	r3
 639              	.LVL45:
 222:../Src/xl_320.c ****   interface->fsm.remaining_bytes = 0;
 640              		.loc 1 222 0
 641 001a 1F4B     		ldr	r3, .L65+4
 642 001c 2361     		str	r3, [r4, #16]
 223:../Src/xl_320.c ****   interface->fsm.buffer = interface->buffer;
 643              		.loc 1 223 0
 644 001e 0023     		movs	r3, #0
 645 0020 A382     		strh	r3, [r4, #20]	@ movhi
 224:../Src/xl_320.c ****   interface->fsm.p_buffer = interface->buffer;
 646              		.loc 1 224 0
 647 0022 04F12406 		add	r6, r4, #36
 648 0026 A661     		str	r6, [r4, #24]
 225:../Src/xl_320.c ****   interface->fsm.done = 0;
 649              		.loc 1 225 0
 650 0028 E661     		str	r6, [r4, #28]
 226:../Src/xl_320.c **** 
 651              		.loc 1 226 0
 652 002a 84F82030 		strb	r3, [r4, #32]
 229:../Src/xl_320.c ****     err = XL_ERR_LINK | XL_ERR_TIMEOUT;
 653              		.loc 1 229 0
 654 002e 6368     		ldr	r3, [r4, #4]
 655 0030 3046     		mov	r0, r6
 656 0032 2946     		mov	r1, r5
 657 0034 3A46     		mov	r2, r7
 658 0036 9847     		blx	r3
 659              	.LVL46:
 660 0038 28B1     		cbz	r0, .L60
 230:../Src/xl_320.c ****     return 1;
 661              		.loc 1 230 0
 662 003a 40F20112 		movw	r2, #257
 663 003e 154B     		ldr	r3, .L65
 664 0040 1A80     		strh	r2, [r3]	@ movhi
 231:../Src/xl_320.c ****   }
 665              		.loc 1 231 0
 666 0042 0120     		movs	r0, #1
 667 0044 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 668              	.LVL47:
 669              	.L60:
 236:../Src/xl_320.c **** 
 670              		.loc 1 236 0 discriminator 2
 671 0046 2046     		mov	r0, r4
 672 0048 50F8103F 		ldr	r3, [r0, #16]!
 673 004c 9847     		blx	r3
 674              	.LVL48:
 244:../Src/xl_320.c **** 
 675              		.loc 1 244 0 discriminator 2
 676 004e E369     		ldr	r3, [r4, #28]
ARM GAS  /tmp/ccsfp71n.s 			page 20


 677 0050 A269     		ldr	r2, [r4, #24]
 678 0052 9342     		cmp	r3, r2
 679 0054 03D0     		beq	.L61
 244:../Src/xl_320.c **** 
 680              		.loc 1 244 0 is_stmt 0 discriminator 1
 681 0056 94F82010 		ldrb	r1, [r4, #32]	@ zero_extendqisi2
 682 005a 0129     		cmp	r1, #1
 683 005c F3D1     		bne	.L60
 684              	.L61:
 247:../Src/xl_320.c ****     err = XL_ERR_LINK | XL_ERR_BAD_FRAME;
 685              		.loc 1 247 0 is_stmt 1
 686 005e 94F82010 		ldrb	r1, [r4, #32]	@ zero_extendqisi2
 687 0062 29B9     		cbnz	r1, .L62
 248:../Src/xl_320.c ****     return 1;
 688              		.loc 1 248 0
 689 0064 4FF48072 		mov	r2, #256
 690 0068 0A4B     		ldr	r3, .L65
 691 006a 1A80     		strh	r2, [r3]	@ movhi
 249:../Src/xl_320.c ****   }
 692              		.loc 1 249 0
 693 006c 0120     		movs	r0, #1
 694 006e F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 695              	.LVL49:
 696              	.L62:
 253:../Src/xl_320.c ****   if(r_packet_size != packet_size){
 697              		.loc 1 253 0
 698 0070 9B1A     		subs	r3, r3, r2
 699 0072 9BB2     		uxth	r3, r3
 700              	.LVL50:
 254:../Src/xl_320.c ****     err = XL_ERR_LINK | XL_ERR_BAD_FRAME;
 701              		.loc 1 254 0
 702 0074 AB42     		cmp	r3, r5
 703 0076 05D0     		beq	.L63
 255:../Src/xl_320.c ****     return 1;
 704              		.loc 1 255 0
 705 0078 4FF48072 		mov	r2, #256
 706 007c 054B     		ldr	r3, .L65
 707              	.LVL51:
 708 007e 1A80     		strh	r2, [r3]	@ movhi
 256:../Src/xl_320.c ****   }
 709              		.loc 1 256 0
 710 0080 0120     		movs	r0, #1
 711 0082 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 712              	.LVL52:
 713              	.L63:
 259:../Src/xl_320.c **** }
 714              		.loc 1 259 0
 715 0084 04F14400 		add	r0, r4, #68
 716 0088 3146     		mov	r1, r6
 717 008a 2A46     		mov	r2, r5
 718 008c FFF7FEFF 		bl	XL_Extract_Status_Packet
 719              	.LVL53:
 260:../Src/xl_320.c **** 
 720              		.loc 1 260 0
 721 0090 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 722              	.LVL54:
 723              	.L66:
ARM GAS  /tmp/ccsfp71n.s 			page 21


 724 0092 00BF     		.align	2
 725              	.L65:
 726 0094 00000000 		.word	.LANCHOR1
 727 0098 00000000 		.word	XL_FSM_HEADER_0
 728              		.cfi_endproc
 729              	.LFE10:
 731              		.section	.text.XL_Build_Frame,"ax",%progbits
 732              		.align	2
 733              		.global	XL_Build_Frame
 734              		.thumb
 735              		.thumb_func
 737              	XL_Build_Frame:
 738              	.LFB11:
 265:../Src/xl_320.c ****   //Vérification des arguments
 739              		.loc 1 265 0
 740              		.cfi_startproc
 741              		@ args = 0, pretend = 0, frame = 0
 742              		@ frame_needed = 0, uses_anonymous_args = 0
 743              	.LVL55:
 267:../Src/xl_320.c ****     err = XL_ERR_INTERNAL | XL_ERR_ILLEGAL_ARGUMENTS;
 744              		.loc 1 267 0
 745 0000 28B1     		cbz	r0, .L68
 746 0002 0246     		mov	r2, r0
 267:../Src/xl_320.c ****     err = XL_ERR_INTERNAL | XL_ERR_ILLEGAL_ARGUMENTS;
 747              		.loc 1 267 0 is_stmt 0 discriminator 1
 748 0004 4368     		ldr	r3, [r0, #4]
 749 0006 0BB9     		cbnz	r3, .L69
 267:../Src/xl_320.c ****     err = XL_ERR_INTERNAL | XL_ERR_ILLEGAL_ARGUMENTS;
 750              		.loc 1 267 0 discriminator 2
 751 0008 8378     		ldrb	r3, [r0, #2]	@ zero_extendqisi2
 752 000a 03B9     		cbnz	r3, .L68
 753              	.L69:
 267:../Src/xl_320.c ****     err = XL_ERR_INTERNAL | XL_ERR_ILLEGAL_ARGUMENTS;
 754              		.loc 1 267 0 discriminator 4
 755 000c 19B9     		cbnz	r1, .L70
 756              	.L68:
 268:../Src/xl_320.c ****     return 0;
 757              		.loc 1 268 0 is_stmt 1
 758 000e 0020     		movs	r0, #0
 759              	.LVL56:
 760 0010 2C4B     		ldr	r3, .L81
 761 0012 1880     		strh	r0, [r3]	@ movhi
 326:../Src/xl_320.c **** 
 762              		.loc 1 326 0
 763 0014 7047     		bx	lr
 764              	.LVL57:
 765              	.L70:
 272:../Src/xl_320.c ****     err = XL_ERR_INTERNAL | XL_ERR_ILLEGAL_ARGUMENTS;
 766              		.loc 1 272 0
 767 0016 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 768 0018 FD2B     		cmp	r3, #253
 769 001a 01D0     		beq	.L72
 272:../Src/xl_320.c ****     err = XL_ERR_INTERNAL | XL_ERR_ILLEGAL_ARGUMENTS;
 770              		.loc 1 272 0 is_stmt 0 discriminator 1
 771 001c FF2B     		cmp	r3, #255
 772 001e 03D1     		bne	.L73
 773              	.L72:
ARM GAS  /tmp/ccsfp71n.s 			page 22


 273:../Src/xl_320.c ****     return 0;
 774              		.loc 1 273 0 is_stmt 1
 775 0020 0020     		movs	r0, #0
 776              	.LVL58:
 777 0022 284B     		ldr	r3, .L81
 778 0024 1880     		strh	r0, [r3]	@ movhi
 274:../Src/xl_320.c ****   }
 779              		.loc 1 274 0
 780 0026 7047     		bx	lr
 781              	.LVL59:
 782              	.L73:
 265:../Src/xl_320.c ****   //Vérification des arguments
 783              		.loc 1 265 0
 784 0028 70B5     		push	{r4, r5, r6, lr}
 785              	.LCFI5:
 786              		.cfi_def_cfa_offset 16
 787              		.cfi_offset 4, -16
 788              		.cfi_offset 5, -12
 789              		.cfi_offset 6, -8
 790              		.cfi_offset 14, -4
 277:../Src/xl_320.c ****     err = XL_ERR_INTERNAL | XL_ERR_BUFFER_OVERFLOW;
 791              		.loc 1 277 0
 792 002a 9378     		ldrb	r3, [r2, #2]	@ zero_extendqisi2
 793 002c 03F10A00 		add	r0, r3, #10
 794              	.LVL60:
 795 0030 254C     		ldr	r4, .L81+4
 796 0032 A4FB0343 		umull	r4, r3, r4, r3
 797 0036 00EB5303 		add	r3, r0, r3, lsr #1
 798 003a 202B     		cmp	r3, #32
 799 003c 04DD     		ble	.L74
 278:../Src/xl_320.c ****     return 0;
 800              		.loc 1 278 0
 801 003e 0122     		movs	r2, #1
 802              	.LVL61:
 803 0040 204B     		ldr	r3, .L81
 804 0042 1A80     		strh	r2, [r3]	@ movhi
 279:../Src/xl_320.c ****   }
 805              		.loc 1 279 0
 806 0044 0020     		movs	r0, #0
 807 0046 70BD     		pop	{r4, r5, r6, pc}
 808              	.LVL62:
 809              	.L74:
 284:../Src/xl_320.c ****   *(p_buffer++) = header[1];
 810              		.loc 1 284 0
 811 0048 FF23     		movs	r3, #255
 812 004a 0B70     		strb	r3, [r1]
 813              	.LVL63:
 285:../Src/xl_320.c ****   *(p_buffer++) = header[2];
 814              		.loc 1 285 0
 815 004c 4B70     		strb	r3, [r1, #1]
 816              	.LVL64:
 286:../Src/xl_320.c ****   *(p_buffer++) = header[3];
 817              		.loc 1 286 0
 818 004e FD23     		movs	r3, #253
 819 0050 8B70     		strb	r3, [r1, #2]
 820              	.LVL65:
 287:../Src/xl_320.c **** 
ARM GAS  /tmp/ccsfp71n.s 			page 23


 821              		.loc 1 287 0
 822 0052 0023     		movs	r3, #0
 823 0054 CB70     		strb	r3, [r1, #3]
 824              	.LVL66:
 290:../Src/xl_320.c **** 
 825              		.loc 1 290 0
 826 0056 1078     		ldrb	r0, [r2]	@ zero_extendqisi2
 827 0058 0871     		strb	r0, [r1, #4]
 293:../Src/xl_320.c **** 
 828              		.loc 1 293 0
 829 005a CD1D     		adds	r5, r1, #7
 830              	.LVL67:
 298:../Src/xl_320.c **** 
 831              		.loc 1 298 0
 832 005c 01F10804 		add	r4, r1, #8
 833              	.LVL68:
 834 0060 5078     		ldrb	r0, [r2, #1]	@ zero_extendqisi2
 835 0062 C871     		strb	r0, [r1, #7]
 836              	.LVL69:
 302:../Src/xl_320.c ****     *(p_buffer++) = packet->params[i];
 837              		.loc 1 302 0
 838 0064 17E0     		b	.L75
 839              	.LVL70:
 840              	.L78:
 303:../Src/xl_320.c ****     if(p_buffer - start_stuffing == 3){
 841              		.loc 1 303 0
 842 0066 601C     		adds	r0, r4, #1
 843              	.LVL71:
 844 0068 5668     		ldr	r6, [r2, #4]
 845 006a F65C     		ldrb	r6, [r6, r3]	@ zero_extendqisi2
 846 006c 2670     		strb	r6, [r4]
 304:../Src/xl_320.c ****       if(start_stuffing[0] == header[0] && start_stuffing[1] == header[1] && start_stuffing[2] == h
 847              		.loc 1 304 0
 848 006e 461B     		subs	r6, r0, r5
 849 0070 032E     		cmp	r6, #3
 850 0072 0ED1     		bne	.L76
 305:../Src/xl_320.c **** 	*(p_buffer++) = stuffing_byte;
 851              		.loc 1 305 0
 852 0074 2E78     		ldrb	r6, [r5]	@ zero_extendqisi2
 853 0076 FF2E     		cmp	r6, #255
 854 0078 0AD1     		bne	.L77
 305:../Src/xl_320.c **** 	*(p_buffer++) = stuffing_byte;
 855              		.loc 1 305 0 is_stmt 0 discriminator 1
 856 007a 6E78     		ldrb	r6, [r5, #1]	@ zero_extendqisi2
 857 007c FF2E     		cmp	r6, #255
 858 007e 07D1     		bne	.L77
 305:../Src/xl_320.c **** 	*(p_buffer++) = stuffing_byte;
 859              		.loc 1 305 0 discriminator 2
 860 0080 AE78     		ldrb	r6, [r5, #2]	@ zero_extendqisi2
 861 0082 FD2E     		cmp	r6, #253
 862 0084 04D1     		bne	.L77
 306:../Src/xl_320.c **** 	start_stuffing = p_buffer;
 863              		.loc 1 306 0 is_stmt 1
 864 0086 A01C     		adds	r0, r4, #2
 865              	.LVL72:
 866 0088 FD25     		movs	r5, #253
 867              	.LVL73:
ARM GAS  /tmp/ccsfp71n.s 			page 24


 868 008a 6570     		strb	r5, [r4, #1]
 869              	.LVL74:
 307:../Src/xl_320.c ****       }else{
 870              		.loc 1 307 0
 871 008c 0546     		mov	r5, r0
 872 008e 00E0     		b	.L76
 873              	.LVL75:
 874              	.L77:
 309:../Src/xl_320.c ****       }
 875              		.loc 1 309 0
 876 0090 0135     		adds	r5, r5, #1
 877              	.LVL76:
 878              	.L76:
 302:../Src/xl_320.c ****     *(p_buffer++) = packet->params[i];
 879              		.loc 1 302 0 discriminator 2
 880 0092 0133     		adds	r3, r3, #1
 881              	.LVL77:
 882 0094 0446     		mov	r4, r0
 883              	.LVL78:
 884              	.L75:
 302:../Src/xl_320.c ****     *(p_buffer++) = packet->params[i];
 885              		.loc 1 302 0 is_stmt 0 discriminator 1
 886 0096 9078     		ldrb	r0, [r2, #2]	@ zero_extendqisi2
 887 0098 9842     		cmp	r0, r3
 888 009a E4DC     		bgt	.L78
 889 009c 0D46     		mov	r5, r1
 890              	.LVL79:
 316:../Src/xl_320.c ****   buffer[5] = packet_length & 0x00FF;
 891              		.loc 1 316 0 is_stmt 1
 892 009e 621A     		subs	r2, r4, r1
 893              	.LVL80:
 894 00a0 92B2     		uxth	r2, r2
 895 00a2 531F     		subs	r3, r2, #5
 896              	.LVL81:
 897 00a4 9BB2     		uxth	r3, r3
 898              	.LVL82:
 317:../Src/xl_320.c ****   buffer[6] = packet_length >> 8;
 899              		.loc 1 317 0
 900 00a6 4B71     		strb	r3, [r1, #5]
 318:../Src/xl_320.c **** 
 901              		.loc 1 318 0
 902 00a8 1B0A     		lsrs	r3, r3, #8
 903              	.LVL83:
 904 00aa 8B71     		strb	r3, [r1, #6]
 321:../Src/xl_320.c ****   *(p_buffer++) = crc & 0x00FF;
 905              		.loc 1 321 0
 906 00ac 0020     		movs	r0, #0
 907 00ae FFF7FEFF 		bl	XL_Update_CRC
 908              	.LVL84:
 322:../Src/xl_320.c ****   *(p_buffer++) = crc >> 8;
 909              		.loc 1 322 0
 910 00b2 2146     		mov	r1, r4
 911 00b4 01F8020B 		strb	r0, [r1], #2
 912              	.LVL85:
 323:../Src/xl_320.c ****   
 913              		.loc 1 323 0
 914 00b8 000A     		lsrs	r0, r0, #8
ARM GAS  /tmp/ccsfp71n.s 			page 25


 915              	.LVL86:
 916 00ba 6070     		strb	r0, [r4, #1]
 325:../Src/xl_320.c **** }
 917              		.loc 1 325 0
 918 00bc 481B     		subs	r0, r1, r5
 919 00be C0B2     		uxtb	r0, r0
 326:../Src/xl_320.c **** 
 920              		.loc 1 326 0
 921 00c0 70BD     		pop	{r4, r5, r6, pc}
 922              	.LVL87:
 923              	.L82:
 924 00c2 00BF     		.align	2
 925              	.L81:
 926 00c4 00000000 		.word	.LANCHOR1
 927 00c8 ABAAAAAA 		.word	-1431655765
 928              		.cfi_endproc
 929              	.LFE11:
 931              		.section	.text.XL_Send,"ax",%progbits
 932              		.align	2
 933              		.global	XL_Send
 934              		.thumb
 935              		.thumb_func
 937              	XL_Send:
 938              	.LFB12:
 328:../Src/xl_320.c ****   //Préparation de la trame
 939              		.loc 1 328 0
 940              		.cfi_startproc
 941              		@ args = 0, pretend = 0, frame = 0
 942              		@ frame_needed = 0, uses_anonymous_args = 0
 943              	.LVL88:
 944 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 945              	.LCFI6:
 946              		.cfi_def_cfa_offset 24
 947              		.cfi_offset 3, -24
 948              		.cfi_offset 4, -20
 949              		.cfi_offset 5, -16
 950              		.cfi_offset 6, -12
 951              		.cfi_offset 7, -8
 952              		.cfi_offset 14, -4
 953 0002 0446     		mov	r4, r0
 954 0004 1646     		mov	r6, r2
 330:../Src/xl_320.c ****   if(!length){
 955              		.loc 1 330 0
 956 0006 00F12405 		add	r5, r0, #36
 957 000a 0846     		mov	r0, r1
 958              	.LVL89:
 959 000c 2946     		mov	r1, r5
 960              	.LVL90:
 961 000e FFF7FEFF 		bl	XL_Build_Frame
 962              	.LVL91:
 331:../Src/xl_320.c ****     return 1;
 963              		.loc 1 331 0
 964 0012 78B1     		cbz	r0, .L85
 965 0014 0746     		mov	r7, r0
 336:../Src/xl_320.c ****   if(interface->send(interface->buffer, length, timeout) == 1){
 966              		.loc 1 336 0
 967 0016 A368     		ldr	r3, [r4, #8]
ARM GAS  /tmp/ccsfp71n.s 			page 26


 968 0018 0020     		movs	r0, #0
 969              	.LVL92:
 970 001a 9847     		blx	r3
 971              	.LVL93:
 337:../Src/xl_320.c ****     err = XL_ERR_LINK | XL_ERR_TIMEOUT;
 972              		.loc 1 337 0
 973 001c 2368     		ldr	r3, [r4]
 974 001e 2846     		mov	r0, r5
 975 0020 B9B2     		uxth	r1, r7
 976 0022 3246     		mov	r2, r6
 977 0024 9847     		blx	r3
 978              	.LVL94:
 979 0026 0128     		cmp	r0, #1
 980 0028 06D1     		bne	.L86
 338:../Src/xl_320.c ****     return 1;
 981              		.loc 1 338 0
 982 002a 40F20112 		movw	r2, #257
 983 002e 034B     		ldr	r3, .L88
 984 0030 1A80     		strh	r2, [r3]	@ movhi
 339:../Src/xl_320.c ****   }
 985              		.loc 1 339 0
 986 0032 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 987              	.LVL95:
 988              	.L85:
 332:../Src/xl_320.c ****   }
 989              		.loc 1 332 0
 990 0034 0120     		movs	r0, #1
 991              	.LVL96:
 992 0036 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 993              	.LVL97:
 994              	.L86:
 341:../Src/xl_320.c **** }
 995              		.loc 1 341 0
 996 0038 0020     		movs	r0, #0
 342:../Src/xl_320.c **** 
 997              		.loc 1 342 0
 998 003a F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 999              	.LVL98:
 1000              	.L89:
 1001              		.align	2
 1002              	.L88:
 1003 003c 00000000 		.word	.LANCHOR1
 1004              		.cfi_endproc
 1005              	.LFE12:
 1007              		.section	.text.XL_Get_Error,"ax",%progbits
 1008              		.align	2
 1009              		.global	XL_Get_Error
 1010              		.thumb
 1011              		.thumb_func
 1013              	XL_Get_Error:
 1014              	.LFB14:
 387:../Src/xl_320.c **** 
 388:../Src/xl_320.c **** //======================================
 389:../Src/xl_320.c **** //         GESTION DES ERREURS      
 390:../Src/xl_320.c **** //======================================
 391:../Src/xl_320.c **** uint16_t XL_Get_Error(){
 1015              		.loc 1 391 0
ARM GAS  /tmp/ccsfp71n.s 			page 27


 1016              		.cfi_startproc
 1017              		@ args = 0, pretend = 0, frame = 0
 1018              		@ frame_needed = 0, uses_anonymous_args = 0
 1019              		@ link register save eliminated.
 392:../Src/xl_320.c ****   return err;
 393:../Src/xl_320.c **** }
 1020              		.loc 1 393 0
 1021 0000 014B     		ldr	r3, .L91
 1022 0002 1888     		ldrh	r0, [r3]
 1023 0004 7047     		bx	lr
 1024              	.L92:
 1025 0006 00BF     		.align	2
 1026              	.L91:
 1027 0008 00000000 		.word	.LANCHOR1
 1028              		.cfi_endproc
 1029              	.LFE14:
 1031              		.section	.text.XL_Check_Status,"ax",%progbits
 1032              		.align	2
 1033              		.global	XL_Check_Status
 1034              		.thumb
 1035              		.thumb_func
 1037              	XL_Check_Status:
 1038              	.LFB15:
 394:../Src/xl_320.c **** 
 395:../Src/xl_320.c **** uint8_t XL_Check_Status(XL *servo){
 1039              		.loc 1 395 0
 1040              		.cfi_startproc
 1041              		@ args = 0, pretend = 0, frame = 0
 1042              		@ frame_needed = 0, uses_anonymous_args = 0
 1043              		@ link register save eliminated.
 1044              	.LVL99:
 396:../Src/xl_320.c ****   if(XL_STATUS_ERROR(servo->interface->status.err) != 0){
 1045              		.loc 1 396 0
 1046 0000 4368     		ldr	r3, [r0, #4]
 1047 0002 93F84500 		ldrb	r0, [r3, #69]	@ zero_extendqisi2
 1048              	.LVL100:
 1049 0006 10F03F00 		ands	r0, r0, #63
 1050 000a 04D0     		beq	.L94
 397:../Src/xl_320.c ****     err = XL_ERR_STATUS | XL_STATUS_ERROR(servo->interface->status.err);
 1051              		.loc 1 397 0
 1052 000c 40F40070 		orr	r0, r0, #512
 1053 0010 014B     		ldr	r3, .L95
 1054 0012 1880     		strh	r0, [r3]	@ movhi
 398:../Src/xl_320.c ****     return 1;
 1055              		.loc 1 398 0
 1056 0014 0120     		movs	r0, #1
 1057              	.L94:
 399:../Src/xl_320.c ****   }
 400:../Src/xl_320.c ****   return 0;
 401:../Src/xl_320.c **** }
 1058              		.loc 1 401 0
 1059 0016 7047     		bx	lr
 1060              	.L96:
 1061              		.align	2
 1062              	.L95:
 1063 0018 00000000 		.word	.LANCHOR1
 1064              		.cfi_endproc
ARM GAS  /tmp/ccsfp71n.s 			page 28


 1065              	.LFE15:
 1067              		.section	.text.XL_Ping,"ax",%progbits
 1068              		.align	2
 1069              		.global	XL_Ping
 1070              		.thumb
 1071              		.thumb_func
 1073              	XL_Ping:
 1074              	.LFB17:
 402:../Src/xl_320.c **** 
 403:../Src/xl_320.c **** uint8_t XL_Check_Alert(XL *servo){
 404:../Src/xl_320.c ****   if(XL_STATUS_ALERT(servo->interface->status.err) == 1){
 405:../Src/xl_320.c ****     uint16_t hw_error;
 406:../Src/xl_320.c ****     if(XL_Get_Hardware_Error(servo, &hw_error) == 1){
 407:../Src/xl_320.c ****       return 1;
 408:../Src/xl_320.c ****     }
 409:../Src/xl_320.c ****     err = XL_ERR_HARDWARE | hw_error;
 410:../Src/xl_320.c ****     return 1;
 411:../Src/xl_320.c ****   }
 412:../Src/xl_320.c ****   return 0;
 413:../Src/xl_320.c **** }
 414:../Src/xl_320.c **** 
 415:../Src/xl_320.c **** 
 416:../Src/xl_320.c **** //======================================
 417:../Src/xl_320.c **** //         JEU D'INSTRUCTIONS      
 418:../Src/xl_320.c **** //======================================
 419:../Src/xl_320.c **** uint8_t XL_Ping(XL *servo){
 1075              		.loc 1 419 0
 1076              		.cfi_startproc
 1077              		@ args = 0, pretend = 0, frame = 8
 1078              		@ frame_needed = 0, uses_anonymous_args = 0
 1079              	.LVL101:
 420:../Src/xl_320.c ****   if(servo == 0){
 1080              		.loc 1 420 0
 1081 0000 20B9     		cbnz	r0, .L98
 421:../Src/xl_320.c ****     err = XL_ERR_INTERNAL | XL_ERR_ILLEGAL_ARGUMENTS;
 1082              		.loc 1 421 0
 1083 0002 0022     		movs	r2, #0
 1084 0004 114B     		ldr	r3, .L101
 1085 0006 1A80     		strh	r2, [r3]	@ movhi
 422:../Src/xl_320.c ****     return 1;
 1086              		.loc 1 422 0
 1087 0008 0120     		movs	r0, #1
 1088              	.LVL102:
 423:../Src/xl_320.c ****   }
 424:../Src/xl_320.c ****   
 425:../Src/xl_320.c ****   XL_Instruction_Packet packet;
 426:../Src/xl_320.c ****   packet.id = servo->id;
 427:../Src/xl_320.c ****   packet.instruction = XL_PING;
 428:../Src/xl_320.c ****   packet.nb_params = 0;
 429:../Src/xl_320.c ****   packet.params = 0;
 430:../Src/xl_320.c **** 
 431:../Src/xl_320.c ****   //Envoi de l'instruction
 432:../Src/xl_320.c ****   if(XL_Send(servo->interface, &packet, XL_DEFAULT_TIMEOUT) == 1){
 433:../Src/xl_320.c ****     return 1;
 434:../Src/xl_320.c ****   }
 435:../Src/xl_320.c **** 
 436:../Src/xl_320.c ****   //Réception de la réponse
ARM GAS  /tmp/ccsfp71n.s 			page 29


 437:../Src/xl_320.c ****   if(XL_Receive(servo->interface, 14, XL_DEFAULT_TIMEOUT) == 1){
 438:../Src/xl_320.c ****     return 1;
 439:../Src/xl_320.c ****   }
 440:../Src/xl_320.c **** 
 441:../Src/xl_320.c ****   //Vérification de la réponse
 442:../Src/xl_320.c ****   return XL_Check_Status(servo);
 443:../Src/xl_320.c **** }
 1089              		.loc 1 443 0
 1090 000a 7047     		bx	lr
 1091              	.LVL103:
 1092              	.L98:
 419:../Src/xl_320.c ****   if(servo == 0){
 1093              		.loc 1 419 0
 1094 000c 10B5     		push	{r4, lr}
 1095              	.LCFI7:
 1096              		.cfi_def_cfa_offset 8
 1097              		.cfi_offset 4, -8
 1098              		.cfi_offset 14, -4
 1099 000e 82B0     		sub	sp, sp, #8
 1100              	.LCFI8:
 1101              		.cfi_def_cfa_offset 16
 1102 0010 0446     		mov	r4, r0
 426:../Src/xl_320.c ****   packet.instruction = XL_PING;
 1103              		.loc 1 426 0
 1104 0012 0378     		ldrb	r3, [r0]	@ zero_extendqisi2
 1105 0014 8DF80030 		strb	r3, [sp]
 427:../Src/xl_320.c ****   packet.nb_params = 0;
 1106              		.loc 1 427 0
 1107 0018 0122     		movs	r2, #1
 1108 001a 8DF80120 		strb	r2, [sp, #1]
 428:../Src/xl_320.c ****   packet.params = 0;
 1109              		.loc 1 428 0
 1110 001e 0023     		movs	r3, #0
 1111 0020 8DF80230 		strb	r3, [sp, #2]
 429:../Src/xl_320.c **** 
 1112              		.loc 1 429 0
 1113 0024 0193     		str	r3, [sp, #4]
 432:../Src/xl_320.c ****     return 1;
 1114              		.loc 1 432 0
 1115 0026 4068     		ldr	r0, [r0, #4]
 1116              	.LVL104:
 1117 0028 6946     		mov	r1, sp
 1118 002a FFF7FEFF 		bl	XL_Send
 1119              	.LVL105:
 1120 002e 0128     		cmp	r0, #1
 1121 0030 09D0     		beq	.L99
 437:../Src/xl_320.c ****     return 1;
 1122              		.loc 1 437 0
 1123 0032 6068     		ldr	r0, [r4, #4]
 1124 0034 0E21     		movs	r1, #14
 1125 0036 0122     		movs	r2, #1
 1126 0038 FFF7FEFF 		bl	XL_Receive
 1127              	.LVL106:
 1128 003c 0128     		cmp	r0, #1
 1129 003e 02D0     		beq	.L99
 442:../Src/xl_320.c **** }
 1130              		.loc 1 442 0
ARM GAS  /tmp/ccsfp71n.s 			page 30


 1131 0040 2046     		mov	r0, r4
 1132 0042 FFF7FEFF 		bl	XL_Check_Status
 1133              	.LVL107:
 1134              	.L99:
 1135              		.loc 1 443 0
 1136 0046 02B0     		add	sp, sp, #8
 1137              	.LCFI9:
 1138              		.cfi_def_cfa_offset 8
 1139              		@ sp needed
 1140 0048 10BD     		pop	{r4, pc}
 1141              	.LVL108:
 1142              	.L102:
 1143 004a 00BF     		.align	2
 1144              	.L101:
 1145 004c 00000000 		.word	.LANCHOR1
 1146              		.cfi_endproc
 1147              	.LFE17:
 1149              		.section	.text.XL_Discover,"ax",%progbits
 1150              		.align	2
 1151              		.global	XL_Discover
 1152              		.thumb
 1153              		.thumb_func
 1155              	XL_Discover:
 1156              	.LFB18:
 444:../Src/xl_320.c **** 
 445:../Src/xl_320.c **** uint8_t XL_Discover(XL_Interface *interface, XL *buffer_servos, uint8_t len_buffer, uint16_t *nb_se
 1157              		.loc 1 445 0
 1158              		.cfi_startproc
 1159              		@ args = 0, pretend = 0, frame = 8
 1160              		@ frame_needed = 0, uses_anonymous_args = 0
 1161              	.LVL109:
 1162 0000 70B5     		push	{r4, r5, r6, lr}
 1163              	.LCFI10:
 1164              		.cfi_def_cfa_offset 16
 1165              		.cfi_offset 4, -16
 1166              		.cfi_offset 5, -12
 1167              		.cfi_offset 6, -8
 1168              		.cfi_offset 14, -4
 1169 0002 82B0     		sub	sp, sp, #8
 1170              	.LCFI11:
 1171              		.cfi_def_cfa_offset 24
 1172 0004 0E46     		mov	r6, r1
 1173 0006 1546     		mov	r5, r2
 1174 0008 1C46     		mov	r4, r3
 446:../Src/xl_320.c ****   XL servo;
 447:../Src/xl_320.c ****   servo.interface = interface;
 1175              		.loc 1 447 0
 1176 000a 0190     		str	r0, [sp, #4]
 448:../Src/xl_320.c **** 
 449:../Src/xl_320.c ****   *nb_servos = 0;
 1177              		.loc 1 449 0
 1178 000c 0023     		movs	r3, #0
 1179              	.LVL110:
 1180 000e 2380     		strh	r3, [r4]	@ movhi
 450:../Src/xl_320.c ****   for(servo.id = 0x00; servo.id < 0xFD && (*nb_servos < len_buffer); servo.id++){
 1181              		.loc 1 450 0
 1182 0010 8DF80030 		strb	r3, [sp]
ARM GAS  /tmp/ccsfp71n.s 			page 31


 1183 0014 12E0     		b	.L104
 1184              	.LVL111:
 1185              	.L107:
 451:../Src/xl_320.c ****     if(XL_Ping(&servo) == 0){
 1186              		.loc 1 451 0
 1187 0016 6846     		mov	r0, sp
 1188 0018 FFF7FEFF 		bl	XL_Ping
 1189              	.LVL112:
 1190 001c 48B9     		cbnz	r0, .L105
 452:../Src/xl_320.c ****       buffer_servos[(*nb_servos)++] = servo;
 1191              		.loc 1 452 0
 1192 001e 2388     		ldrh	r3, [r4]
 1193 0020 5A1C     		adds	r2, r3, #1
 1194 0022 2280     		strh	r2, [r4]	@ movhi
 1195 0024 06EBC303 		add	r3, r6, r3, lsl #3
 1196 0028 02AA     		add	r2, sp, #8
 1197 002a 12E90300 		ldmdb	r2, {r0, r1}
 1198 002e 83E80300 		stmia	r3, {r0, r1}
 1199              	.L105:
 450:../Src/xl_320.c ****   for(servo.id = 0x00; servo.id < 0xFD && (*nb_servos < len_buffer); servo.id++){
 1200              		.loc 1 450 0 discriminator 2
 1201 0032 9DF80030 		ldrb	r3, [sp]	@ zero_extendqisi2
 1202 0036 0133     		adds	r3, r3, #1
 1203 0038 8DF80030 		strb	r3, [sp]
 1204              	.L104:
 450:../Src/xl_320.c ****   for(servo.id = 0x00; servo.id < 0xFD && (*nb_servos < len_buffer); servo.id++){
 1205              		.loc 1 450 0 is_stmt 0 discriminator 1
 1206 003c 9DF80030 		ldrb	r3, [sp]	@ zero_extendqisi2
 1207 0040 FC2B     		cmp	r3, #252
 1208 0042 02D8     		bhi	.L106
 450:../Src/xl_320.c ****   for(servo.id = 0x00; servo.id < 0xFD && (*nb_servos < len_buffer); servo.id++){
 1209              		.loc 1 450 0 discriminator 3
 1210 0044 2388     		ldrh	r3, [r4]
 1211 0046 AB42     		cmp	r3, r5
 1212 0048 E5D3     		bcc	.L107
 1213              	.L106:
 453:../Src/xl_320.c ****     }
 454:../Src/xl_320.c ****   }
 455:../Src/xl_320.c ****   
 456:../Src/xl_320.c ****   return (*nb_servos > 0)?0:1;
 1214              		.loc 1 456 0 is_stmt 1
 1215 004a 2088     		ldrh	r0, [r4]
 457:../Src/xl_320.c **** }
 1216              		.loc 1 457 0
 1217 004c B0FA80F0 		clz	r0, r0
 1218 0050 4009     		lsrs	r0, r0, #5
 1219 0052 02B0     		add	sp, sp, #8
 1220              	.LCFI12:
 1221              		.cfi_def_cfa_offset 16
 1222              		@ sp needed
 1223 0054 70BD     		pop	{r4, r5, r6, pc}
 1224              		.cfi_endproc
 1225              	.LFE18:
 1227 0056 00BF     		.section	.text.XL_Read,"ax",%progbits
 1228              		.align	2
 1229              		.global	XL_Read
 1230              		.thumb
ARM GAS  /tmp/ccsfp71n.s 			page 32


 1231              		.thumb_func
 1233              	XL_Read:
 1234              	.LFB20:
 458:../Src/xl_320.c **** 
 459:../Src/xl_320.c **** uint8_t XL_Say_Hello(XL *servo){
 460:../Src/xl_320.c ****   if(XL_Ping(servo) == 1){
 461:../Src/xl_320.c ****     return 1;
 462:../Src/xl_320.c ****   }
 463:../Src/xl_320.c **** 
 464:../Src/xl_320.c ****   const XL_LED_Color color = (servo->interface->status.err == 0x00)?XL_GREEN:XL_RED;
 465:../Src/xl_320.c ****   uint8_t i;
 466:../Src/xl_320.c ****   for(i = 0; i < servo->id; i++){
 467:../Src/xl_320.c ****     XL_Set_LED(servo, color, XL_NOW);
 468:../Src/xl_320.c ****     servo->interface->delay(500);
 469:../Src/xl_320.c ****     XL_Set_LED(servo, XL_LED_OFF, XL_NOW);
 470:../Src/xl_320.c ****     servo->interface->delay(500);
 471:../Src/xl_320.c ****   }
 472:../Src/xl_320.c **** 
 473:../Src/xl_320.c ****   return 0;
 474:../Src/xl_320.c **** }
 475:../Src/xl_320.c **** 
 476:../Src/xl_320.c **** uint8_t XL_Read(XL *servo, XL_Field field, uint16_t *data){
 1235              		.loc 1 476 0
 1236              		.cfi_startproc
 1237              		@ args = 0, pretend = 0, frame = 16
 1238              		@ frame_needed = 0, uses_anonymous_args = 0
 1239              	.LVL113:
 477:../Src/xl_320.c ****   if(field > XL_NB_FIELDS-1){
 1240              		.loc 1 477 0
 1241 0000 1E29     		cmp	r1, #30
 1242 0002 04D9     		bls	.L110
 478:../Src/xl_320.c ****     err = XL_ERR_INTERNAL | XL_ERR_ILLEGAL_ARGUMENTS;
 1243              		.loc 1 478 0
 1244 0004 0022     		movs	r2, #0
 1245              	.LVL114:
 1246 0006 224B     		ldr	r3, .L114
 1247 0008 1A80     		strh	r2, [r3]	@ movhi
 479:../Src/xl_320.c ****     return 1;
 1248              		.loc 1 479 0
 1249 000a 0120     		movs	r0, #1
 1250              	.LVL115:
 480:../Src/xl_320.c ****   }
 481:../Src/xl_320.c ****   
 482:../Src/xl_320.c ****   //Préparation de l'instruction READ
 483:../Src/xl_320.c ****   XL_Instruction_Packet packet;
 484:../Src/xl_320.c ****   packet.id = servo->id;
 485:../Src/xl_320.c ****   packet.instruction = XL_READ;
 486:../Src/xl_320.c ****   packet.nb_params = 4;
 487:../Src/xl_320.c ****   uint8_t params[4] = {field_addr[field], 0x00, field_length[field], 0x00};
 488:../Src/xl_320.c ****   packet.params = params;
 489:../Src/xl_320.c **** 
 490:../Src/xl_320.c ****   //Envoi de l'instruction
 491:../Src/xl_320.c ****   if(XL_Send(servo->interface, &packet, XL_DEFAULT_TIMEOUT) == 1){
 492:../Src/xl_320.c ****     return 1;
 493:../Src/xl_320.c ****   }
 494:../Src/xl_320.c ****   
 495:../Src/xl_320.c ****   //Réception de la réponse
ARM GAS  /tmp/ccsfp71n.s 			page 33


 496:../Src/xl_320.c ****   if(XL_Receive(servo->interface, 11+field_length[field], XL_DEFAULT_TIMEOUT) == 1){
 497:../Src/xl_320.c ****     return 1;
 498:../Src/xl_320.c ****   }
 499:../Src/xl_320.c **** 
 500:../Src/xl_320.c ****   //Vérification de la réponse
 501:../Src/xl_320.c ****   if(XL_Check_Status(servo) == 1){
 502:../Src/xl_320.c ****     return 1;
 503:../Src/xl_320.c ****   }
 504:../Src/xl_320.c ****   
 505:../Src/xl_320.c ****   //Récupération de la donnée
 506:../Src/xl_320.c ****   *data = servo->interface->status.params[0];
 507:../Src/xl_320.c ****   if(field_length[field] == 2){
 508:../Src/xl_320.c ****     *data |= servo->interface->status.params[1] << 8;
 509:../Src/xl_320.c ****   }
 510:../Src/xl_320.c ****   return 0;
 511:../Src/xl_320.c **** }
 1251              		.loc 1 511 0
 1252 000c 7047     		bx	lr
 1253              	.LVL116:
 1254              	.L110:
 476:../Src/xl_320.c ****   if(field > XL_NB_FIELDS-1){
 1255              		.loc 1 476 0
 1256 000e 70B5     		push	{r4, r5, r6, lr}
 1257              	.LCFI13:
 1258              		.cfi_def_cfa_offset 16
 1259              		.cfi_offset 4, -16
 1260              		.cfi_offset 5, -12
 1261              		.cfi_offset 6, -8
 1262              		.cfi_offset 14, -4
 1263 0010 84B0     		sub	sp, sp, #16
 1264              	.LCFI14:
 1265              		.cfi_def_cfa_offset 32
 1266 0012 1546     		mov	r5, r2
 1267 0014 0446     		mov	r4, r0
 484:../Src/xl_320.c ****   packet.instruction = XL_READ;
 1268              		.loc 1 484 0
 1269 0016 0378     		ldrb	r3, [r0]	@ zero_extendqisi2
 1270 0018 8DF80830 		strb	r3, [sp, #8]
 485:../Src/xl_320.c ****   packet.nb_params = 4;
 1271              		.loc 1 485 0
 1272 001c 0223     		movs	r3, #2
 1273 001e 8DF80930 		strb	r3, [sp, #9]
 486:../Src/xl_320.c ****   uint8_t params[4] = {field_addr[field], 0x00, field_length[field], 0x00};
 1274              		.loc 1 486 0
 1275 0022 0423     		movs	r3, #4
 1276 0024 8DF80A30 		strb	r3, [sp, #10]
 487:../Src/xl_320.c ****   packet.params = params;
 1277              		.loc 1 487 0
 1278 0028 1A4B     		ldr	r3, .L114+4
 1279 002a 5B5C     		ldrb	r3, [r3, r1]	@ zero_extendqisi2
 1280 002c 8DF80430 		strb	r3, [sp, #4]
 1281 0030 0023     		movs	r3, #0
 1282 0032 8DF80530 		strb	r3, [sp, #5]
 1283 0036 184A     		ldr	r2, .L114+8
 1284              	.LVL117:
 1285 0038 565C     		ldrb	r6, [r2, r1]	@ zero_extendqisi2
 1286 003a 8DF80660 		strb	r6, [sp, #6]
ARM GAS  /tmp/ccsfp71n.s 			page 34


 1287 003e 8DF80730 		strb	r3, [sp, #7]
 488:../Src/xl_320.c **** 
 1288              		.loc 1 488 0
 1289 0042 01AB     		add	r3, sp, #4
 1290 0044 0393     		str	r3, [sp, #12]
 491:../Src/xl_320.c ****     return 1;
 1291              		.loc 1 491 0
 1292 0046 4068     		ldr	r0, [r0, #4]
 1293              	.LVL118:
 1294 0048 02A9     		add	r1, sp, #8
 1295              	.LVL119:
 1296 004a 0122     		movs	r2, #1
 1297 004c FFF7FEFF 		bl	XL_Send
 1298              	.LVL120:
 1299 0050 0128     		cmp	r0, #1
 1300 0052 1BD0     		beq	.L111
 496:../Src/xl_320.c ****     return 1;
 1301              		.loc 1 496 0
 1302 0054 6068     		ldr	r0, [r4, #4]
 1303 0056 06F10B01 		add	r1, r6, #11
 1304 005a 0122     		movs	r2, #1
 1305 005c FFF7FEFF 		bl	XL_Receive
 1306              	.LVL121:
 1307 0060 0128     		cmp	r0, #1
 1308 0062 13D0     		beq	.L111
 501:../Src/xl_320.c ****     return 1;
 1309              		.loc 1 501 0
 1310 0064 2046     		mov	r0, r4
 1311 0066 FFF7FEFF 		bl	XL_Check_Status
 1312              	.LVL122:
 1313 006a 0128     		cmp	r0, #1
 1314 006c 0ED0     		beq	.L111
 506:../Src/xl_320.c ****   if(field_length[field] == 2){
 1315              		.loc 1 506 0
 1316 006e 6368     		ldr	r3, [r4, #4]
 1317 0070 93F84730 		ldrb	r3, [r3, #71]	@ zero_extendqisi2
 1318 0074 2B80     		strh	r3, [r5]	@ movhi
 507:../Src/xl_320.c ****     *data |= servo->interface->status.params[1] << 8;
 1319              		.loc 1 507 0
 1320 0076 022E     		cmp	r6, #2
 1321 0078 07D1     		bne	.L112
 508:../Src/xl_320.c ****   }
 1322              		.loc 1 508 0
 1323 007a 6268     		ldr	r2, [r4, #4]
 1324 007c 92F84820 		ldrb	r2, [r2, #72]	@ zero_extendqisi2
 1325 0080 43EA0223 		orr	r3, r3, r2, lsl #8
 1326 0084 2B80     		strh	r3, [r5]	@ movhi
 510:../Src/xl_320.c **** }
 1327              		.loc 1 510 0
 1328 0086 0020     		movs	r0, #0
 1329 0088 00E0     		b	.L111
 1330              	.L112:
 1331 008a 0020     		movs	r0, #0
 1332              	.L111:
 1333              		.loc 1 511 0
 1334 008c 04B0     		add	sp, sp, #16
 1335              	.LCFI15:
ARM GAS  /tmp/ccsfp71n.s 			page 35


 1336              		.cfi_def_cfa_offset 16
 1337              		@ sp needed
 1338 008e 70BD     		pop	{r4, r5, r6, pc}
 1339              	.LVL123:
 1340              	.L115:
 1341              		.align	2
 1342              	.L114:
 1343 0090 00000000 		.word	.LANCHOR1
 1344 0094 00000000 		.word	.LANCHOR2
 1345 0098 00000000 		.word	.LANCHOR3
 1346              		.cfi_endproc
 1347              	.LFE20:
 1349              		.section	.text.XL_Factory_Reset,"ax",%progbits
 1350              		.align	2
 1351              		.global	XL_Factory_Reset
 1352              		.thumb
 1353              		.thumb_func
 1355              	XL_Factory_Reset:
 1356              	.LFB22:
 512:../Src/xl_320.c **** 
 513:../Src/xl_320.c **** uint8_t XL_Action(XL *servo){
 514:../Src/xl_320.c ****   //Préparation de l'instruction
 515:../Src/xl_320.c ****   XL_Instruction_Packet packet;
 516:../Src/xl_320.c ****   packet.id = servo->id;
 517:../Src/xl_320.c ****   packet.instruction = XL_ACTION;
 518:../Src/xl_320.c ****   packet.nb_params = 0;
 519:../Src/xl_320.c ****   packet.params = 0;
 520:../Src/xl_320.c **** 
 521:../Src/xl_320.c ****   //Envoi de l'instruction
 522:../Src/xl_320.c ****   if(XL_Send(servo->interface, &packet, XL_DEFAULT_TIMEOUT) == 1){
 523:../Src/xl_320.c ****     return 1;
 524:../Src/xl_320.c ****   }
 525:../Src/xl_320.c **** 
 526:../Src/xl_320.c ****   //Réception de la réponse
 527:../Src/xl_320.c ****   if(XL_Receive(servo->interface, 11, XL_DEFAULT_TIMEOUT) == 1){
 528:../Src/xl_320.c ****     return 1;
 529:../Src/xl_320.c ****   }
 530:../Src/xl_320.c **** 
 531:../Src/xl_320.c ****   //En cas d'erreur matérielle
 532:../Src/xl_320.c ****   if(XL_Check_Alert(servo) == 1){
 533:../Src/xl_320.c ****     return 1;
 534:../Src/xl_320.c ****   }
 535:../Src/xl_320.c **** 
 536:../Src/xl_320.c ****   //Vérification du status
 537:../Src/xl_320.c ****   if(XL_Check_Status(servo) == 1){
 538:../Src/xl_320.c ****     return 1;
 539:../Src/xl_320.c ****   }
 540:../Src/xl_320.c **** 
 541:../Src/xl_320.c ****   //Action OK
 542:../Src/xl_320.c ****   return 0;
 543:../Src/xl_320.c **** }
 544:../Src/xl_320.c **** 
 545:../Src/xl_320.c **** uint8_t XL_Factory_Reset(XL *servo){
 1357              		.loc 1 545 0
 1358              		.cfi_startproc
 1359              		@ args = 0, pretend = 0, frame = 16
 1360              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccsfp71n.s 			page 36


 1361              	.LVL124:
 1362 0000 10B5     		push	{r4, lr}
 1363              	.LCFI16:
 1364              		.cfi_def_cfa_offset 8
 1365              		.cfi_offset 4, -8
 1366              		.cfi_offset 14, -4
 1367 0002 84B0     		sub	sp, sp, #16
 1368              	.LCFI17:
 1369              		.cfi_def_cfa_offset 24
 1370 0004 0446     		mov	r4, r0
 546:../Src/xl_320.c ****   XL_Instruction_Packet packet;
 547:../Src/xl_320.c ****   packet.id = servo->id;
 1371              		.loc 1 547 0
 1372 0006 0378     		ldrb	r3, [r0]	@ zero_extendqisi2
 1373 0008 8DF80830 		strb	r3, [sp, #8]
 548:../Src/xl_320.c ****   packet.instruction = XL_FACTORY_RESET;
 1374              		.loc 1 548 0
 1375 000c 0623     		movs	r3, #6
 1376 000e 8DF80930 		strb	r3, [sp, #9]
 549:../Src/xl_320.c ****   packet.nb_params = 1;
 1377              		.loc 1 549 0
 1378 0012 0122     		movs	r2, #1
 1379 0014 8DF80A20 		strb	r2, [sp, #10]
 550:../Src/xl_320.c ****   uint8_t param = 0x02;
 1380              		.loc 1 550 0
 1381 0018 04AB     		add	r3, sp, #16
 1382 001a 0221     		movs	r1, #2
 1383 001c 03F8091D 		strb	r1, [r3, #-9]!
 551:../Src/xl_320.c ****   packet.params = &param;
 1384              		.loc 1 551 0
 1385 0020 0393     		str	r3, [sp, #12]
 552:../Src/xl_320.c **** 
 553:../Src/xl_320.c ****   //Envoi de l'instruction
 554:../Src/xl_320.c ****   if(XL_Send(servo->interface, &packet, XL_DEFAULT_TIMEOUT) == 1){
 1386              		.loc 1 554 0
 1387 0022 4068     		ldr	r0, [r0, #4]
 1388              	.LVL125:
 1389 0024 02A9     		add	r1, sp, #8
 1390 0026 FFF7FEFF 		bl	XL_Send
 1391              	.LVL126:
 1392 002a 0128     		cmp	r0, #1
 1393 002c 05D0     		beq	.L117
 555:../Src/xl_320.c ****     return 1;
 556:../Src/xl_320.c ****   }
 557:../Src/xl_320.c **** 
 558:../Src/xl_320.c ****   //Attente de la réinitialisation
 559:../Src/xl_320.c ****   servo->interface->delay(5000);
 1394              		.loc 1 559 0
 1395 002e 6368     		ldr	r3, [r4, #4]
 1396 0030 DB68     		ldr	r3, [r3, #12]
 1397 0032 41F28830 		movw	r0, #5000
 1398 0036 9847     		blx	r3
 1399              	.LVL127:
 560:../Src/xl_320.c ****   
 561:../Src/xl_320.c ****   return 0;
 1400              		.loc 1 561 0
 1401 0038 0020     		movs	r0, #0
ARM GAS  /tmp/ccsfp71n.s 			page 37


 1402              	.L117:
 562:../Src/xl_320.c **** }
 1403              		.loc 1 562 0
 1404 003a 04B0     		add	sp, sp, #16
 1405              	.LCFI18:
 1406              		.cfi_def_cfa_offset 8
 1407              		@ sp needed
 1408 003c 10BD     		pop	{r4, pc}
 1409              		.cfi_endproc
 1410              	.LFE22:
 1412 003e 00BF     		.section	.text.XL_Reboot,"ax",%progbits
 1413              		.align	2
 1414              		.global	XL_Reboot
 1415              		.thumb
 1416              		.thumb_func
 1418              	XL_Reboot:
 1419              	.LFB23:
 563:../Src/xl_320.c **** 
 564:../Src/xl_320.c **** uint8_t XL_Reboot(XL *servo){
 1420              		.loc 1 564 0
 1421              		.cfi_startproc
 1422              		@ args = 0, pretend = 0, frame = 8
 1423              		@ frame_needed = 0, uses_anonymous_args = 0
 1424              	.LVL128:
 1425 0000 10B5     		push	{r4, lr}
 1426              	.LCFI19:
 1427              		.cfi_def_cfa_offset 8
 1428              		.cfi_offset 4, -8
 1429              		.cfi_offset 14, -4
 1430 0002 82B0     		sub	sp, sp, #8
 1431              	.LCFI20:
 1432              		.cfi_def_cfa_offset 16
 1433 0004 0446     		mov	r4, r0
 565:../Src/xl_320.c ****   XL_Instruction_Packet packet;
 566:../Src/xl_320.c ****   packet.id = servo->id;
 1434              		.loc 1 566 0
 1435 0006 0378     		ldrb	r3, [r0]	@ zero_extendqisi2
 1436 0008 8DF80030 		strb	r3, [sp]
 567:../Src/xl_320.c ****   packet.instruction = XL_REBOOT;
 1437              		.loc 1 567 0
 1438 000c 0823     		movs	r3, #8
 1439 000e 8DF80130 		strb	r3, [sp, #1]
 568:../Src/xl_320.c ****   packet.nb_params = 0;
 1440              		.loc 1 568 0
 1441 0012 0023     		movs	r3, #0
 1442 0014 8DF80230 		strb	r3, [sp, #2]
 569:../Src/xl_320.c ****   packet.params = 0;
 1443              		.loc 1 569 0
 1444 0018 0193     		str	r3, [sp, #4]
 570:../Src/xl_320.c **** 
 571:../Src/xl_320.c ****   //Envoi de l'instruction
 572:../Src/xl_320.c ****   if(XL_Send(servo->interface, &packet, XL_DEFAULT_TIMEOUT) == 1){
 1445              		.loc 1 572 0
 1446 001a 4068     		ldr	r0, [r0, #4]
 1447              	.LVL129:
 1448 001c 6946     		mov	r1, sp
 1449 001e 0122     		movs	r2, #1
ARM GAS  /tmp/ccsfp71n.s 			page 38


 1450 0020 FFF7FEFF 		bl	XL_Send
 1451              	.LVL130:
 1452 0024 0128     		cmp	r0, #1
 1453 0026 05D0     		beq	.L120
 573:../Src/xl_320.c ****     return 1;
 574:../Src/xl_320.c ****   }
 575:../Src/xl_320.c **** 
 576:../Src/xl_320.c ****   //Attente du redémarrage
 577:../Src/xl_320.c ****   servo->interface->delay(5000);
 1454              		.loc 1 577 0
 1455 0028 6368     		ldr	r3, [r4, #4]
 1456 002a DB68     		ldr	r3, [r3, #12]
 1457 002c 41F28830 		movw	r0, #5000
 1458 0030 9847     		blx	r3
 1459              	.LVL131:
 578:../Src/xl_320.c ****   
 579:../Src/xl_320.c ****   return 0;
 1460              		.loc 1 579 0
 1461 0032 0020     		movs	r0, #0
 1462              	.L120:
 580:../Src/xl_320.c **** }
 1463              		.loc 1 580 0
 1464 0034 02B0     		add	sp, sp, #8
 1465              	.LCFI21:
 1466              		.cfi_def_cfa_offset 8
 1467              		@ sp needed
 1468 0036 10BD     		pop	{r4, pc}
 1469              		.cfi_endproc
 1470              	.LFE23:
 1472              		.section	.text.XL_Configure_Baud_Rate,"ax",%progbits
 1473              		.align	2
 1474              		.global	XL_Configure_Baud_Rate
 1475              		.thumb
 1476              		.thumb_func
 1478              	XL_Configure_Baud_Rate:
 1479              	.LFB26:
 581:../Src/xl_320.c **** 
 582:../Src/xl_320.c **** uint8_t XL_Write(XL *servo, XL_Field field, uint16_t data, uint8_t size, uint8_t now){
 583:../Src/xl_320.c ****   if(servo == 0 || field > (XL_NB_FIELDS-1)){
 584:../Src/xl_320.c ****     return 1;
 585:../Src/xl_320.c ****   }
 586:../Src/xl_320.c **** 
 587:../Src/xl_320.c ****   //Préparation de l'instruction
 588:../Src/xl_320.c ****   static XL_Instruction_Packet packet;
 589:../Src/xl_320.c ****   static uint8_t params[4];
 590:../Src/xl_320.c ****   params[0] = field_addr[field];
 591:../Src/xl_320.c ****   params[1] = 0x00;
 592:../Src/xl_320.c ****   params[2] = data & 0xFF;
 593:../Src/xl_320.c ****   params[3] = data >> 8;
 594:../Src/xl_320.c ****   packet.id = servo->id;
 595:../Src/xl_320.c ****   packet.instruction = now?XL_WRITE:XL_REG_WRITE;
 596:../Src/xl_320.c ****   packet.nb_params = 2 + size;
 597:../Src/xl_320.c ****   packet.params = params;
 598:../Src/xl_320.c **** 
 599:../Src/xl_320.c ****   //Envoi de l'instruction
 600:../Src/xl_320.c ****   if(XL_Send(servo->interface, &packet, XL_DEFAULT_TIMEOUT) == 1){
 601:../Src/xl_320.c ****     return 1;
ARM GAS  /tmp/ccsfp71n.s 			page 39


 602:../Src/xl_320.c ****   }
 603:../Src/xl_320.c **** 
 604:../Src/xl_320.c ****   //Réception de la réponse
 605:../Src/xl_320.c ****   if(XL_Receive(servo->interface, 11, XL_DEFAULT_TIMEOUT) == 1){
 606:../Src/xl_320.c ****     return 1;
 607:../Src/xl_320.c ****   }
 608:../Src/xl_320.c **** 
 609:../Src/xl_320.c ****   //En cas d'erreur matérielle
 610:../Src/xl_320.c ****   if(XL_Check_Alert(servo) == 1){
 611:../Src/xl_320.c ****     return 1;
 612:../Src/xl_320.c ****   }
 613:../Src/xl_320.c **** 
 614:../Src/xl_320.c ****   //Vérification du status
 615:../Src/xl_320.c ****   if(XL_Check_Status(servo) == 1){
 616:../Src/xl_320.c ****     return 1;
 617:../Src/xl_320.c ****   }
 618:../Src/xl_320.c **** 
 619:../Src/xl_320.c ****   //Write OK
 620:../Src/xl_320.c ****   return 0;
 621:../Src/xl_320.c **** }
 622:../Src/xl_320.c **** 
 623:../Src/xl_320.c **** //======================================
 624:../Src/xl_320.c **** //         CONFIGURATION EEPROM       
 625:../Src/xl_320.c **** //======================================
 626:../Src/xl_320.c **** uint8_t XL_Configure_ID(XL *servo, uint8_t id){
 627:../Src/xl_320.c ****   if(id > 252){
 628:../Src/xl_320.c ****     err = XL_ERR_INTERNAL | XL_ERR_ILLEGAL_ARGUMENTS;
 629:../Src/xl_320.c ****     return 1;
 630:../Src/xl_320.c ****   }
 631:../Src/xl_320.c ****   return XL_Write(servo, XL_ID, id, 1, XL_NOW);
 632:../Src/xl_320.c **** }
 633:../Src/xl_320.c **** 
 634:../Src/xl_320.c **** uint8_t XL_Configure_Baud_Rate(XL *servo, XL_Baud_Rate baud_rate){
 1480              		.loc 1 634 0
 1481              		.cfi_startproc
 1482              		@ args = 0, pretend = 0, frame = 0
 1483              		@ frame_needed = 0, uses_anonymous_args = 0
 1484              		@ link register save eliminated.
 1485              	.LVL132:
 635:../Src/xl_320.c ****   if(baud_rate != XL_BAUD_RATE_9600 || baud_rate != XL_BAUD_RATE_57600 || baud_rate != XL_BAUD_RATE
 636:../Src/xl_320.c ****     err = XL_ERR_INTERNAL | XL_ERR_ILLEGAL_ARGUMENTS;
 1486              		.loc 1 636 0
 1487 0000 0022     		movs	r2, #0
 1488 0002 024B     		ldr	r3, .L123
 1489 0004 1A80     		strh	r2, [r3]	@ movhi
 637:../Src/xl_320.c ****     return 1;
 638:../Src/xl_320.c ****   }
 639:../Src/xl_320.c ****   return XL_Write(servo, XL_BAUD_RATE, baud_rate, 1, XL_NOW);
 640:../Src/xl_320.c **** }
 1490              		.loc 1 640 0
 1491 0006 0120     		movs	r0, #1
 1492              	.LVL133:
 1493 0008 7047     		bx	lr
 1494              	.L124:
 1495 000a 00BF     		.align	2
 1496              	.L123:
 1497 000c 00000000 		.word	.LANCHOR1
ARM GAS  /tmp/ccsfp71n.s 			page 40


 1498              		.cfi_endproc
 1499              	.LFE26:
 1501              		.section	.text.XL_Configure_Control_Mode,"ax",%progbits
 1502              		.align	2
 1503              		.global	XL_Configure_Control_Mode
 1504              		.thumb
 1505              		.thumb_func
 1507              	XL_Configure_Control_Mode:
 1508              	.LFB30:
 641:../Src/xl_320.c **** 
 642:../Src/xl_320.c **** uint8_t XL_Configure_Return_Delay_Time(XL *servo, uint8_t delay){
 643:../Src/xl_320.c ****   if(delay > 0xFE){
 644:../Src/xl_320.c ****     err = XL_ERR_INTERNAL | XL_ERR_ILLEGAL_ARGUMENTS;
 645:../Src/xl_320.c ****     return 1;
 646:../Src/xl_320.c ****   }
 647:../Src/xl_320.c ****   return XL_Write(servo, XL_RETURN_DELAY_TIME, delay, 1, XL_NOW);
 648:../Src/xl_320.c **** }
 649:../Src/xl_320.c **** 
 650:../Src/xl_320.c **** uint8_t XL_Configure_CW_Angle_Limit(XL *servo, uint16_t angle){
 651:../Src/xl_320.c ****   if(angle > 0x3FF){
 652:../Src/xl_320.c ****     err = XL_ERR_INTERNAL | XL_ERR_ILLEGAL_ARGUMENTS;
 653:../Src/xl_320.c ****     return 1;
 654:../Src/xl_320.c ****   }
 655:../Src/xl_320.c ****   return XL_Write(servo, XL_CW_ANGLE_LIMIT, angle, 2, XL_NOW);
 656:../Src/xl_320.c **** }
 657:../Src/xl_320.c **** 
 658:../Src/xl_320.c **** uint8_t XL_Configure_CCW_Angle_Limit(XL *servo, uint16_t angle){
 659:../Src/xl_320.c ****   if(angle > 0x3FF){
 660:../Src/xl_320.c ****     err = XL_ERR_INTERNAL | XL_ERR_ILLEGAL_ARGUMENTS;
 661:../Src/xl_320.c ****     return 1;
 662:../Src/xl_320.c ****   }
 663:../Src/xl_320.c ****   return XL_Write(servo, XL_CCW_ANGLE_LIMIT, angle, 2, XL_NOW);
 664:../Src/xl_320.c **** }
 665:../Src/xl_320.c ****   
 666:../Src/xl_320.c **** uint8_t XL_Configure_Control_Mode(XL *servo, XL_Mode mode){
 1509              		.loc 1 666 0
 1510              		.cfi_startproc
 1511              		@ args = 0, pretend = 0, frame = 0
 1512              		@ frame_needed = 0, uses_anonymous_args = 0
 1513              		@ link register save eliminated.
 1514              	.LVL134:
 667:../Src/xl_320.c ****   if(mode != XL_JOIN_MODE || mode != XL_WHEEL_MODE){
 668:../Src/xl_320.c ****     err = XL_ERR_INTERNAL | XL_ERR_ILLEGAL_ARGUMENTS;
 1515              		.loc 1 668 0
 1516 0000 0022     		movs	r2, #0
 1517 0002 024B     		ldr	r3, .L126
 1518 0004 1A80     		strh	r2, [r3]	@ movhi
 669:../Src/xl_320.c ****     return 1;
 670:../Src/xl_320.c ****   }
 671:../Src/xl_320.c ****   return XL_Write(servo, XL_CONTROL_MODE, mode, 1, XL_NOW);
 672:../Src/xl_320.c **** }
 1519              		.loc 1 672 0
 1520 0006 0120     		movs	r0, #1
 1521              	.LVL135:
 1522 0008 7047     		bx	lr
 1523              	.L127:
 1524 000a 00BF     		.align	2
ARM GAS  /tmp/ccsfp71n.s 			page 41


 1525              	.L126:
 1526 000c 00000000 		.word	.LANCHOR1
 1527              		.cfi_endproc
 1528              	.LFE30:
 1530              		.section	.text.XL_Configure_Return_Level,"ax",%progbits
 1531              		.align	2
 1532              		.global	XL_Configure_Return_Level
 1533              		.thumb
 1534              		.thumb_func
 1536              	XL_Configure_Return_Level:
 1537              	.LFB35:
 673:../Src/xl_320.c **** 
 674:../Src/xl_320.c **** uint8_t XL_Configure_Limit_Temperature(XL *servo, uint8_t temp){
 675:../Src/xl_320.c ****   if(temp > 150){
 676:../Src/xl_320.c ****     err = XL_ERR_INTERNAL | XL_ERR_ILLEGAL_ARGUMENTS;
 677:../Src/xl_320.c ****     return 1;
 678:../Src/xl_320.c ****   }
 679:../Src/xl_320.c ****   return XL_Write(servo, XL_LIMIT_TEMPERATURE, temp, 1, XL_NOW);
 680:../Src/xl_320.c **** }
 681:../Src/xl_320.c **** 
 682:../Src/xl_320.c **** uint8_t XL_Configure_Lower_Limit_Voltage(XL *servo, uint8_t voltage){
 683:../Src/xl_320.c ****   if(voltage < 50 || voltage > 250){
 684:../Src/xl_320.c ****     err = XL_ERR_INTERNAL | XL_ERR_ILLEGAL_ARGUMENTS;
 685:../Src/xl_320.c ****     return 1;
 686:../Src/xl_320.c ****   }
 687:../Src/xl_320.c ****   return XL_Write(servo, XL_LOWER_LIMIT_VOLTAGE, voltage, 1, XL_NOW);
 688:../Src/xl_320.c **** }
 689:../Src/xl_320.c **** 
 690:../Src/xl_320.c **** uint8_t XL_Configure_Upper_Limit_Voltage(XL *servo, uint8_t voltage){
 691:../Src/xl_320.c ****   if(voltage < 50 || voltage > 250){
 692:../Src/xl_320.c ****     err = XL_ERR_INTERNAL | XL_ERR_ILLEGAL_ARGUMENTS;
 693:../Src/xl_320.c ****     return 1;
 694:../Src/xl_320.c ****   }
 695:../Src/xl_320.c ****   return XL_Write(servo, XL_UPPER_LIMIT_VOLTAGE, voltage, 1, XL_NOW);
 696:../Src/xl_320.c **** }
 697:../Src/xl_320.c **** 
 698:../Src/xl_320.c **** uint8_t XL_Configure_Max_Torque(XL *servo, uint16_t max_torque){
 699:../Src/xl_320.c ****   if(max_torque > 1023){
 700:../Src/xl_320.c ****     err = XL_ERR_INTERNAL | XL_ERR_ILLEGAL_ARGUMENTS;
 701:../Src/xl_320.c ****     return 1;
 702:../Src/xl_320.c ****   }
 703:../Src/xl_320.c ****   return XL_Write(servo, XL_MAX_TORQUE, max_torque, 2, XL_NOW);
 704:../Src/xl_320.c **** }
 705:../Src/xl_320.c **** 
 706:../Src/xl_320.c **** uint8_t XL_Configure_Return_Level(XL *servo, XL_Return_Level level){
 1538              		.loc 1 706 0
 1539              		.cfi_startproc
 1540              		@ args = 0, pretend = 0, frame = 0
 1541              		@ frame_needed = 0, uses_anonymous_args = 0
 1542              		@ link register save eliminated.
 1543              	.LVL136:
 707:../Src/xl_320.c ****   if(level != XL_PING_RETURN || level != XL_READ_RETURN || level != XL_ALL_RETURN){
 708:../Src/xl_320.c ****     err = XL_ERR_INTERNAL | XL_ERR_ILLEGAL_ARGUMENTS;
 1544              		.loc 1 708 0
 1545 0000 0022     		movs	r2, #0
 1546 0002 024B     		ldr	r3, .L129
 1547 0004 1A80     		strh	r2, [r3]	@ movhi
ARM GAS  /tmp/ccsfp71n.s 			page 42


 709:../Src/xl_320.c ****     return 1;
 710:../Src/xl_320.c ****   }
 711:../Src/xl_320.c ****   return XL_Write(servo, XL_RETURN_LEVEL, level, 1, XL_NOW);
 712:../Src/xl_320.c **** }
 1548              		.loc 1 712 0
 1549 0006 0120     		movs	r0, #1
 1550              	.LVL137:
 1551 0008 7047     		bx	lr
 1552              	.L130:
 1553 000a 00BF     		.align	2
 1554              	.L129:
 1555 000c 00000000 		.word	.LANCHOR1
 1556              		.cfi_endproc
 1557              	.LFE35:
 1559              		.section	.text.XL_Get_Current_Position,"ax",%progbits
 1560              		.align	2
 1561              		.global	XL_Get_Current_Position
 1562              		.thumb
 1563              		.thumb_func
 1565              	XL_Get_Current_Position:
 1566              	.LFB48:
 713:../Src/xl_320.c **** 
 714:../Src/xl_320.c **** uint8_t XL_Configure_Alarm_Shutdown(XL *servo, XL_Alarm_Shutdown alarm){
 715:../Src/xl_320.c ****   if(alarm > XL_ERROR_OVER_9000){
 716:../Src/xl_320.c ****     err = XL_ERR_INTERNAL | XL_ERR_ILLEGAL_ARGUMENTS;
 717:../Src/xl_320.c ****     return 1;
 718:../Src/xl_320.c ****   }
 719:../Src/xl_320.c ****   return XL_Write(servo, XL_ALARM_SHUTDOWN, alarm, 1, XL_NOW);
 720:../Src/xl_320.c **** }
 721:../Src/xl_320.c **** 
 722:../Src/xl_320.c **** 
 723:../Src/xl_320.c **** //======================================
 724:../Src/xl_320.c **** //       COMMANDES SERVOMOTEUR       
 725:../Src/xl_320.c **** //======================================
 726:../Src/xl_320.c **** 
 727:../Src/xl_320.c **** uint8_t XL_Power_On(XL *servo, uint8_t now){
 728:../Src/xl_320.c ****   return XL_Write(servo, XL_TORQUE_ENABLE, 1, 1, now);
 729:../Src/xl_320.c **** }
 730:../Src/xl_320.c **** 
 731:../Src/xl_320.c **** uint8_t XL_Power_Off(XL *servo, uint8_t now){
 732:../Src/xl_320.c ****   return XL_Write(servo, XL_TORQUE_ENABLE, 0, 1, now);
 733:../Src/xl_320.c **** }
 734:../Src/xl_320.c **** 
 735:../Src/xl_320.c **** uint8_t XL_Set_LED(XL *servo, XL_LED_Color color, uint8_t now){
 736:../Src/xl_320.c ****   if((uint8_t) color > 7){
 737:../Src/xl_320.c ****     err = XL_ERR_INTERNAL | XL_ERR_ILLEGAL_ARGUMENTS;
 738:../Src/xl_320.c ****     return 1;
 739:../Src/xl_320.c ****   }
 740:../Src/xl_320.c ****   return XL_Write(servo, XL_LED, color, 1, now);
 741:../Src/xl_320.c **** }
 742:../Src/xl_320.c **** 
 743:../Src/xl_320.c **** uint8_t XL_Set_D_Gain(XL *servo, uint8_t d_gain, uint8_t now){
 744:../Src/xl_320.c ****   if(d_gain > 254){
 745:../Src/xl_320.c ****     err = XL_ERR_INTERNAL | XL_ERR_ILLEGAL_ARGUMENTS;
 746:../Src/xl_320.c ****     return 1;
 747:../Src/xl_320.c ****   }
 748:../Src/xl_320.c ****   return XL_Write(servo, XL_D_GAIN, d_gain, 1, now);
ARM GAS  /tmp/ccsfp71n.s 			page 43


 749:../Src/xl_320.c **** }
 750:../Src/xl_320.c **** 
 751:../Src/xl_320.c **** uint8_t XL_Set_I_Gain(XL *servo, uint8_t i_gain, uint8_t now){
 752:../Src/xl_320.c ****   if(i_gain > 254){
 753:../Src/xl_320.c ****     err = XL_ERR_INTERNAL | XL_ERR_ILLEGAL_ARGUMENTS;
 754:../Src/xl_320.c ****     return 1;
 755:../Src/xl_320.c ****   }
 756:../Src/xl_320.c ****   return XL_Write(servo, XL_I_GAIN, i_gain, 1, now);
 757:../Src/xl_320.c **** }
 758:../Src/xl_320.c **** 
 759:../Src/xl_320.c **** uint8_t XL_Set_P_Gain(XL *servo, uint8_t p_gain, uint8_t now){
 760:../Src/xl_320.c ****   if(p_gain > 254){
 761:../Src/xl_320.c ****     err = XL_ERR_INTERNAL | XL_ERR_ILLEGAL_ARGUMENTS;
 762:../Src/xl_320.c ****     return 1;
 763:../Src/xl_320.c ****   }
 764:../Src/xl_320.c ****   return XL_Write(servo, XL_P_GAIN, p_gain, 1, now);
 765:../Src/xl_320.c **** }
 766:../Src/xl_320.c **** 
 767:../Src/xl_320.c **** uint8_t XL_Set_Goal_Position(XL *servo, uint16_t position, uint8_t now){
 768:../Src/xl_320.c ****   if(position > 1023){
 769:../Src/xl_320.c ****     err = XL_ERR_INTERNAL | XL_ERR_ILLEGAL_ARGUMENTS;
 770:../Src/xl_320.c ****     return 1;
 771:../Src/xl_320.c ****   }
 772:../Src/xl_320.c ****   return XL_Write(servo, XL_GOAL_POSITION, position, 2, now);
 773:../Src/xl_320.c **** }
 774:../Src/xl_320.c **** 
 775:../Src/xl_320.c **** uint8_t XL_Set_Goal_Speed_Join(XL *servo, uint16_t speed, uint8_t now){
 776:../Src/xl_320.c ****   if(speed > 1023){
 777:../Src/xl_320.c ****     err = XL_ERR_INTERNAL | XL_ERR_ILLEGAL_ARGUMENTS;
 778:../Src/xl_320.c ****     return 1;
 779:../Src/xl_320.c ****   }
 780:../Src/xl_320.c ****   return XL_Write(servo, XL_MOVING_SPEED, speed, 2, now); 
 781:../Src/xl_320.c **** }
 782:../Src/xl_320.c **** 
 783:../Src/xl_320.c **** uint8_t XL_Set_Goal_Speed_Wheel(XL *servo, uint16_t speed, XL_Wheel_Direction dir, uint8_t now){
 784:../Src/xl_320.c ****   if(speed > 1023){
 785:../Src/xl_320.c ****     err = XL_ERR_INTERNAL | XL_ERR_ILLEGAL_ARGUMENTS;
 786:../Src/xl_320.c ****     return 1;
 787:../Src/xl_320.c ****   }
 788:../Src/xl_320.c ****   switch(dir){
 789:../Src/xl_320.c ****   case XL_CLOCKWISE:
 790:../Src/xl_320.c ****     speed += 1024;
 791:../Src/xl_320.c ****     break;
 792:../Src/xl_320.c ****   case XL_COUNTERCLOCKWISE:
 793:../Src/xl_320.c ****   break;
 794:../Src/xl_320.c ****   default:
 795:../Src/xl_320.c ****     err = XL_ERR_INTERNAL | XL_ERR_ILLEGAL_ARGUMENTS;
 796:../Src/xl_320.c ****     return 1;
 797:../Src/xl_320.c ****     break;
 798:../Src/xl_320.c ****   }
 799:../Src/xl_320.c ****   return XL_Write(servo, XL_MOVING_SPEED, speed, 2, now);
 800:../Src/xl_320.c **** }
 801:../Src/xl_320.c **** 
 802:../Src/xl_320.c **** uint8_t XL_Set_Torque_Limit(XL *servo, uint16_t torque_limit, uint8_t now){
 803:../Src/xl_320.c ****   if(torque_limit > 1023){
 804:../Src/xl_320.c ****     err = XL_ERR_INTERNAL | XL_ERR_ILLEGAL_ARGUMENTS;
 805:../Src/xl_320.c ****     return 1;
ARM GAS  /tmp/ccsfp71n.s 			page 44


 806:../Src/xl_320.c ****   }
 807:../Src/xl_320.c ****   return XL_Write(servo, XL_TORQUE_LIMIT, torque_limit, 2, now);
 808:../Src/xl_320.c **** }
 809:../Src/xl_320.c **** 
 810:../Src/xl_320.c **** uint8_t XL_Set_Punch(XL *servo, uint16_t punch, uint8_t now){
 811:../Src/xl_320.c ****   if(punch < 0x20 || punch > 0x3FF){
 812:../Src/xl_320.c ****     err = XL_ERR_INTERNAL | XL_ERR_ILLEGAL_ARGUMENTS;
 813:../Src/xl_320.c ****     return 1;
 814:../Src/xl_320.c ****   }
 815:../Src/xl_320.c ****   return XL_Write(servo, XL_PUNCH, punch, 2, now);
 816:../Src/xl_320.c **** }
 817:../Src/xl_320.c **** 
 818:../Src/xl_320.c **** //======================================
 819:../Src/xl_320.c **** //       LECTURE D'INFORMATIONS
 820:../Src/xl_320.c **** //======================================
 821:../Src/xl_320.c **** uint8_t XL_Get_Current_Position(XL *servo, uint16_t *position){
 1567              		.loc 1 821 0
 1568              		.cfi_startproc
 1569              		@ args = 0, pretend = 0, frame = 0
 1570              		@ frame_needed = 0, uses_anonymous_args = 0
 1571              	.LVL138:
 1572 0000 08B5     		push	{r3, lr}
 1573              	.LCFI22:
 1574              		.cfi_def_cfa_offset 8
 1575              		.cfi_offset 3, -8
 1576              		.cfi_offset 14, -4
 1577 0002 0A46     		mov	r2, r1
 822:../Src/xl_320.c ****   return XL_Read(servo, XL_CURRENT_POSITION, position);
 1578              		.loc 1 822 0
 1579 0004 1721     		movs	r1, #23
 1580              	.LVL139:
 1581 0006 FFF7FEFF 		bl	XL_Read
 1582              	.LVL140:
 823:../Src/xl_320.c **** }
 1583              		.loc 1 823 0
 1584 000a 08BD     		pop	{r3, pc}
 1585              		.cfi_endproc
 1586              	.LFE48:
 1588              		.section	.text.XL_Get_Current_Speed,"ax",%progbits
 1589              		.align	2
 1590              		.global	XL_Get_Current_Speed
 1591              		.thumb
 1592              		.thumb_func
 1594              	XL_Get_Current_Speed:
 1595              	.LFB49:
 824:../Src/xl_320.c **** 
 825:../Src/xl_320.c **** uint8_t XL_Get_Current_Speed(XL *servo, XL_Wheel_Direction *direction, uint16_t *speed){
 1596              		.loc 1 825 0
 1597              		.cfi_startproc
 1598              		@ args = 0, pretend = 0, frame = 0
 1599              		@ frame_needed = 0, uses_anonymous_args = 0
 1600              	.LVL141:
 1601 0000 38B5     		push	{r3, r4, r5, lr}
 1602              	.LCFI23:
 1603              		.cfi_def_cfa_offset 16
 1604              		.cfi_offset 3, -16
 1605              		.cfi_offset 4, -12
ARM GAS  /tmp/ccsfp71n.s 			page 45


 1606              		.cfi_offset 5, -8
 1607              		.cfi_offset 14, -4
 1608 0002 0D46     		mov	r5, r1
 1609 0004 1446     		mov	r4, r2
 826:../Src/xl_320.c ****   if(XL_Read(servo, XL_CURRENT_SPEED, speed) == 1){
 1610              		.loc 1 826 0
 1611 0006 1821     		movs	r1, #24
 1612              	.LVL142:
 1613 0008 FFF7FEFF 		bl	XL_Read
 1614              	.LVL143:
 1615 000c 0128     		cmp	r0, #1
 1616 000e 09D0     		beq	.L134
 827:../Src/xl_320.c ****     return 1;
 828:../Src/xl_320.c ****   }
 829:../Src/xl_320.c ****   *direction = (*speed > 1023)?XL_CLOCKWISE:XL_COUNTERCLOCKWISE;
 1617              		.loc 1 829 0
 1618 0010 2388     		ldrh	r3, [r4]
 1619 0012 B3F5806F 		cmp	r3, #1024
 1620 0016 2CBF     		ite	cs
 1621 0018 0023     		movcs	r3, #0
 1622 001a 0123     		movcc	r3, #1
 1623 001c 2B70     		strb	r3, [r5]
 830:../Src/xl_320.c ****   *speed &= 0xFF;
 1624              		.loc 1 830 0
 1625 001e 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 1626 0020 2380     		strh	r3, [r4]	@ movhi
 831:../Src/xl_320.c ****   return 0;
 1627              		.loc 1 831 0
 1628 0022 0020     		movs	r0, #0
 1629              	.L134:
 832:../Src/xl_320.c **** }
 1630              		.loc 1 832 0
 1631 0024 38BD     		pop	{r3, r4, r5, pc}
 1632              		.cfi_endproc
 1633              	.LFE49:
 1635 0026 00BF     		.section	.text.XL_Get_Current_Load,"ax",%progbits
 1636              		.align	2
 1637              		.global	XL_Get_Current_Load
 1638              		.thumb
 1639              		.thumb_func
 1641              	XL_Get_Current_Load:
 1642              	.LFB50:
 833:../Src/xl_320.c **** 
 834:../Src/xl_320.c **** uint8_t XL_Get_Current_Load(XL *servo, XL_Wheel_Direction *direction, uint16_t *load){
 1643              		.loc 1 834 0
 1644              		.cfi_startproc
 1645              		@ args = 0, pretend = 0, frame = 0
 1646              		@ frame_needed = 0, uses_anonymous_args = 0
 1647              	.LVL144:
 1648 0000 38B5     		push	{r3, r4, r5, lr}
 1649              	.LCFI24:
 1650              		.cfi_def_cfa_offset 16
 1651              		.cfi_offset 3, -16
 1652              		.cfi_offset 4, -12
 1653              		.cfi_offset 5, -8
 1654              		.cfi_offset 14, -4
 1655 0002 0D46     		mov	r5, r1
ARM GAS  /tmp/ccsfp71n.s 			page 46


 1656 0004 1446     		mov	r4, r2
 835:../Src/xl_320.c ****   if(XL_Read(servo, XL_CURRENT_LOAD, load) == 1){
 1657              		.loc 1 835 0
 1658 0006 1921     		movs	r1, #25
 1659              	.LVL145:
 1660 0008 FFF7FEFF 		bl	XL_Read
 1661              	.LVL146:
 1662 000c 0128     		cmp	r0, #1
 1663 000e 09D0     		beq	.L137
 836:../Src/xl_320.c ****     return 1;
 837:../Src/xl_320.c ****   }
 838:../Src/xl_320.c ****   *direction = (*load > 1023)?XL_CLOCKWISE:XL_COUNTERCLOCKWISE;
 1664              		.loc 1 838 0
 1665 0010 2388     		ldrh	r3, [r4]
 1666 0012 B3F5806F 		cmp	r3, #1024
 1667 0016 2CBF     		ite	cs
 1668 0018 0023     		movcs	r3, #0
 1669 001a 0123     		movcc	r3, #1
 1670 001c 2B70     		strb	r3, [r5]
 839:../Src/xl_320.c ****   *load &= 0xFF;
 1671              		.loc 1 839 0
 1672 001e 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 1673 0020 2380     		strh	r3, [r4]	@ movhi
 840:../Src/xl_320.c ****   return 0;
 1674              		.loc 1 840 0
 1675 0022 0020     		movs	r0, #0
 1676              	.L137:
 841:../Src/xl_320.c **** }
 1677              		.loc 1 841 0
 1678 0024 38BD     		pop	{r3, r4, r5, pc}
 1679              		.cfi_endproc
 1680              	.LFE50:
 1682 0026 00BF     		.section	.text.XL_Get_Current_Voltage,"ax",%progbits
 1683              		.align	2
 1684              		.global	XL_Get_Current_Voltage
 1685              		.thumb
 1686              		.thumb_func
 1688              	XL_Get_Current_Voltage:
 1689              	.LFB51:
 842:../Src/xl_320.c **** 
 843:../Src/xl_320.c **** uint8_t XL_Get_Current_Voltage(XL *servo, uint16_t *voltage){
 1690              		.loc 1 843 0
 1691              		.cfi_startproc
 1692              		@ args = 0, pretend = 0, frame = 0
 1693              		@ frame_needed = 0, uses_anonymous_args = 0
 1694              	.LVL147:
 1695 0000 08B5     		push	{r3, lr}
 1696              	.LCFI25:
 1697              		.cfi_def_cfa_offset 8
 1698              		.cfi_offset 3, -8
 1699              		.cfi_offset 14, -4
 1700 0002 0A46     		mov	r2, r1
 844:../Src/xl_320.c ****   return XL_Read(servo, XL_CURRENT_VOLTAGE, voltage);
 1701              		.loc 1 844 0
 1702 0004 1A21     		movs	r1, #26
 1703              	.LVL148:
 1704 0006 FFF7FEFF 		bl	XL_Read
ARM GAS  /tmp/ccsfp71n.s 			page 47


 1705              	.LVL149:
 845:../Src/xl_320.c **** }
 1706              		.loc 1 845 0
 1707 000a 08BD     		pop	{r3, pc}
 1708              		.cfi_endproc
 1709              	.LFE51:
 1711              		.section	.text.XL_Get_Current_Temperature,"ax",%progbits
 1712              		.align	2
 1713              		.global	XL_Get_Current_Temperature
 1714              		.thumb
 1715              		.thumb_func
 1717              	XL_Get_Current_Temperature:
 1718              	.LFB52:
 846:../Src/xl_320.c **** 
 847:../Src/xl_320.c **** uint8_t XL_Get_Current_Temperature(XL *servo, uint16_t *temperature){
 1719              		.loc 1 847 0
 1720              		.cfi_startproc
 1721              		@ args = 0, pretend = 0, frame = 0
 1722              		@ frame_needed = 0, uses_anonymous_args = 0
 1723              	.LVL150:
 1724 0000 08B5     		push	{r3, lr}
 1725              	.LCFI26:
 1726              		.cfi_def_cfa_offset 8
 1727              		.cfi_offset 3, -8
 1728              		.cfi_offset 14, -4
 1729 0002 0A46     		mov	r2, r1
 848:../Src/xl_320.c ****   return XL_Read(servo, XL_CURRENT_TEMPERATURE, temperature);
 1730              		.loc 1 848 0
 1731 0004 1B21     		movs	r1, #27
 1732              	.LVL151:
 1733 0006 FFF7FEFF 		bl	XL_Read
 1734              	.LVL152:
 849:../Src/xl_320.c **** }
 1735              		.loc 1 849 0
 1736 000a 08BD     		pop	{r3, pc}
 1737              		.cfi_endproc
 1738              	.LFE52:
 1740              		.section	.text.XL_Is_Working,"ax",%progbits
 1741              		.align	2
 1742              		.global	XL_Is_Working
 1743              		.thumb
 1744              		.thumb_func
 1746              	XL_Is_Working:
 1747              	.LFB53:
 850:../Src/xl_320.c **** 
 851:../Src/xl_320.c **** uint8_t XL_Is_Working(XL *servo, uint16_t *working){
 1748              		.loc 1 851 0
 1749              		.cfi_startproc
 1750              		@ args = 0, pretend = 0, frame = 0
 1751              		@ frame_needed = 0, uses_anonymous_args = 0
 1752              	.LVL153:
 1753 0000 08B5     		push	{r3, lr}
 1754              	.LCFI27:
 1755              		.cfi_def_cfa_offset 8
 1756              		.cfi_offset 3, -8
 1757              		.cfi_offset 14, -4
 1758 0002 0A46     		mov	r2, r1
ARM GAS  /tmp/ccsfp71n.s 			page 48


 852:../Src/xl_320.c ****   return XL_Read(servo, XL_TORQUE_ENABLE, working);
 1759              		.loc 1 852 0
 1760 0004 0E21     		movs	r1, #14
 1761              	.LVL154:
 1762 0006 FFF7FEFF 		bl	XL_Read
 1763              	.LVL155:
 853:../Src/xl_320.c **** }
 1764              		.loc 1 853 0
 1765 000a 08BD     		pop	{r3, pc}
 1766              		.cfi_endproc
 1767              	.LFE53:
 1769              		.section	.text.XL_Is_Moving,"ax",%progbits
 1770              		.align	2
 1771              		.global	XL_Is_Moving
 1772              		.thumb
 1773              		.thumb_func
 1775              	XL_Is_Moving:
 1776              	.LFB54:
 854:../Src/xl_320.c **** 
 855:../Src/xl_320.c **** uint8_t XL_Is_Moving(XL *servo, uint16_t *moving){
 1777              		.loc 1 855 0
 1778              		.cfi_startproc
 1779              		@ args = 0, pretend = 0, frame = 0
 1780              		@ frame_needed = 0, uses_anonymous_args = 0
 1781              	.LVL156:
 1782 0000 08B5     		push	{r3, lr}
 1783              	.LCFI28:
 1784              		.cfi_def_cfa_offset 8
 1785              		.cfi_offset 3, -8
 1786              		.cfi_offset 14, -4
 1787 0002 0A46     		mov	r2, r1
 856:../Src/xl_320.c ****   return XL_Read(servo, XL_MOVING, moving);
 1788              		.loc 1 856 0
 1789 0004 1D21     		movs	r1, #29
 1790              	.LVL157:
 1791 0006 FFF7FEFF 		bl	XL_Read
 1792              	.LVL158:
 857:../Src/xl_320.c **** }
 1793              		.loc 1 857 0
 1794 000a 08BD     		pop	{r3, pc}
 1795              		.cfi_endproc
 1796              	.LFE54:
 1798              		.section	.text.XL_Get_Hardware_Error,"ax",%progbits
 1799              		.align	2
 1800              		.global	XL_Get_Hardware_Error
 1801              		.thumb
 1802              		.thumb_func
 1804              	XL_Get_Hardware_Error:
 1805              	.LFB55:
 858:../Src/xl_320.c **** 
 859:../Src/xl_320.c **** uint8_t XL_Get_Hardware_Error(XL *servo, uint16_t *hw_error){
 1806              		.loc 1 859 0
 1807              		.cfi_startproc
 1808              		@ args = 0, pretend = 0, frame = 0
 1809              		@ frame_needed = 0, uses_anonymous_args = 0
 1810              	.LVL159:
 1811 0000 08B5     		push	{r3, lr}
ARM GAS  /tmp/ccsfp71n.s 			page 49


 1812              	.LCFI29:
 1813              		.cfi_def_cfa_offset 8
 1814              		.cfi_offset 3, -8
 1815              		.cfi_offset 14, -4
 1816 0002 0A46     		mov	r2, r1
 860:../Src/xl_320.c ****   return XL_Read(servo, XL_HARDWARE_ERROR_STATUS, hw_error);
 1817              		.loc 1 860 0
 1818 0004 1E21     		movs	r1, #30
 1819              	.LVL160:
 1820 0006 FFF7FEFF 		bl	XL_Read
 1821              	.LVL161:
 861:../Src/xl_320.c **** }
 1822              		.loc 1 861 0
 1823 000a 08BD     		pop	{r3, pc}
 1824              		.cfi_endproc
 1825              	.LFE55:
 1827              		.section	.text.XL_Check_Alert,"ax",%progbits
 1828              		.align	2
 1829              		.global	XL_Check_Alert
 1830              		.thumb
 1831              		.thumb_func
 1833              	XL_Check_Alert:
 1834              	.LFB16:
 403:../Src/xl_320.c ****   if(XL_STATUS_ALERT(servo->interface->status.err) == 1){
 1835              		.loc 1 403 0
 1836              		.cfi_startproc
 1837              		@ args = 0, pretend = 0, frame = 8
 1838              		@ frame_needed = 0, uses_anonymous_args = 0
 1839              	.LVL162:
 1840 0000 10B5     		push	{r4, lr}
 1841              	.LCFI30:
 1842              		.cfi_def_cfa_offset 8
 1843              		.cfi_offset 4, -8
 1844              		.cfi_offset 14, -4
 1845 0002 82B0     		sub	sp, sp, #8
 1846              	.LCFI31:
 1847              		.cfi_def_cfa_offset 16
 404:../Src/xl_320.c ****     uint16_t hw_error;
 1848              		.loc 1 404 0
 1849 0004 4368     		ldr	r3, [r0, #4]
 1850 0006 93F84530 		ldrb	r3, [r3, #69]	@ zero_extendqisi2
 1851 000a DC09     		lsrs	r4, r3, #7
 1852 000c 0CD0     		beq	.L152
 1853              	.LBB2:
 406:../Src/xl_320.c ****       return 1;
 1854              		.loc 1 406 0
 1855 000e 0DF10601 		add	r1, sp, #6
 1856 0012 FFF7FEFF 		bl	XL_Get_Hardware_Error
 1857              	.LVL163:
 1858 0016 0128     		cmp	r0, #1
 1859 0018 07D0     		beq	.L150
 409:../Src/xl_320.c ****     return 1;
 1860              		.loc 1 409 0
 1861 001a BDF80630 		ldrh	r3, [sp, #6]
 1862 001e 43F48063 		orr	r3, r3, #1024
 1863 0022 034A     		ldr	r2, .L154
 1864 0024 1380     		strh	r3, [r2]	@ movhi
ARM GAS  /tmp/ccsfp71n.s 			page 50


 410:../Src/xl_320.c ****   }
 1865              		.loc 1 410 0
 1866 0026 00E0     		b	.L150
 1867              	.LVL164:
 1868              	.L152:
 1869              	.LBE2:
 412:../Src/xl_320.c **** }
 1870              		.loc 1 412 0
 1871 0028 0024     		movs	r4, #0
 1872              	.LVL165:
 1873              	.L150:
 413:../Src/xl_320.c **** 
 1874              		.loc 1 413 0 discriminator 1
 1875 002a 2046     		mov	r0, r4
 1876 002c 02B0     		add	sp, sp, #8
 1877              	.LCFI32:
 1878              		.cfi_def_cfa_offset 8
 1879              		@ sp needed
 1880 002e 10BD     		pop	{r4, pc}
 1881              	.L155:
 1882              		.align	2
 1883              	.L154:
 1884 0030 00000000 		.word	.LANCHOR1
 1885              		.cfi_endproc
 1886              	.LFE16:
 1888              		.section	.text.XL_Action,"ax",%progbits
 1889              		.align	2
 1890              		.global	XL_Action
 1891              		.thumb
 1892              		.thumb_func
 1894              	XL_Action:
 1895              	.LFB21:
 513:../Src/xl_320.c ****   //Préparation de l'instruction
 1896              		.loc 1 513 0
 1897              		.cfi_startproc
 1898              		@ args = 0, pretend = 0, frame = 8
 1899              		@ frame_needed = 0, uses_anonymous_args = 0
 1900              	.LVL166:
 1901 0000 10B5     		push	{r4, lr}
 1902              	.LCFI33:
 1903              		.cfi_def_cfa_offset 8
 1904              		.cfi_offset 4, -8
 1905              		.cfi_offset 14, -4
 1906 0002 82B0     		sub	sp, sp, #8
 1907              	.LCFI34:
 1908              		.cfi_def_cfa_offset 16
 1909 0004 0446     		mov	r4, r0
 516:../Src/xl_320.c ****   packet.instruction = XL_ACTION;
 1910              		.loc 1 516 0
 1911 0006 0378     		ldrb	r3, [r0]	@ zero_extendqisi2
 1912 0008 8DF80030 		strb	r3, [sp]
 517:../Src/xl_320.c ****   packet.nb_params = 0;
 1913              		.loc 1 517 0
 1914 000c 0523     		movs	r3, #5
 1915 000e 8DF80130 		strb	r3, [sp, #1]
 518:../Src/xl_320.c ****   packet.params = 0;
 1916              		.loc 1 518 0
ARM GAS  /tmp/ccsfp71n.s 			page 51


 1917 0012 0023     		movs	r3, #0
 1918 0014 8DF80230 		strb	r3, [sp, #2]
 519:../Src/xl_320.c **** 
 1919              		.loc 1 519 0
 1920 0018 0193     		str	r3, [sp, #4]
 522:../Src/xl_320.c ****     return 1;
 1921              		.loc 1 522 0
 1922 001a 4068     		ldr	r0, [r0, #4]
 1923              	.LVL167:
 1924 001c 6946     		mov	r1, sp
 1925 001e 0122     		movs	r2, #1
 1926 0020 FFF7FEFF 		bl	XL_Send
 1927              	.LVL168:
 1928 0024 0128     		cmp	r0, #1
 1929 0026 11D0     		beq	.L157
 527:../Src/xl_320.c ****     return 1;
 1930              		.loc 1 527 0
 1931 0028 6068     		ldr	r0, [r4, #4]
 1932 002a 0B21     		movs	r1, #11
 1933 002c 0122     		movs	r2, #1
 1934 002e FFF7FEFF 		bl	XL_Receive
 1935              	.LVL169:
 1936 0032 0128     		cmp	r0, #1
 1937 0034 0AD0     		beq	.L157
 532:../Src/xl_320.c ****     return 1;
 1938              		.loc 1 532 0
 1939 0036 2046     		mov	r0, r4
 1940 0038 FFF7FEFF 		bl	XL_Check_Alert
 1941              	.LVL170:
 1942 003c 0128     		cmp	r0, #1
 1943 003e 05D0     		beq	.L157
 537:../Src/xl_320.c ****     return 1;
 1944              		.loc 1 537 0
 1945 0040 2046     		mov	r0, r4
 1946 0042 FFF7FEFF 		bl	XL_Check_Status
 1947              	.LVL171:
 1948 0046 0128     		cmp	r0, #1
 1949 0048 00D0     		beq	.L157
 542:../Src/xl_320.c **** }
 1950              		.loc 1 542 0
 1951 004a 0020     		movs	r0, #0
 1952              	.L157:
 543:../Src/xl_320.c **** 
 1953              		.loc 1 543 0
 1954 004c 02B0     		add	sp, sp, #8
 1955              	.LCFI35:
 1956              		.cfi_def_cfa_offset 8
 1957              		@ sp needed
 1958 004e 10BD     		pop	{r4, pc}
 1959              		.cfi_endproc
 1960              	.LFE21:
 1962              		.section	.text.XL_Write,"ax",%progbits
 1963              		.align	2
 1964              		.global	XL_Write
 1965              		.thumb
 1966              		.thumb_func
 1968              	XL_Write:
ARM GAS  /tmp/ccsfp71n.s 			page 52


 1969              	.LFB24:
 582:../Src/xl_320.c ****   if(servo == 0 || field > (XL_NB_FIELDS-1)){
 1970              		.loc 1 582 0
 1971              		.cfi_startproc
 1972              		@ args = 4, pretend = 0, frame = 0
 1973              		@ frame_needed = 0, uses_anonymous_args = 0
 1974              	.LVL172:
 583:../Src/xl_320.c ****     return 1;
 1975              		.loc 1 583 0
 1976 0000 98B3     		cbz	r0, .L163
 582:../Src/xl_320.c ****   if(servo == 0 || field > (XL_NB_FIELDS-1)){
 1977              		.loc 1 582 0 discriminator 1
 1978 0002 10B5     		push	{r4, lr}
 1979              	.LCFI36:
 1980              		.cfi_def_cfa_offset 8
 1981              		.cfi_offset 4, -8
 1982              		.cfi_offset 14, -4
 1983 0004 0446     		mov	r4, r0
 583:../Src/xl_320.c ****     return 1;
 1984              		.loc 1 583 0 discriminator 1
 1985 0006 1E29     		cmp	r1, #30
 1986 0008 31D8     		bhi	.L164
 590:../Src/xl_320.c ****   params[1] = 0x00;
 1987              		.loc 1 590 0
 1988 000a 1B48     		ldr	r0, .L168
 1989              	.LVL173:
 1990 000c 405C     		ldrb	r0, [r0, r1]	@ zero_extendqisi2
 1991 000e 1B49     		ldr	r1, .L168+4
 1992              	.LVL174:
 1993 0010 0870     		strb	r0, [r1]
 591:../Src/xl_320.c ****   params[2] = data & 0xFF;
 1994              		.loc 1 591 0
 1995 0012 0020     		movs	r0, #0
 1996 0014 4870     		strb	r0, [r1, #1]
 592:../Src/xl_320.c ****   params[3] = data >> 8;
 1997              		.loc 1 592 0
 1998 0016 8A70     		strb	r2, [r1, #2]
 593:../Src/xl_320.c ****   packet.id = servo->id;
 1999              		.loc 1 593 0
 2000 0018 120A     		lsrs	r2, r2, #8
 2001              	.LVL175:
 2002 001a CA70     		strb	r2, [r1, #3]
 594:../Src/xl_320.c ****   packet.instruction = now?XL_WRITE:XL_REG_WRITE;
 2003              		.loc 1 594 0
 2004 001c 2178     		ldrb	r1, [r4]	@ zero_extendqisi2
 2005 001e 184A     		ldr	r2, .L168+8
 2006 0020 1170     		strb	r1, [r2]
 595:../Src/xl_320.c ****   packet.nb_params = 2 + size;
 2007              		.loc 1 595 0
 2008 0022 9DF80820 		ldrb	r2, [sp, #8]	@ zero_extendqisi2
 2009 0026 0AB1     		cbz	r2, .L165
 2010 0028 0322     		movs	r2, #3
 2011 002a 00E0     		b	.L162
 2012              	.L165:
 2013 002c 0422     		movs	r2, #4
 2014              	.L162:
 595:../Src/xl_320.c ****   packet.nb_params = 2 + size;
ARM GAS  /tmp/ccsfp71n.s 			page 53


 2015              		.loc 1 595 0 is_stmt 0 discriminator 4
 2016 002e 1449     		ldr	r1, .L168+8
 2017 0030 4A70     		strb	r2, [r1, #1]
 596:../Src/xl_320.c ****   packet.params = params;
 2018              		.loc 1 596 0 is_stmt 1 discriminator 4
 2019 0032 0233     		adds	r3, r3, #2
 2020              	.LVL176:
 2021 0034 8B70     		strb	r3, [r1, #2]
 597:../Src/xl_320.c **** 
 2022              		.loc 1 597 0 discriminator 4
 2023 0036 114B     		ldr	r3, .L168+4
 2024 0038 4B60     		str	r3, [r1, #4]
 600:../Src/xl_320.c ****     return 1;
 2025              		.loc 1 600 0 discriminator 4
 2026 003a 6068     		ldr	r0, [r4, #4]
 2027 003c 0122     		movs	r2, #1
 2028 003e FFF7FEFF 		bl	XL_Send
 2029              	.LVL177:
 2030 0042 0128     		cmp	r0, #1
 2031 0044 16D0     		beq	.L161
 605:../Src/xl_320.c ****     return 1;
 2032              		.loc 1 605 0
 2033 0046 6068     		ldr	r0, [r4, #4]
 2034 0048 0B21     		movs	r1, #11
 2035 004a 0122     		movs	r2, #1
 2036 004c FFF7FEFF 		bl	XL_Receive
 2037              	.LVL178:
 2038 0050 0128     		cmp	r0, #1
 2039 0052 0FD0     		beq	.L161
 610:../Src/xl_320.c ****     return 1;
 2040              		.loc 1 610 0
 2041 0054 2046     		mov	r0, r4
 2042 0056 FFF7FEFF 		bl	XL_Check_Alert
 2043              	.LVL179:
 2044 005a 0128     		cmp	r0, #1
 2045 005c 0AD0     		beq	.L161
 615:../Src/xl_320.c ****     return 1;
 2046              		.loc 1 615 0
 2047 005e 2046     		mov	r0, r4
 2048 0060 FFF7FEFF 		bl	XL_Check_Status
 2049              	.LVL180:
 2050 0064 0128     		cmp	r0, #1
 2051 0066 04D1     		bne	.L166
 2052 0068 10BD     		pop	{r4, pc}
 2053              	.LVL181:
 2054              	.L163:
 2055              	.LCFI37:
 2056              		.cfi_def_cfa_offset 0
 2057              		.cfi_restore 4
 2058              		.cfi_restore 14
 584:../Src/xl_320.c ****   }
 2059              		.loc 1 584 0
 2060 006a 0120     		movs	r0, #1
 2061              	.LVL182:
 621:../Src/xl_320.c **** 
 2062              		.loc 1 621 0
 2063 006c 7047     		bx	lr
ARM GAS  /tmp/ccsfp71n.s 			page 54


 2064              	.LVL183:
 2065              	.L164:
 2066              	.LCFI38:
 2067              		.cfi_def_cfa_offset 8
 2068              		.cfi_offset 4, -8
 2069              		.cfi_offset 14, -4
 584:../Src/xl_320.c ****   }
 2070              		.loc 1 584 0
 2071 006e 0120     		movs	r0, #1
 2072              	.LVL184:
 2073 0070 10BD     		pop	{r4, pc}
 2074              	.LVL185:
 2075              	.L166:
 620:../Src/xl_320.c **** }
 2076              		.loc 1 620 0
 2077 0072 0020     		movs	r0, #0
 2078              	.L161:
 621:../Src/xl_320.c **** 
 2079              		.loc 1 621 0
 2080 0074 10BD     		pop	{r4, pc}
 2081              	.LVL186:
 2082              	.L169:
 2083 0076 00BF     		.align	2
 2084              	.L168:
 2085 0078 00000000 		.word	.LANCHOR2
 2086 007c 00000000 		.word	.LANCHOR4
 2087 0080 00000000 		.word	.LANCHOR5
 2088              		.cfi_endproc
 2089              	.LFE24:
 2091              		.section	.text.XL_Configure_ID,"ax",%progbits
 2092              		.align	2
 2093              		.global	XL_Configure_ID
 2094              		.thumb
 2095              		.thumb_func
 2097              	XL_Configure_ID:
 2098              	.LFB25:
 626:../Src/xl_320.c ****   if(id > 252){
 2099              		.loc 1 626 0
 2100              		.cfi_startproc
 2101              		@ args = 0, pretend = 0, frame = 0
 2102              		@ frame_needed = 0, uses_anonymous_args = 0
 2103              	.LVL187:
 627:../Src/xl_320.c ****     err = XL_ERR_INTERNAL | XL_ERR_ILLEGAL_ARGUMENTS;
 2104              		.loc 1 627 0
 2105 0000 FC29     		cmp	r1, #252
 2106 0002 04D9     		bls	.L171
 628:../Src/xl_320.c ****     return 1;
 2107              		.loc 1 628 0
 2108 0004 0022     		movs	r2, #0
 2109 0006 074B     		ldr	r3, .L174
 2110 0008 1A80     		strh	r2, [r3]	@ movhi
 629:../Src/xl_320.c ****   }
 2111              		.loc 1 629 0
 2112 000a 0120     		movs	r0, #1
 2113              	.LVL188:
 632:../Src/xl_320.c **** 
 2114              		.loc 1 632 0
ARM GAS  /tmp/ccsfp71n.s 			page 55


 2115 000c 7047     		bx	lr
 2116              	.LVL189:
 2117              	.L171:
 626:../Src/xl_320.c ****   if(id > 252){
 2118              		.loc 1 626 0
 2119 000e 00B5     		push	{lr}
 2120              	.LCFI39:
 2121              		.cfi_def_cfa_offset 4
 2122              		.cfi_offset 14, -4
 2123 0010 83B0     		sub	sp, sp, #12
 2124              	.LCFI40:
 2125              		.cfi_def_cfa_offset 16
 2126 0012 0A46     		mov	r2, r1
 631:../Src/xl_320.c **** }
 2127              		.loc 1 631 0
 2128 0014 0123     		movs	r3, #1
 2129 0016 0093     		str	r3, [sp]
 2130 0018 0021     		movs	r1, #0
 2131              	.LVL190:
 2132 001a FFF7FEFF 		bl	XL_Write
 2133              	.LVL191:
 632:../Src/xl_320.c **** 
 2134              		.loc 1 632 0
 2135 001e 03B0     		add	sp, sp, #12
 2136              	.LCFI41:
 2137              		.cfi_def_cfa_offset 4
 2138              		@ sp needed
 2139 0020 5DF804FB 		ldr	pc, [sp], #4
 2140              	.L175:
 2141              		.align	2
 2142              	.L174:
 2143 0024 00000000 		.word	.LANCHOR1
 2144              		.cfi_endproc
 2145              	.LFE25:
 2147              		.section	.text.XL_Configure_Return_Delay_Time,"ax",%progbits
 2148              		.align	2
 2149              		.global	XL_Configure_Return_Delay_Time
 2150              		.thumb
 2151              		.thumb_func
 2153              	XL_Configure_Return_Delay_Time:
 2154              	.LFB27:
 642:../Src/xl_320.c ****   if(delay > 0xFE){
 2155              		.loc 1 642 0
 2156              		.cfi_startproc
 2157              		@ args = 0, pretend = 0, frame = 0
 2158              		@ frame_needed = 0, uses_anonymous_args = 0
 2159              	.LVL192:
 643:../Src/xl_320.c ****     err = XL_ERR_INTERNAL | XL_ERR_ILLEGAL_ARGUMENTS;
 2160              		.loc 1 643 0
 2161 0000 FF29     		cmp	r1, #255
 2162 0002 04D1     		bne	.L177
 644:../Src/xl_320.c ****     return 1;
 2163              		.loc 1 644 0
 2164 0004 0022     		movs	r2, #0
 2165 0006 074B     		ldr	r3, .L180
 2166 0008 1A80     		strh	r2, [r3]	@ movhi
 645:../Src/xl_320.c ****   }
ARM GAS  /tmp/ccsfp71n.s 			page 56


 2167              		.loc 1 645 0
 2168 000a 0120     		movs	r0, #1
 2169              	.LVL193:
 648:../Src/xl_320.c **** 
 2170              		.loc 1 648 0
 2171 000c 7047     		bx	lr
 2172              	.LVL194:
 2173              	.L177:
 642:../Src/xl_320.c ****   if(delay > 0xFE){
 2174              		.loc 1 642 0
 2175 000e 00B5     		push	{lr}
 2176              	.LCFI42:
 2177              		.cfi_def_cfa_offset 4
 2178              		.cfi_offset 14, -4
 2179 0010 83B0     		sub	sp, sp, #12
 2180              	.LCFI43:
 2181              		.cfi_def_cfa_offset 16
 2182 0012 0A46     		mov	r2, r1
 647:../Src/xl_320.c **** }
 2183              		.loc 1 647 0
 2184 0014 0123     		movs	r3, #1
 2185 0016 0093     		str	r3, [sp]
 2186 0018 0221     		movs	r1, #2
 2187              	.LVL195:
 2188 001a FFF7FEFF 		bl	XL_Write
 2189              	.LVL196:
 648:../Src/xl_320.c **** 
 2190              		.loc 1 648 0
 2191 001e 03B0     		add	sp, sp, #12
 2192              	.LCFI44:
 2193              		.cfi_def_cfa_offset 4
 2194              		@ sp needed
 2195 0020 5DF804FB 		ldr	pc, [sp], #4
 2196              	.L181:
 2197              		.align	2
 2198              	.L180:
 2199 0024 00000000 		.word	.LANCHOR1
 2200              		.cfi_endproc
 2201              	.LFE27:
 2203              		.section	.text.XL_Configure_CW_Angle_Limit,"ax",%progbits
 2204              		.align	2
 2205              		.global	XL_Configure_CW_Angle_Limit
 2206              		.thumb
 2207              		.thumb_func
 2209              	XL_Configure_CW_Angle_Limit:
 2210              	.LFB28:
 650:../Src/xl_320.c ****   if(angle > 0x3FF){
 2211              		.loc 1 650 0
 2212              		.cfi_startproc
 2213              		@ args = 0, pretend = 0, frame = 0
 2214              		@ frame_needed = 0, uses_anonymous_args = 0
 2215              	.LVL197:
 651:../Src/xl_320.c ****     err = XL_ERR_INTERNAL | XL_ERR_ILLEGAL_ARGUMENTS;
 2216              		.loc 1 651 0
 2217 0000 B1F5806F 		cmp	r1, #1024
 2218 0004 04D3     		bcc	.L183
 652:../Src/xl_320.c ****     return 1;
ARM GAS  /tmp/ccsfp71n.s 			page 57


 2219              		.loc 1 652 0
 2220 0006 0022     		movs	r2, #0
 2221 0008 074B     		ldr	r3, .L186
 2222 000a 1A80     		strh	r2, [r3]	@ movhi
 653:../Src/xl_320.c ****   }
 2223              		.loc 1 653 0
 2224 000c 0120     		movs	r0, #1
 2225              	.LVL198:
 656:../Src/xl_320.c **** 
 2226              		.loc 1 656 0
 2227 000e 7047     		bx	lr
 2228              	.LVL199:
 2229              	.L183:
 650:../Src/xl_320.c ****   if(angle > 0x3FF){
 2230              		.loc 1 650 0
 2231 0010 00B5     		push	{lr}
 2232              	.LCFI45:
 2233              		.cfi_def_cfa_offset 4
 2234              		.cfi_offset 14, -4
 2235 0012 83B0     		sub	sp, sp, #12
 2236              	.LCFI46:
 2237              		.cfi_def_cfa_offset 16
 2238 0014 0A46     		mov	r2, r1
 655:../Src/xl_320.c **** }
 2239              		.loc 1 655 0
 2240 0016 0123     		movs	r3, #1
 2241 0018 0093     		str	r3, [sp]
 2242 001a 0321     		movs	r1, #3
 2243              	.LVL200:
 2244 001c 0223     		movs	r3, #2
 2245 001e FFF7FEFF 		bl	XL_Write
 2246              	.LVL201:
 656:../Src/xl_320.c **** 
 2247              		.loc 1 656 0
 2248 0022 03B0     		add	sp, sp, #12
 2249              	.LCFI47:
 2250              		.cfi_def_cfa_offset 4
 2251              		@ sp needed
 2252 0024 5DF804FB 		ldr	pc, [sp], #4
 2253              	.L187:
 2254              		.align	2
 2255              	.L186:
 2256 0028 00000000 		.word	.LANCHOR1
 2257              		.cfi_endproc
 2258              	.LFE28:
 2260              		.section	.text.XL_Configure_CCW_Angle_Limit,"ax",%progbits
 2261              		.align	2
 2262              		.global	XL_Configure_CCW_Angle_Limit
 2263              		.thumb
 2264              		.thumb_func
 2266              	XL_Configure_CCW_Angle_Limit:
 2267              	.LFB29:
 658:../Src/xl_320.c ****   if(angle > 0x3FF){
 2268              		.loc 1 658 0
 2269              		.cfi_startproc
 2270              		@ args = 0, pretend = 0, frame = 0
 2271              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccsfp71n.s 			page 58


 2272              	.LVL202:
 659:../Src/xl_320.c ****     err = XL_ERR_INTERNAL | XL_ERR_ILLEGAL_ARGUMENTS;
 2273              		.loc 1 659 0
 2274 0000 B1F5806F 		cmp	r1, #1024
 2275 0004 04D3     		bcc	.L189
 660:../Src/xl_320.c ****     return 1;
 2276              		.loc 1 660 0
 2277 0006 0022     		movs	r2, #0
 2278 0008 074B     		ldr	r3, .L192
 2279 000a 1A80     		strh	r2, [r3]	@ movhi
 661:../Src/xl_320.c ****   }
 2280              		.loc 1 661 0
 2281 000c 0120     		movs	r0, #1
 2282              	.LVL203:
 664:../Src/xl_320.c ****   
 2283              		.loc 1 664 0
 2284 000e 7047     		bx	lr
 2285              	.LVL204:
 2286              	.L189:
 658:../Src/xl_320.c ****   if(angle > 0x3FF){
 2287              		.loc 1 658 0
 2288 0010 00B5     		push	{lr}
 2289              	.LCFI48:
 2290              		.cfi_def_cfa_offset 4
 2291              		.cfi_offset 14, -4
 2292 0012 83B0     		sub	sp, sp, #12
 2293              	.LCFI49:
 2294              		.cfi_def_cfa_offset 16
 2295 0014 0A46     		mov	r2, r1
 663:../Src/xl_320.c **** }
 2296              		.loc 1 663 0
 2297 0016 0123     		movs	r3, #1
 2298 0018 0093     		str	r3, [sp]
 2299 001a 0421     		movs	r1, #4
 2300              	.LVL205:
 2301 001c 0223     		movs	r3, #2
 2302 001e FFF7FEFF 		bl	XL_Write
 2303              	.LVL206:
 664:../Src/xl_320.c ****   
 2304              		.loc 1 664 0
 2305 0022 03B0     		add	sp, sp, #12
 2306              	.LCFI50:
 2307              		.cfi_def_cfa_offset 4
 2308              		@ sp needed
 2309 0024 5DF804FB 		ldr	pc, [sp], #4
 2310              	.L193:
 2311              		.align	2
 2312              	.L192:
 2313 0028 00000000 		.word	.LANCHOR1
 2314              		.cfi_endproc
 2315              	.LFE29:
 2317              		.section	.text.XL_Configure_Limit_Temperature,"ax",%progbits
 2318              		.align	2
 2319              		.global	XL_Configure_Limit_Temperature
 2320              		.thumb
 2321              		.thumb_func
 2323              	XL_Configure_Limit_Temperature:
ARM GAS  /tmp/ccsfp71n.s 			page 59


 2324              	.LFB31:
 674:../Src/xl_320.c ****   if(temp > 150){
 2325              		.loc 1 674 0
 2326              		.cfi_startproc
 2327              		@ args = 0, pretend = 0, frame = 0
 2328              		@ frame_needed = 0, uses_anonymous_args = 0
 2329              	.LVL207:
 675:../Src/xl_320.c ****     err = XL_ERR_INTERNAL | XL_ERR_ILLEGAL_ARGUMENTS;
 2330              		.loc 1 675 0
 2331 0000 9629     		cmp	r1, #150
 2332 0002 04D9     		bls	.L195
 676:../Src/xl_320.c ****     return 1;
 2333              		.loc 1 676 0
 2334 0004 0022     		movs	r2, #0
 2335 0006 074B     		ldr	r3, .L198
 2336 0008 1A80     		strh	r2, [r3]	@ movhi
 677:../Src/xl_320.c ****   }
 2337              		.loc 1 677 0
 2338 000a 0120     		movs	r0, #1
 2339              	.LVL208:
 680:../Src/xl_320.c **** 
 2340              		.loc 1 680 0
 2341 000c 7047     		bx	lr
 2342              	.LVL209:
 2343              	.L195:
 674:../Src/xl_320.c ****   if(temp > 150){
 2344              		.loc 1 674 0
 2345 000e 00B5     		push	{lr}
 2346              	.LCFI51:
 2347              		.cfi_def_cfa_offset 4
 2348              		.cfi_offset 14, -4
 2349 0010 83B0     		sub	sp, sp, #12
 2350              	.LCFI52:
 2351              		.cfi_def_cfa_offset 16
 2352 0012 0A46     		mov	r2, r1
 679:../Src/xl_320.c **** }
 2353              		.loc 1 679 0
 2354 0014 0123     		movs	r3, #1
 2355 0016 0093     		str	r3, [sp]
 2356 0018 0621     		movs	r1, #6
 2357              	.LVL210:
 2358 001a FFF7FEFF 		bl	XL_Write
 2359              	.LVL211:
 680:../Src/xl_320.c **** 
 2360              		.loc 1 680 0
 2361 001e 03B0     		add	sp, sp, #12
 2362              	.LCFI53:
 2363              		.cfi_def_cfa_offset 4
 2364              		@ sp needed
 2365 0020 5DF804FB 		ldr	pc, [sp], #4
 2366              	.L199:
 2367              		.align	2
 2368              	.L198:
 2369 0024 00000000 		.word	.LANCHOR1
 2370              		.cfi_endproc
 2371              	.LFE31:
 2373              		.section	.text.XL_Configure_Lower_Limit_Voltage,"ax",%progbits
ARM GAS  /tmp/ccsfp71n.s 			page 60


 2374              		.align	2
 2375              		.global	XL_Configure_Lower_Limit_Voltage
 2376              		.thumb
 2377              		.thumb_func
 2379              	XL_Configure_Lower_Limit_Voltage:
 2380              	.LFB32:
 682:../Src/xl_320.c ****   if(voltage < 50 || voltage > 250){
 2381              		.loc 1 682 0
 2382              		.cfi_startproc
 2383              		@ args = 0, pretend = 0, frame = 0
 2384              		@ frame_needed = 0, uses_anonymous_args = 0
 2385              	.LVL212:
 683:../Src/xl_320.c ****     err = XL_ERR_INTERNAL | XL_ERR_ILLEGAL_ARGUMENTS;
 2386              		.loc 1 683 0
 2387 0000 A1F13203 		sub	r3, r1, #50
 2388 0004 DBB2     		uxtb	r3, r3
 2389 0006 C82B     		cmp	r3, #200
 2390 0008 04D9     		bls	.L201
 684:../Src/xl_320.c ****     return 1;
 2391              		.loc 1 684 0
 2392 000a 0022     		movs	r2, #0
 2393 000c 074B     		ldr	r3, .L204
 2394 000e 1A80     		strh	r2, [r3]	@ movhi
 685:../Src/xl_320.c ****   }
 2395              		.loc 1 685 0
 2396 0010 0120     		movs	r0, #1
 2397              	.LVL213:
 688:../Src/xl_320.c **** 
 2398              		.loc 1 688 0
 2399 0012 7047     		bx	lr
 2400              	.LVL214:
 2401              	.L201:
 682:../Src/xl_320.c ****   if(voltage < 50 || voltage > 250){
 2402              		.loc 1 682 0
 2403 0014 00B5     		push	{lr}
 2404              	.LCFI54:
 2405              		.cfi_def_cfa_offset 4
 2406              		.cfi_offset 14, -4
 2407 0016 83B0     		sub	sp, sp, #12
 2408              	.LCFI55:
 2409              		.cfi_def_cfa_offset 16
 2410 0018 0A46     		mov	r2, r1
 687:../Src/xl_320.c **** }
 2411              		.loc 1 687 0
 2412 001a 0123     		movs	r3, #1
 2413 001c 0093     		str	r3, [sp]
 2414 001e 0721     		movs	r1, #7
 2415              	.LVL215:
 2416 0020 FFF7FEFF 		bl	XL_Write
 2417              	.LVL216:
 688:../Src/xl_320.c **** 
 2418              		.loc 1 688 0
 2419 0024 03B0     		add	sp, sp, #12
 2420              	.LCFI56:
 2421              		.cfi_def_cfa_offset 4
 2422              		@ sp needed
 2423 0026 5DF804FB 		ldr	pc, [sp], #4
ARM GAS  /tmp/ccsfp71n.s 			page 61


 2424              	.L205:
 2425 002a 00BF     		.align	2
 2426              	.L204:
 2427 002c 00000000 		.word	.LANCHOR1
 2428              		.cfi_endproc
 2429              	.LFE32:
 2431              		.section	.text.XL_Configure_Upper_Limit_Voltage,"ax",%progbits
 2432              		.align	2
 2433              		.global	XL_Configure_Upper_Limit_Voltage
 2434              		.thumb
 2435              		.thumb_func
 2437              	XL_Configure_Upper_Limit_Voltage:
 2438              	.LFB33:
 690:../Src/xl_320.c ****   if(voltage < 50 || voltage > 250){
 2439              		.loc 1 690 0
 2440              		.cfi_startproc
 2441              		@ args = 0, pretend = 0, frame = 0
 2442              		@ frame_needed = 0, uses_anonymous_args = 0
 2443              	.LVL217:
 691:../Src/xl_320.c ****     err = XL_ERR_INTERNAL | XL_ERR_ILLEGAL_ARGUMENTS;
 2444              		.loc 1 691 0
 2445 0000 A1F13203 		sub	r3, r1, #50
 2446 0004 DBB2     		uxtb	r3, r3
 2447 0006 C82B     		cmp	r3, #200
 2448 0008 04D9     		bls	.L207
 692:../Src/xl_320.c ****     return 1;
 2449              		.loc 1 692 0
 2450 000a 0022     		movs	r2, #0
 2451 000c 074B     		ldr	r3, .L210
 2452 000e 1A80     		strh	r2, [r3]	@ movhi
 693:../Src/xl_320.c ****   }
 2453              		.loc 1 693 0
 2454 0010 0120     		movs	r0, #1
 2455              	.LVL218:
 696:../Src/xl_320.c **** 
 2456              		.loc 1 696 0
 2457 0012 7047     		bx	lr
 2458              	.LVL219:
 2459              	.L207:
 690:../Src/xl_320.c ****   if(voltage < 50 || voltage > 250){
 2460              		.loc 1 690 0
 2461 0014 00B5     		push	{lr}
 2462              	.LCFI57:
 2463              		.cfi_def_cfa_offset 4
 2464              		.cfi_offset 14, -4
 2465 0016 83B0     		sub	sp, sp, #12
 2466              	.LCFI58:
 2467              		.cfi_def_cfa_offset 16
 2468 0018 0A46     		mov	r2, r1
 695:../Src/xl_320.c **** }
 2469              		.loc 1 695 0
 2470 001a 0123     		movs	r3, #1
 2471 001c 0093     		str	r3, [sp]
 2472 001e 0821     		movs	r1, #8
 2473              	.LVL220:
 2474 0020 FFF7FEFF 		bl	XL_Write
 2475              	.LVL221:
ARM GAS  /tmp/ccsfp71n.s 			page 62


 696:../Src/xl_320.c **** 
 2476              		.loc 1 696 0
 2477 0024 03B0     		add	sp, sp, #12
 2478              	.LCFI59:
 2479              		.cfi_def_cfa_offset 4
 2480              		@ sp needed
 2481 0026 5DF804FB 		ldr	pc, [sp], #4
 2482              	.L211:
 2483 002a 00BF     		.align	2
 2484              	.L210:
 2485 002c 00000000 		.word	.LANCHOR1
 2486              		.cfi_endproc
 2487              	.LFE33:
 2489              		.section	.text.XL_Configure_Max_Torque,"ax",%progbits
 2490              		.align	2
 2491              		.global	XL_Configure_Max_Torque
 2492              		.thumb
 2493              		.thumb_func
 2495              	XL_Configure_Max_Torque:
 2496              	.LFB34:
 698:../Src/xl_320.c ****   if(max_torque > 1023){
 2497              		.loc 1 698 0
 2498              		.cfi_startproc
 2499              		@ args = 0, pretend = 0, frame = 0
 2500              		@ frame_needed = 0, uses_anonymous_args = 0
 2501              	.LVL222:
 699:../Src/xl_320.c ****     err = XL_ERR_INTERNAL | XL_ERR_ILLEGAL_ARGUMENTS;
 2502              		.loc 1 699 0
 2503 0000 B1F5806F 		cmp	r1, #1024
 2504 0004 04D3     		bcc	.L213
 700:../Src/xl_320.c ****     return 1;
 2505              		.loc 1 700 0
 2506 0006 0022     		movs	r2, #0
 2507 0008 074B     		ldr	r3, .L216
 2508 000a 1A80     		strh	r2, [r3]	@ movhi
 701:../Src/xl_320.c ****   }
 2509              		.loc 1 701 0
 2510 000c 0120     		movs	r0, #1
 2511              	.LVL223:
 704:../Src/xl_320.c **** 
 2512              		.loc 1 704 0
 2513 000e 7047     		bx	lr
 2514              	.LVL224:
 2515              	.L213:
 698:../Src/xl_320.c ****   if(max_torque > 1023){
 2516              		.loc 1 698 0
 2517 0010 00B5     		push	{lr}
 2518              	.LCFI60:
 2519              		.cfi_def_cfa_offset 4
 2520              		.cfi_offset 14, -4
 2521 0012 83B0     		sub	sp, sp, #12
 2522              	.LCFI61:
 2523              		.cfi_def_cfa_offset 16
 2524 0014 0A46     		mov	r2, r1
 703:../Src/xl_320.c **** }
 2525              		.loc 1 703 0
 2526 0016 0123     		movs	r3, #1
ARM GAS  /tmp/ccsfp71n.s 			page 63


 2527 0018 0093     		str	r3, [sp]
 2528 001a 0921     		movs	r1, #9
 2529              	.LVL225:
 2530 001c 0223     		movs	r3, #2
 2531 001e FFF7FEFF 		bl	XL_Write
 2532              	.LVL226:
 704:../Src/xl_320.c **** 
 2533              		.loc 1 704 0
 2534 0022 03B0     		add	sp, sp, #12
 2535              	.LCFI62:
 2536              		.cfi_def_cfa_offset 4
 2537              		@ sp needed
 2538 0024 5DF804FB 		ldr	pc, [sp], #4
 2539              	.L217:
 2540              		.align	2
 2541              	.L216:
 2542 0028 00000000 		.word	.LANCHOR1
 2543              		.cfi_endproc
 2544              	.LFE34:
 2546              		.section	.text.XL_Configure_Alarm_Shutdown,"ax",%progbits
 2547              		.align	2
 2548              		.global	XL_Configure_Alarm_Shutdown
 2549              		.thumb
 2550              		.thumb_func
 2552              	XL_Configure_Alarm_Shutdown:
 2553              	.LFB36:
 714:../Src/xl_320.c ****   if(alarm > XL_ERROR_OVER_9000){
 2554              		.loc 1 714 0
 2555              		.cfi_startproc
 2556              		@ args = 0, pretend = 0, frame = 0
 2557              		@ frame_needed = 0, uses_anonymous_args = 0
 2558              	.LVL227:
 715:../Src/xl_320.c ****     err = XL_ERR_INTERNAL | XL_ERR_ILLEGAL_ARGUMENTS;
 2559              		.loc 1 715 0
 2560 0000 0729     		cmp	r1, #7
 2561 0002 04D9     		bls	.L219
 716:../Src/xl_320.c ****     return 1;
 2562              		.loc 1 716 0
 2563 0004 0022     		movs	r2, #0
 2564 0006 074B     		ldr	r3, .L222
 2565 0008 1A80     		strh	r2, [r3]	@ movhi
 717:../Src/xl_320.c ****   }
 2566              		.loc 1 717 0
 2567 000a 0120     		movs	r0, #1
 2568              	.LVL228:
 720:../Src/xl_320.c **** 
 2569              		.loc 1 720 0
 2570 000c 7047     		bx	lr
 2571              	.LVL229:
 2572              	.L219:
 714:../Src/xl_320.c ****   if(alarm > XL_ERROR_OVER_9000){
 2573              		.loc 1 714 0
 2574 000e 00B5     		push	{lr}
 2575              	.LCFI63:
 2576              		.cfi_def_cfa_offset 4
 2577              		.cfi_offset 14, -4
 2578 0010 83B0     		sub	sp, sp, #12
ARM GAS  /tmp/ccsfp71n.s 			page 64


 2579              	.LCFI64:
 2580              		.cfi_def_cfa_offset 16
 2581 0012 0A46     		mov	r2, r1
 719:../Src/xl_320.c **** }
 2582              		.loc 1 719 0
 2583 0014 0123     		movs	r3, #1
 2584 0016 0093     		str	r3, [sp]
 2585 0018 0B21     		movs	r1, #11
 2586              	.LVL230:
 2587 001a FFF7FEFF 		bl	XL_Write
 2588              	.LVL231:
 720:../Src/xl_320.c **** 
 2589              		.loc 1 720 0
 2590 001e 03B0     		add	sp, sp, #12
 2591              	.LCFI65:
 2592              		.cfi_def_cfa_offset 4
 2593              		@ sp needed
 2594 0020 5DF804FB 		ldr	pc, [sp], #4
 2595              	.L223:
 2596              		.align	2
 2597              	.L222:
 2598 0024 00000000 		.word	.LANCHOR1
 2599              		.cfi_endproc
 2600              	.LFE36:
 2602              		.section	.text.XL_Power_On,"ax",%progbits
 2603              		.align	2
 2604              		.global	XL_Power_On
 2605              		.thumb
 2606              		.thumb_func
 2608              	XL_Power_On:
 2609              	.LFB37:
 727:../Src/xl_320.c ****   return XL_Write(servo, XL_TORQUE_ENABLE, 1, 1, now);
 2610              		.loc 1 727 0
 2611              		.cfi_startproc
 2612              		@ args = 0, pretend = 0, frame = 0
 2613              		@ frame_needed = 0, uses_anonymous_args = 0
 2614              	.LVL232:
 2615 0000 00B5     		push	{lr}
 2616              	.LCFI66:
 2617              		.cfi_def_cfa_offset 4
 2618              		.cfi_offset 14, -4
 2619 0002 83B0     		sub	sp, sp, #12
 2620              	.LCFI67:
 2621              		.cfi_def_cfa_offset 16
 728:../Src/xl_320.c **** }
 2622              		.loc 1 728 0
 2623 0004 0091     		str	r1, [sp]
 2624 0006 0E21     		movs	r1, #14
 2625              	.LVL233:
 2626 0008 0122     		movs	r2, #1
 2627 000a 1346     		mov	r3, r2
 2628 000c FFF7FEFF 		bl	XL_Write
 2629              	.LVL234:
 729:../Src/xl_320.c **** 
 2630              		.loc 1 729 0
 2631 0010 03B0     		add	sp, sp, #12
 2632              	.LCFI68:
ARM GAS  /tmp/ccsfp71n.s 			page 65


 2633              		.cfi_def_cfa_offset 4
 2634              		@ sp needed
 2635 0012 5DF804FB 		ldr	pc, [sp], #4
 2636              		.cfi_endproc
 2637              	.LFE37:
 2639 0016 00BF     		.section	.text.XL_Power_Off,"ax",%progbits
 2640              		.align	2
 2641              		.global	XL_Power_Off
 2642              		.thumb
 2643              		.thumb_func
 2645              	XL_Power_Off:
 2646              	.LFB38:
 731:../Src/xl_320.c ****   return XL_Write(servo, XL_TORQUE_ENABLE, 0, 1, now);
 2647              		.loc 1 731 0
 2648              		.cfi_startproc
 2649              		@ args = 0, pretend = 0, frame = 0
 2650              		@ frame_needed = 0, uses_anonymous_args = 0
 2651              	.LVL235:
 2652 0000 00B5     		push	{lr}
 2653              	.LCFI69:
 2654              		.cfi_def_cfa_offset 4
 2655              		.cfi_offset 14, -4
 2656 0002 83B0     		sub	sp, sp, #12
 2657              	.LCFI70:
 2658              		.cfi_def_cfa_offset 16
 732:../Src/xl_320.c **** }
 2659              		.loc 1 732 0
 2660 0004 0091     		str	r1, [sp]
 2661 0006 0E21     		movs	r1, #14
 2662              	.LVL236:
 2663 0008 0022     		movs	r2, #0
 2664 000a 0123     		movs	r3, #1
 2665 000c FFF7FEFF 		bl	XL_Write
 2666              	.LVL237:
 733:../Src/xl_320.c **** 
 2667              		.loc 1 733 0
 2668 0010 03B0     		add	sp, sp, #12
 2669              	.LCFI71:
 2670              		.cfi_def_cfa_offset 4
 2671              		@ sp needed
 2672 0012 5DF804FB 		ldr	pc, [sp], #4
 2673              		.cfi_endproc
 2674              	.LFE38:
 2676 0016 00BF     		.section	.text.XL_Set_LED,"ax",%progbits
 2677              		.align	2
 2678              		.global	XL_Set_LED
 2679              		.thumb
 2680              		.thumb_func
 2682              	XL_Set_LED:
 2683              	.LFB39:
 735:../Src/xl_320.c ****   if((uint8_t) color > 7){
 2684              		.loc 1 735 0
 2685              		.cfi_startproc
 2686              		@ args = 0, pretend = 0, frame = 0
 2687              		@ frame_needed = 0, uses_anonymous_args = 0
 2688              	.LVL238:
 736:../Src/xl_320.c ****     err = XL_ERR_INTERNAL | XL_ERR_ILLEGAL_ARGUMENTS;
ARM GAS  /tmp/ccsfp71n.s 			page 66


 2689              		.loc 1 736 0
 2690 0000 0729     		cmp	r1, #7
 2691 0002 04D9     		bls	.L229
 737:../Src/xl_320.c ****     return 1;
 2692              		.loc 1 737 0
 2693 0004 0022     		movs	r2, #0
 2694              	.LVL239:
 2695 0006 084B     		ldr	r3, .L232
 2696 0008 1A80     		strh	r2, [r3]	@ movhi
 738:../Src/xl_320.c ****   }
 2697              		.loc 1 738 0
 2698 000a 0120     		movs	r0, #1
 2699              	.LVL240:
 741:../Src/xl_320.c **** 
 2700              		.loc 1 741 0
 2701 000c 7047     		bx	lr
 2702              	.LVL241:
 2703              	.L229:
 735:../Src/xl_320.c ****   if((uint8_t) color > 7){
 2704              		.loc 1 735 0
 2705 000e 00B5     		push	{lr}
 2706              	.LCFI72:
 2707              		.cfi_def_cfa_offset 4
 2708              		.cfi_offset 14, -4
 2709 0010 83B0     		sub	sp, sp, #12
 2710              	.LCFI73:
 2711              		.cfi_def_cfa_offset 16
 2712 0012 1346     		mov	r3, r2
 2713 0014 0A46     		mov	r2, r1
 2714              	.LVL242:
 740:../Src/xl_320.c **** }
 2715              		.loc 1 740 0
 2716 0016 0093     		str	r3, [sp]
 2717 0018 0F21     		movs	r1, #15
 2718              	.LVL243:
 2719 001a 0123     		movs	r3, #1
 2720 001c FFF7FEFF 		bl	XL_Write
 2721              	.LVL244:
 741:../Src/xl_320.c **** 
 2722              		.loc 1 741 0
 2723 0020 03B0     		add	sp, sp, #12
 2724              	.LCFI74:
 2725              		.cfi_def_cfa_offset 4
 2726              		@ sp needed
 2727 0022 5DF804FB 		ldr	pc, [sp], #4
 2728              	.L233:
 2729 0026 00BF     		.align	2
 2730              	.L232:
 2731 0028 00000000 		.word	.LANCHOR1
 2732              		.cfi_endproc
 2733              	.LFE39:
 2735              		.section	.text.XL_Say_Hello,"ax",%progbits
 2736              		.align	2
 2737              		.global	XL_Say_Hello
 2738              		.thumb
 2739              		.thumb_func
 2741              	XL_Say_Hello:
ARM GAS  /tmp/ccsfp71n.s 			page 67


 2742              	.LFB19:
 459:../Src/xl_320.c ****   if(XL_Ping(servo) == 1){
 2743              		.loc 1 459 0
 2744              		.cfi_startproc
 2745              		@ args = 0, pretend = 0, frame = 0
 2746              		@ frame_needed = 0, uses_anonymous_args = 0
 2747              	.LVL245:
 2748 0000 70B5     		push	{r4, r5, r6, lr}
 2749              	.LCFI75:
 2750              		.cfi_def_cfa_offset 16
 2751              		.cfi_offset 4, -16
 2752              		.cfi_offset 5, -12
 2753              		.cfi_offset 6, -8
 2754              		.cfi_offset 14, -4
 2755 0002 0446     		mov	r4, r0
 460:../Src/xl_320.c ****     return 1;
 2756              		.loc 1 460 0
 2757 0004 FFF7FEFF 		bl	XL_Ping
 2758              	.LVL246:
 2759 0008 0128     		cmp	r0, #1
 2760 000a 22D0     		beq	.L235
 464:../Src/xl_320.c ****   uint8_t i;
 2761              		.loc 1 464 0
 2762 000c 6368     		ldr	r3, [r4, #4]
 2763 000e 93F84530 		ldrb	r3, [r3, #69]	@ zero_extendqisi2
 2764 0012 0BB9     		cbnz	r3, .L239
 2765 0014 0226     		movs	r6, #2
 2766 0016 00E0     		b	.L236
 2767              	.L239:
 2768 0018 0126     		movs	r6, #1
 2769              	.L236:
 2770              	.LVL247:
 466:../Src/xl_320.c ****     XL_Set_LED(servo, color, XL_NOW);
 2771              		.loc 1 466 0 discriminator 4
 2772 001a 0025     		movs	r5, #0
 2773 001c 15E0     		b	.L237
 2774              	.LVL248:
 2775              	.L238:
 467:../Src/xl_320.c ****     servo->interface->delay(500);
 2776              		.loc 1 467 0 discriminator 3
 2777 001e 2046     		mov	r0, r4
 2778 0020 3146     		mov	r1, r6
 2779 0022 0122     		movs	r2, #1
 2780 0024 FFF7FEFF 		bl	XL_Set_LED
 2781              	.LVL249:
 468:../Src/xl_320.c ****     XL_Set_LED(servo, XL_LED_OFF, XL_NOW);
 2782              		.loc 1 468 0 discriminator 3
 2783 0028 6368     		ldr	r3, [r4, #4]
 2784 002a DB68     		ldr	r3, [r3, #12]
 2785 002c 4FF4FA70 		mov	r0, #500
 2786 0030 9847     		blx	r3
 2787              	.LVL250:
 469:../Src/xl_320.c ****     servo->interface->delay(500);
 2788              		.loc 1 469 0 discriminator 3
 2789 0032 2046     		mov	r0, r4
 2790 0034 0021     		movs	r1, #0
 2791 0036 0122     		movs	r2, #1
ARM GAS  /tmp/ccsfp71n.s 			page 68


 2792 0038 FFF7FEFF 		bl	XL_Set_LED
 2793              	.LVL251:
 470:../Src/xl_320.c ****   }
 2794              		.loc 1 470 0 discriminator 3
 2795 003c 6368     		ldr	r3, [r4, #4]
 2796 003e DB68     		ldr	r3, [r3, #12]
 2797 0040 4FF4FA70 		mov	r0, #500
 2798 0044 9847     		blx	r3
 2799              	.LVL252:
 466:../Src/xl_320.c ****     XL_Set_LED(servo, color, XL_NOW);
 2800              		.loc 1 466 0 discriminator 3
 2801 0046 0135     		adds	r5, r5, #1
 2802              	.LVL253:
 2803 0048 EDB2     		uxtb	r5, r5
 2804              	.LVL254:
 2805              	.L237:
 466:../Src/xl_320.c ****     XL_Set_LED(servo, color, XL_NOW);
 2806              		.loc 1 466 0 is_stmt 0 discriminator 1
 2807 004a 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 2808 004c AB42     		cmp	r3, r5
 2809 004e E6D8     		bhi	.L238
 473:../Src/xl_320.c **** }
 2810              		.loc 1 473 0 is_stmt 1
 2811 0050 0020     		movs	r0, #0
 2812              	.LVL255:
 2813              	.L235:
 474:../Src/xl_320.c **** 
 2814              		.loc 1 474 0
 2815 0052 70BD     		pop	{r4, r5, r6, pc}
 2816              		.cfi_endproc
 2817              	.LFE19:
 2819              		.section	.text.XL_Set_D_Gain,"ax",%progbits
 2820              		.align	2
 2821              		.global	XL_Set_D_Gain
 2822              		.thumb
 2823              		.thumb_func
 2825              	XL_Set_D_Gain:
 2826              	.LFB40:
 743:../Src/xl_320.c ****   if(d_gain > 254){
 2827              		.loc 1 743 0
 2828              		.cfi_startproc
 2829              		@ args = 0, pretend = 0, frame = 0
 2830              		@ frame_needed = 0, uses_anonymous_args = 0
 2831              	.LVL256:
 744:../Src/xl_320.c ****     err = XL_ERR_INTERNAL | XL_ERR_ILLEGAL_ARGUMENTS;
 2832              		.loc 1 744 0
 2833 0000 FF29     		cmp	r1, #255
 2834 0002 04D1     		bne	.L242
 745:../Src/xl_320.c ****     return 1;
 2835              		.loc 1 745 0
 2836 0004 0022     		movs	r2, #0
 2837              	.LVL257:
 2838 0006 084B     		ldr	r3, .L245
 2839 0008 1A80     		strh	r2, [r3]	@ movhi
 746:../Src/xl_320.c ****   }
 2840              		.loc 1 746 0
 2841 000a 0120     		movs	r0, #1
ARM GAS  /tmp/ccsfp71n.s 			page 69


 2842              	.LVL258:
 749:../Src/xl_320.c **** 
 2843              		.loc 1 749 0
 2844 000c 7047     		bx	lr
 2845              	.LVL259:
 2846              	.L242:
 743:../Src/xl_320.c ****   if(d_gain > 254){
 2847              		.loc 1 743 0
 2848 000e 00B5     		push	{lr}
 2849              	.LCFI76:
 2850              		.cfi_def_cfa_offset 4
 2851              		.cfi_offset 14, -4
 2852 0010 83B0     		sub	sp, sp, #12
 2853              	.LCFI77:
 2854              		.cfi_def_cfa_offset 16
 2855 0012 1346     		mov	r3, r2
 2856 0014 0A46     		mov	r2, r1
 2857              	.LVL260:
 748:../Src/xl_320.c **** }
 2858              		.loc 1 748 0
 2859 0016 0093     		str	r3, [sp]
 2860 0018 1021     		movs	r1, #16
 2861              	.LVL261:
 2862 001a 0123     		movs	r3, #1
 2863 001c FFF7FEFF 		bl	XL_Write
 2864              	.LVL262:
 749:../Src/xl_320.c **** 
 2865              		.loc 1 749 0
 2866 0020 03B0     		add	sp, sp, #12
 2867              	.LCFI78:
 2868              		.cfi_def_cfa_offset 4
 2869              		@ sp needed
 2870 0022 5DF804FB 		ldr	pc, [sp], #4
 2871              	.L246:
 2872 0026 00BF     		.align	2
 2873              	.L245:
 2874 0028 00000000 		.word	.LANCHOR1
 2875              		.cfi_endproc
 2876              	.LFE40:
 2878              		.section	.text.XL_Set_I_Gain,"ax",%progbits
 2879              		.align	2
 2880              		.global	XL_Set_I_Gain
 2881              		.thumb
 2882              		.thumb_func
 2884              	XL_Set_I_Gain:
 2885              	.LFB41:
 751:../Src/xl_320.c ****   if(i_gain > 254){
 2886              		.loc 1 751 0
 2887              		.cfi_startproc
 2888              		@ args = 0, pretend = 0, frame = 0
 2889              		@ frame_needed = 0, uses_anonymous_args = 0
 2890              	.LVL263:
 752:../Src/xl_320.c ****     err = XL_ERR_INTERNAL | XL_ERR_ILLEGAL_ARGUMENTS;
 2891              		.loc 1 752 0
 2892 0000 FF29     		cmp	r1, #255
 2893 0002 04D1     		bne	.L248
 753:../Src/xl_320.c ****     return 1;
ARM GAS  /tmp/ccsfp71n.s 			page 70


 2894              		.loc 1 753 0
 2895 0004 0022     		movs	r2, #0
 2896              	.LVL264:
 2897 0006 084B     		ldr	r3, .L251
 2898 0008 1A80     		strh	r2, [r3]	@ movhi
 754:../Src/xl_320.c ****   }
 2899              		.loc 1 754 0
 2900 000a 0120     		movs	r0, #1
 2901              	.LVL265:
 757:../Src/xl_320.c **** 
 2902              		.loc 1 757 0
 2903 000c 7047     		bx	lr
 2904              	.LVL266:
 2905              	.L248:
 751:../Src/xl_320.c ****   if(i_gain > 254){
 2906              		.loc 1 751 0
 2907 000e 00B5     		push	{lr}
 2908              	.LCFI79:
 2909              		.cfi_def_cfa_offset 4
 2910              		.cfi_offset 14, -4
 2911 0010 83B0     		sub	sp, sp, #12
 2912              	.LCFI80:
 2913              		.cfi_def_cfa_offset 16
 2914 0012 1346     		mov	r3, r2
 2915 0014 0A46     		mov	r2, r1
 2916              	.LVL267:
 756:../Src/xl_320.c **** }
 2917              		.loc 1 756 0
 2918 0016 0093     		str	r3, [sp]
 2919 0018 1121     		movs	r1, #17
 2920              	.LVL268:
 2921 001a 0123     		movs	r3, #1
 2922 001c FFF7FEFF 		bl	XL_Write
 2923              	.LVL269:
 757:../Src/xl_320.c **** 
 2924              		.loc 1 757 0
 2925 0020 03B0     		add	sp, sp, #12
 2926              	.LCFI81:
 2927              		.cfi_def_cfa_offset 4
 2928              		@ sp needed
 2929 0022 5DF804FB 		ldr	pc, [sp], #4
 2930              	.L252:
 2931 0026 00BF     		.align	2
 2932              	.L251:
 2933 0028 00000000 		.word	.LANCHOR1
 2934              		.cfi_endproc
 2935              	.LFE41:
 2937              		.section	.text.XL_Set_P_Gain,"ax",%progbits
 2938              		.align	2
 2939              		.global	XL_Set_P_Gain
 2940              		.thumb
 2941              		.thumb_func
 2943              	XL_Set_P_Gain:
 2944              	.LFB42:
 759:../Src/xl_320.c ****   if(p_gain > 254){
 2945              		.loc 1 759 0
 2946              		.cfi_startproc
ARM GAS  /tmp/ccsfp71n.s 			page 71


 2947              		@ args = 0, pretend = 0, frame = 0
 2948              		@ frame_needed = 0, uses_anonymous_args = 0
 2949              	.LVL270:
 760:../Src/xl_320.c ****     err = XL_ERR_INTERNAL | XL_ERR_ILLEGAL_ARGUMENTS;
 2950              		.loc 1 760 0
 2951 0000 FF29     		cmp	r1, #255
 2952 0002 04D1     		bne	.L254
 761:../Src/xl_320.c ****     return 1;
 2953              		.loc 1 761 0
 2954 0004 0022     		movs	r2, #0
 2955              	.LVL271:
 2956 0006 084B     		ldr	r3, .L257
 2957 0008 1A80     		strh	r2, [r3]	@ movhi
 762:../Src/xl_320.c ****   }
 2958              		.loc 1 762 0
 2959 000a 0120     		movs	r0, #1
 2960              	.LVL272:
 765:../Src/xl_320.c **** 
 2961              		.loc 1 765 0
 2962 000c 7047     		bx	lr
 2963              	.LVL273:
 2964              	.L254:
 759:../Src/xl_320.c ****   if(p_gain > 254){
 2965              		.loc 1 759 0
 2966 000e 00B5     		push	{lr}
 2967              	.LCFI82:
 2968              		.cfi_def_cfa_offset 4
 2969              		.cfi_offset 14, -4
 2970 0010 83B0     		sub	sp, sp, #12
 2971              	.LCFI83:
 2972              		.cfi_def_cfa_offset 16
 2973 0012 1346     		mov	r3, r2
 2974 0014 0A46     		mov	r2, r1
 2975              	.LVL274:
 764:../Src/xl_320.c **** }
 2976              		.loc 1 764 0
 2977 0016 0093     		str	r3, [sp]
 2978 0018 1221     		movs	r1, #18
 2979              	.LVL275:
 2980 001a 0123     		movs	r3, #1
 2981 001c FFF7FEFF 		bl	XL_Write
 2982              	.LVL276:
 765:../Src/xl_320.c **** 
 2983              		.loc 1 765 0
 2984 0020 03B0     		add	sp, sp, #12
 2985              	.LCFI84:
 2986              		.cfi_def_cfa_offset 4
 2987              		@ sp needed
 2988 0022 5DF804FB 		ldr	pc, [sp], #4
 2989              	.L258:
 2990 0026 00BF     		.align	2
 2991              	.L257:
 2992 0028 00000000 		.word	.LANCHOR1
 2993              		.cfi_endproc
 2994              	.LFE42:
 2996              		.section	.text.XL_Set_Goal_Position,"ax",%progbits
 2997              		.align	2
ARM GAS  /tmp/ccsfp71n.s 			page 72


 2998              		.global	XL_Set_Goal_Position
 2999              		.thumb
 3000              		.thumb_func
 3002              	XL_Set_Goal_Position:
 3003              	.LFB43:
 767:../Src/xl_320.c ****   if(position > 1023){
 3004              		.loc 1 767 0
 3005              		.cfi_startproc
 3006              		@ args = 0, pretend = 0, frame = 0
 3007              		@ frame_needed = 0, uses_anonymous_args = 0
 3008              	.LVL277:
 768:../Src/xl_320.c ****     err = XL_ERR_INTERNAL | XL_ERR_ILLEGAL_ARGUMENTS;
 3009              		.loc 1 768 0
 3010 0000 B1F5806F 		cmp	r1, #1024
 3011 0004 04D3     		bcc	.L260
 769:../Src/xl_320.c ****     return 1;
 3012              		.loc 1 769 0
 3013 0006 0022     		movs	r2, #0
 3014              	.LVL278:
 3015 0008 074B     		ldr	r3, .L263
 3016 000a 1A80     		strh	r2, [r3]	@ movhi
 770:../Src/xl_320.c ****   }
 3017              		.loc 1 770 0
 3018 000c 0120     		movs	r0, #1
 3019              	.LVL279:
 773:../Src/xl_320.c **** 
 3020              		.loc 1 773 0
 3021 000e 7047     		bx	lr
 3022              	.LVL280:
 3023              	.L260:
 767:../Src/xl_320.c ****   if(position > 1023){
 3024              		.loc 1 767 0
 3025 0010 00B5     		push	{lr}
 3026              	.LCFI85:
 3027              		.cfi_def_cfa_offset 4
 3028              		.cfi_offset 14, -4
 3029 0012 83B0     		sub	sp, sp, #12
 3030              	.LCFI86:
 3031              		.cfi_def_cfa_offset 16
 3032 0014 1346     		mov	r3, r2
 3033 0016 0A46     		mov	r2, r1
 3034              	.LVL281:
 772:../Src/xl_320.c **** }
 3035              		.loc 1 772 0
 3036 0018 0093     		str	r3, [sp]
 3037 001a 1321     		movs	r1, #19
 3038              	.LVL282:
 3039 001c 0223     		movs	r3, #2
 3040 001e FFF7FEFF 		bl	XL_Write
 3041              	.LVL283:
 773:../Src/xl_320.c **** 
 3042              		.loc 1 773 0
 3043 0022 03B0     		add	sp, sp, #12
 3044              	.LCFI87:
 3045              		.cfi_def_cfa_offset 4
 3046              		@ sp needed
 3047 0024 5DF804FB 		ldr	pc, [sp], #4
ARM GAS  /tmp/ccsfp71n.s 			page 73


 3048              	.L264:
 3049              		.align	2
 3050              	.L263:
 3051 0028 00000000 		.word	.LANCHOR1
 3052              		.cfi_endproc
 3053              	.LFE43:
 3055              		.section	.text.XL_Set_Goal_Speed_Join,"ax",%progbits
 3056              		.align	2
 3057              		.global	XL_Set_Goal_Speed_Join
 3058              		.thumb
 3059              		.thumb_func
 3061              	XL_Set_Goal_Speed_Join:
 3062              	.LFB44:
 775:../Src/xl_320.c ****   if(speed > 1023){
 3063              		.loc 1 775 0
 3064              		.cfi_startproc
 3065              		@ args = 0, pretend = 0, frame = 0
 3066              		@ frame_needed = 0, uses_anonymous_args = 0
 3067              	.LVL284:
 776:../Src/xl_320.c ****     err = XL_ERR_INTERNAL | XL_ERR_ILLEGAL_ARGUMENTS;
 3068              		.loc 1 776 0
 3069 0000 B1F5806F 		cmp	r1, #1024
 3070 0004 04D3     		bcc	.L266
 777:../Src/xl_320.c ****     return 1;
 3071              		.loc 1 777 0
 3072 0006 0022     		movs	r2, #0
 3073              	.LVL285:
 3074 0008 074B     		ldr	r3, .L269
 3075 000a 1A80     		strh	r2, [r3]	@ movhi
 778:../Src/xl_320.c ****   }
 3076              		.loc 1 778 0
 3077 000c 0120     		movs	r0, #1
 3078              	.LVL286:
 781:../Src/xl_320.c **** 
 3079              		.loc 1 781 0
 3080 000e 7047     		bx	lr
 3081              	.LVL287:
 3082              	.L266:
 775:../Src/xl_320.c ****   if(speed > 1023){
 3083              		.loc 1 775 0
 3084 0010 00B5     		push	{lr}
 3085              	.LCFI88:
 3086              		.cfi_def_cfa_offset 4
 3087              		.cfi_offset 14, -4
 3088 0012 83B0     		sub	sp, sp, #12
 3089              	.LCFI89:
 3090              		.cfi_def_cfa_offset 16
 3091 0014 1346     		mov	r3, r2
 3092 0016 0A46     		mov	r2, r1
 3093              	.LVL288:
 780:../Src/xl_320.c **** }
 3094              		.loc 1 780 0
 3095 0018 0093     		str	r3, [sp]
 3096 001a 1421     		movs	r1, #20
 3097              	.LVL289:
 3098 001c 0223     		movs	r3, #2
 3099 001e FFF7FEFF 		bl	XL_Write
ARM GAS  /tmp/ccsfp71n.s 			page 74


 3100              	.LVL290:
 781:../Src/xl_320.c **** 
 3101              		.loc 1 781 0
 3102 0022 03B0     		add	sp, sp, #12
 3103              	.LCFI90:
 3104              		.cfi_def_cfa_offset 4
 3105              		@ sp needed
 3106 0024 5DF804FB 		ldr	pc, [sp], #4
 3107              	.L270:
 3108              		.align	2
 3109              	.L269:
 3110 0028 00000000 		.word	.LANCHOR1
 3111              		.cfi_endproc
 3112              	.LFE44:
 3114              		.section	.text.XL_Set_Goal_Speed_Wheel,"ax",%progbits
 3115              		.align	2
 3116              		.global	XL_Set_Goal_Speed_Wheel
 3117              		.thumb
 3118              		.thumb_func
 3120              	XL_Set_Goal_Speed_Wheel:
 3121              	.LFB45:
 783:../Src/xl_320.c ****   if(speed > 1023){
 3122              		.loc 1 783 0
 3123              		.cfi_startproc
 3124              		@ args = 0, pretend = 0, frame = 0
 3125              		@ frame_needed = 0, uses_anonymous_args = 0
 3126              	.LVL291:
 3127 0000 10B5     		push	{r4, lr}
 3128              	.LCFI91:
 3129              		.cfi_def_cfa_offset 8
 3130              		.cfi_offset 4, -8
 3131              		.cfi_offset 14, -4
 3132 0002 82B0     		sub	sp, sp, #8
 3133              	.LCFI92:
 3134              		.cfi_def_cfa_offset 16
 3135 0004 0C46     		mov	r4, r1
 784:../Src/xl_320.c ****     err = XL_ERR_INTERNAL | XL_ERR_ILLEGAL_ARGUMENTS;
 3136              		.loc 1 784 0
 3137 0006 B1F5806F 		cmp	r1, #1024
 3138 000a 04D3     		bcc	.L272
 785:../Src/xl_320.c ****     return 1;
 3139              		.loc 1 785 0
 3140 000c 0022     		movs	r2, #0
 3141              	.LVL292:
 3142 000e 0C4B     		ldr	r3, .L279
 3143              	.LVL293:
 3144 0010 1A80     		strh	r2, [r3]	@ movhi
 786:../Src/xl_320.c ****   }
 3145              		.loc 1 786 0
 3146 0012 0120     		movs	r0, #1
 3147              	.LVL294:
 3148 0014 12E0     		b	.L273
 3149              	.LVL295:
 3150              	.L272:
 788:../Src/xl_320.c ****   case XL_CLOCKWISE:
 3151              		.loc 1 788 0
 3152 0016 12B1     		cbz	r2, .L275
ARM GAS  /tmp/ccsfp71n.s 			page 75


 3153 0018 012A     		cmp	r2, #1
 3154 001a 09D0     		beq	.L276
 3155 001c 03E0     		b	.L277
 3156              	.L275:
 790:../Src/xl_320.c ****     break;
 3157              		.loc 1 790 0
 3158 001e 01F58064 		add	r4, r1, #1024
 3159 0022 A4B2     		uxth	r4, r4
 3160              	.LVL296:
 791:../Src/xl_320.c ****   case XL_COUNTERCLOCKWISE:
 3161              		.loc 1 791 0
 3162 0024 04E0     		b	.L276
 3163              	.LVL297:
 3164              	.L277:
 795:../Src/xl_320.c ****     return 1;
 3165              		.loc 1 795 0
 3166 0026 0022     		movs	r2, #0
 3167              	.LVL298:
 3168 0028 054B     		ldr	r3, .L279
 3169              	.LVL299:
 3170 002a 1A80     		strh	r2, [r3]	@ movhi
 796:../Src/xl_320.c ****     break;
 3171              		.loc 1 796 0
 3172 002c 0120     		movs	r0, #1
 3173              	.LVL300:
 3174 002e 05E0     		b	.L273
 3175              	.LVL301:
 3176              	.L276:
 799:../Src/xl_320.c **** }
 3177              		.loc 1 799 0
 3178 0030 0093     		str	r3, [sp]
 3179 0032 1421     		movs	r1, #20
 3180 0034 2246     		mov	r2, r4
 3181              	.LVL302:
 3182 0036 0223     		movs	r3, #2
 3183              	.LVL303:
 3184 0038 FFF7FEFF 		bl	XL_Write
 3185              	.LVL304:
 3186              	.L273:
 800:../Src/xl_320.c **** 
 3187              		.loc 1 800 0
 3188 003c 02B0     		add	sp, sp, #8
 3189              	.LCFI93:
 3190              		.cfi_def_cfa_offset 8
 3191              		@ sp needed
 3192 003e 10BD     		pop	{r4, pc}
 3193              	.L280:
 3194              		.align	2
 3195              	.L279:
 3196 0040 00000000 		.word	.LANCHOR1
 3197              		.cfi_endproc
 3198              	.LFE45:
 3200              		.section	.text.XL_Set_Torque_Limit,"ax",%progbits
 3201              		.align	2
 3202              		.global	XL_Set_Torque_Limit
 3203              		.thumb
 3204              		.thumb_func
ARM GAS  /tmp/ccsfp71n.s 			page 76


 3206              	XL_Set_Torque_Limit:
 3207              	.LFB46:
 802:../Src/xl_320.c ****   if(torque_limit > 1023){
 3208              		.loc 1 802 0
 3209              		.cfi_startproc
 3210              		@ args = 0, pretend = 0, frame = 0
 3211              		@ frame_needed = 0, uses_anonymous_args = 0
 3212              	.LVL305:
 803:../Src/xl_320.c ****     err = XL_ERR_INTERNAL | XL_ERR_ILLEGAL_ARGUMENTS;
 3213              		.loc 1 803 0
 3214 0000 B1F5806F 		cmp	r1, #1024
 3215 0004 04D3     		bcc	.L282
 804:../Src/xl_320.c ****     return 1;
 3216              		.loc 1 804 0
 3217 0006 0022     		movs	r2, #0
 3218              	.LVL306:
 3219 0008 074B     		ldr	r3, .L285
 3220 000a 1A80     		strh	r2, [r3]	@ movhi
 805:../Src/xl_320.c ****   }
 3221              		.loc 1 805 0
 3222 000c 0120     		movs	r0, #1
 3223              	.LVL307:
 808:../Src/xl_320.c **** 
 3224              		.loc 1 808 0
 3225 000e 7047     		bx	lr
 3226              	.LVL308:
 3227              	.L282:
 802:../Src/xl_320.c ****   if(torque_limit > 1023){
 3228              		.loc 1 802 0
 3229 0010 00B5     		push	{lr}
 3230              	.LCFI94:
 3231              		.cfi_def_cfa_offset 4
 3232              		.cfi_offset 14, -4
 3233 0012 83B0     		sub	sp, sp, #12
 3234              	.LCFI95:
 3235              		.cfi_def_cfa_offset 16
 3236 0014 1346     		mov	r3, r2
 3237 0016 0A46     		mov	r2, r1
 3238              	.LVL309:
 807:../Src/xl_320.c **** }
 3239              		.loc 1 807 0
 3240 0018 0093     		str	r3, [sp]
 3241 001a 1521     		movs	r1, #21
 3242              	.LVL310:
 3243 001c 0223     		movs	r3, #2
 3244 001e FFF7FEFF 		bl	XL_Write
 3245              	.LVL311:
 808:../Src/xl_320.c **** 
 3246              		.loc 1 808 0
 3247 0022 03B0     		add	sp, sp, #12
 3248              	.LCFI96:
 3249              		.cfi_def_cfa_offset 4
 3250              		@ sp needed
 3251 0024 5DF804FB 		ldr	pc, [sp], #4
 3252              	.L286:
 3253              		.align	2
 3254              	.L285:
ARM GAS  /tmp/ccsfp71n.s 			page 77


 3255 0028 00000000 		.word	.LANCHOR1
 3256              		.cfi_endproc
 3257              	.LFE46:
 3259              		.section	.text.XL_Set_Punch,"ax",%progbits
 3260              		.align	2
 3261              		.global	XL_Set_Punch
 3262              		.thumb
 3263              		.thumb_func
 3265              	XL_Set_Punch:
 3266              	.LFB47:
 810:../Src/xl_320.c ****   if(punch < 0x20 || punch > 0x3FF){
 3267              		.loc 1 810 0
 3268              		.cfi_startproc
 3269              		@ args = 0, pretend = 0, frame = 0
 3270              		@ frame_needed = 0, uses_anonymous_args = 0
 3271              	.LVL312:
 811:../Src/xl_320.c ****     err = XL_ERR_INTERNAL | XL_ERR_ILLEGAL_ARGUMENTS;
 3272              		.loc 1 811 0
 3273 0000 A1F12003 		sub	r3, r1, #32
 3274 0004 9BB2     		uxth	r3, r3
 3275 0006 B3F5787F 		cmp	r3, #992
 3276 000a 04D3     		bcc	.L288
 812:../Src/xl_320.c ****     return 1;
 3277              		.loc 1 812 0
 3278 000c 0022     		movs	r2, #0
 3279              	.LVL313:
 3280 000e 084B     		ldr	r3, .L291
 3281 0010 1A80     		strh	r2, [r3]	@ movhi
 813:../Src/xl_320.c ****   }
 3282              		.loc 1 813 0
 3283 0012 0120     		movs	r0, #1
 3284              	.LVL314:
 816:../Src/xl_320.c **** 
 3285              		.loc 1 816 0
 3286 0014 7047     		bx	lr
 3287              	.LVL315:
 3288              	.L288:
 810:../Src/xl_320.c ****   if(punch < 0x20 || punch > 0x3FF){
 3289              		.loc 1 810 0
 3290 0016 00B5     		push	{lr}
 3291              	.LCFI97:
 3292              		.cfi_def_cfa_offset 4
 3293              		.cfi_offset 14, -4
 3294 0018 83B0     		sub	sp, sp, #12
 3295              	.LCFI98:
 3296              		.cfi_def_cfa_offset 16
 3297 001a 1346     		mov	r3, r2
 3298 001c 0A46     		mov	r2, r1
 3299              	.LVL316:
 815:../Src/xl_320.c **** }
 3300              		.loc 1 815 0
 3301 001e 0093     		str	r3, [sp]
 3302 0020 1621     		movs	r1, #22
 3303              	.LVL317:
 3304 0022 0223     		movs	r3, #2
 3305 0024 FFF7FEFF 		bl	XL_Write
 3306              	.LVL318:
ARM GAS  /tmp/ccsfp71n.s 			page 78


 816:../Src/xl_320.c **** 
 3307              		.loc 1 816 0
 3308 0028 03B0     		add	sp, sp, #12
 3309              	.LCFI99:
 3310              		.cfi_def_cfa_offset 4
 3311              		@ sp needed
 3312 002a 5DF804FB 		ldr	pc, [sp], #4
 3313              	.L292:
 3314 002e 00BF     		.align	2
 3315              	.L291:
 3316 0030 00000000 		.word	.LANCHOR1
 3317              		.cfi_endproc
 3318              	.LFE47:
 3320              		.section	.rodata
 3321              		.align	2
 3322              		.set	.LANCHOR0,. + 0
 3323              	.LC0:
 3324 0000 0000     		.short	0
 3325 0002 0580     		.short	-32763
 3326 0004 0F80     		.short	-32753
 3327 0006 0A00     		.short	10
 3328 0008 1B80     		.short	-32741
 3329 000a 1E00     		.short	30
 3330 000c 1400     		.short	20
 3331 000e 1180     		.short	-32751
 3332 0010 3380     		.short	-32717
 3333 0012 3600     		.short	54
 3334 0014 3C00     		.short	60
 3335 0016 3980     		.short	-32711
 3336 0018 2800     		.short	40
 3337 001a 2D80     		.short	-32723
 3338 001c 2780     		.short	-32729
 3339 001e 2200     		.short	34
 3340 0020 6380     		.short	-32669
 3341 0022 6600     		.short	102
 3342 0024 6C00     		.short	108
 3343 0026 6980     		.short	-32663
 3344 0028 7800     		.short	120
 3345 002a 7D80     		.short	-32643
 3346 002c 7780     		.short	-32649
 3347 002e 7200     		.short	114
 3348 0030 5000     		.short	80
 3349 0032 5580     		.short	-32683
 3350 0034 5F80     		.short	-32673
 3351 0036 5A00     		.short	90
 3352 0038 4B80     		.short	-32693
 3353 003a 4E00     		.short	78
 3354 003c 4400     		.short	68
 3355 003e 4180     		.short	-32703
 3356 0040 C380     		.short	-32573
 3357 0042 C600     		.short	198
 3358 0044 CC00     		.short	204
 3359 0046 C980     		.short	-32567
 3360 0048 D800     		.short	216
 3361 004a DD80     		.short	-32547
 3362 004c D780     		.short	-32553
 3363 004e D200     		.short	210
ARM GAS  /tmp/ccsfp71n.s 			page 79


 3364 0050 F000     		.short	240
 3365 0052 F580     		.short	-32523
 3366 0054 FF80     		.short	-32513
 3367 0056 FA00     		.short	250
 3368 0058 EB80     		.short	-32533
 3369 005a EE00     		.short	238
 3370 005c E400     		.short	228
 3371 005e E180     		.short	-32543
 3372 0060 A000     		.short	160
 3373 0062 A580     		.short	-32603
 3374 0064 AF80     		.short	-32593
 3375 0066 AA00     		.short	170
 3376 0068 BB80     		.short	-32581
 3377 006a BE00     		.short	190
 3378 006c B400     		.short	180
 3379 006e B180     		.short	-32591
 3380 0070 9380     		.short	-32621
 3381 0072 9600     		.short	150
 3382 0074 9C00     		.short	156
 3383 0076 9980     		.short	-32615
 3384 0078 8800     		.short	136
 3385 007a 8D80     		.short	-32627
 3386 007c 8780     		.short	-32633
 3387 007e 8200     		.short	130
 3388 0080 8381     		.short	-32381
 3389 0082 8601     		.short	390
 3390 0084 8C01     		.short	396
 3391 0086 8981     		.short	-32375
 3392 0088 9801     		.short	408
 3393 008a 9D81     		.short	-32355
 3394 008c 9781     		.short	-32361
 3395 008e 9201     		.short	402
 3396 0090 B001     		.short	432
 3397 0092 B581     		.short	-32331
 3398 0094 BF81     		.short	-32321
 3399 0096 BA01     		.short	442
 3400 0098 AB81     		.short	-32341
 3401 009a AE01     		.short	430
 3402 009c A401     		.short	420
 3403 009e A181     		.short	-32351
 3404 00a0 E001     		.short	480
 3405 00a2 E581     		.short	-32283
 3406 00a4 EF81     		.short	-32273
 3407 00a6 EA01     		.short	490
 3408 00a8 FB81     		.short	-32261
 3409 00aa FE01     		.short	510
 3410 00ac F401     		.short	500
 3411 00ae F181     		.short	-32271
 3412 00b0 D381     		.short	-32301
 3413 00b2 D601     		.short	470
 3414 00b4 DC01     		.short	476
 3415 00b6 D981     		.short	-32295
 3416 00b8 C801     		.short	456
 3417 00ba CD81     		.short	-32307
 3418 00bc C781     		.short	-32313
 3419 00be C201     		.short	450
 3420 00c0 4001     		.short	320
ARM GAS  /tmp/ccsfp71n.s 			page 80


 3421 00c2 4581     		.short	-32443
 3422 00c4 4F81     		.short	-32433
 3423 00c6 4A01     		.short	330
 3424 00c8 5B81     		.short	-32421
 3425 00ca 5E01     		.short	350
 3426 00cc 5401     		.short	340
 3427 00ce 5181     		.short	-32431
 3428 00d0 7381     		.short	-32397
 3429 00d2 7601     		.short	374
 3430 00d4 7C01     		.short	380
 3431 00d6 7981     		.short	-32391
 3432 00d8 6801     		.short	360
 3433 00da 6D81     		.short	-32403
 3434 00dc 6781     		.short	-32409
 3435 00de 6201     		.short	354
 3436 00e0 2381     		.short	-32477
 3437 00e2 2601     		.short	294
 3438 00e4 2C01     		.short	300
 3439 00e6 2981     		.short	-32471
 3440 00e8 3801     		.short	312
 3441 00ea 3D81     		.short	-32451
 3442 00ec 3781     		.short	-32457
 3443 00ee 3201     		.short	306
 3444 00f0 1001     		.short	272
 3445 00f2 1581     		.short	-32491
 3446 00f4 1F81     		.short	-32481
 3447 00f6 1A01     		.short	282
 3448 00f8 0B81     		.short	-32501
 3449 00fa 0E01     		.short	270
 3450 00fc 0401     		.short	260
 3451 00fe 0181     		.short	-32511
 3452 0100 0383     		.short	-31997
 3453 0102 0603     		.short	774
 3454 0104 0C03     		.short	780
 3455 0106 0983     		.short	-31991
 3456 0108 1803     		.short	792
 3457 010a 1D83     		.short	-31971
 3458 010c 1783     		.short	-31977
 3459 010e 1203     		.short	786
 3460 0110 3003     		.short	816
 3461 0112 3583     		.short	-31947
 3462 0114 3F83     		.short	-31937
 3463 0116 3A03     		.short	826
 3464 0118 2B83     		.short	-31957
 3465 011a 2E03     		.short	814
 3466 011c 2403     		.short	804
 3467 011e 2183     		.short	-31967
 3468 0120 6003     		.short	864
 3469 0122 6583     		.short	-31899
 3470 0124 6F83     		.short	-31889
 3471 0126 6A03     		.short	874
 3472 0128 7B83     		.short	-31877
 3473 012a 7E03     		.short	894
 3474 012c 7403     		.short	884
 3475 012e 7183     		.short	-31887
 3476 0130 5383     		.short	-31917
 3477 0132 5603     		.short	854
ARM GAS  /tmp/ccsfp71n.s 			page 81


 3478 0134 5C03     		.short	860
 3479 0136 5983     		.short	-31911
 3480 0138 4803     		.short	840
 3481 013a 4D83     		.short	-31923
 3482 013c 4783     		.short	-31929
 3483 013e 4203     		.short	834
 3484 0140 C003     		.short	960
 3485 0142 C583     		.short	-31803
 3486 0144 CF83     		.short	-31793
 3487 0146 CA03     		.short	970
 3488 0148 DB83     		.short	-31781
 3489 014a DE03     		.short	990
 3490 014c D403     		.short	980
 3491 014e D183     		.short	-31791
 3492 0150 F383     		.short	-31757
 3493 0152 F603     		.short	1014
 3494 0154 FC03     		.short	1020
 3495 0156 F983     		.short	-31751
 3496 0158 E803     		.short	1000
 3497 015a ED83     		.short	-31763
 3498 015c E783     		.short	-31769
 3499 015e E203     		.short	994
 3500 0160 A383     		.short	-31837
 3501 0162 A603     		.short	934
 3502 0164 AC03     		.short	940
 3503 0166 A983     		.short	-31831
 3504 0168 B803     		.short	952
 3505 016a BD83     		.short	-31811
 3506 016c B783     		.short	-31817
 3507 016e B203     		.short	946
 3508 0170 9003     		.short	912
 3509 0172 9583     		.short	-31851
 3510 0174 9F83     		.short	-31841
 3511 0176 9A03     		.short	922
 3512 0178 8B83     		.short	-31861
 3513 017a 8E03     		.short	910
 3514 017c 8403     		.short	900
 3515 017e 8183     		.short	-31871
 3516 0180 8002     		.short	640
 3517 0182 8582     		.short	-32123
 3518 0184 8F82     		.short	-32113
 3519 0186 8A02     		.short	650
 3520 0188 9B82     		.short	-32101
 3521 018a 9E02     		.short	670
 3522 018c 9402     		.short	660
 3523 018e 9182     		.short	-32111
 3524 0190 B382     		.short	-32077
 3525 0192 B602     		.short	694
 3526 0194 BC02     		.short	700
 3527 0196 B982     		.short	-32071
 3528 0198 A802     		.short	680
 3529 019a AD82     		.short	-32083
 3530 019c A782     		.short	-32089
 3531 019e A202     		.short	674
 3532 01a0 E382     		.short	-32029
 3533 01a2 E602     		.short	742
 3534 01a4 EC02     		.short	748
ARM GAS  /tmp/ccsfp71n.s 			page 82


 3535 01a6 E982     		.short	-32023
 3536 01a8 F802     		.short	760
 3537 01aa FD82     		.short	-32003
 3538 01ac F782     		.short	-32009
 3539 01ae F202     		.short	754
 3540 01b0 D002     		.short	720
 3541 01b2 D582     		.short	-32043
 3542 01b4 DF82     		.short	-32033
 3543 01b6 DA02     		.short	730
 3544 01b8 CB82     		.short	-32053
 3545 01ba CE02     		.short	718
 3546 01bc C402     		.short	708
 3547 01be C182     		.short	-32063
 3548 01c0 4382     		.short	-32189
 3549 01c2 4602     		.short	582
 3550 01c4 4C02     		.short	588
 3551 01c6 4982     		.short	-32183
 3552 01c8 5802     		.short	600
 3553 01ca 5D82     		.short	-32163
 3554 01cc 5782     		.short	-32169
 3555 01ce 5202     		.short	594
 3556 01d0 7002     		.short	624
 3557 01d2 7582     		.short	-32139
 3558 01d4 7F82     		.short	-32129
 3559 01d6 7A02     		.short	634
 3560 01d8 6B82     		.short	-32149
 3561 01da 6E02     		.short	622
 3562 01dc 6402     		.short	612
 3563 01de 6182     		.short	-32159
 3564 01e0 2002     		.short	544
 3565 01e2 2582     		.short	-32219
 3566 01e4 2F82     		.short	-32209
 3567 01e6 2A02     		.short	554
 3568 01e8 3B82     		.short	-32197
 3569 01ea 3E02     		.short	574
 3570 01ec 3402     		.short	564
 3571 01ee 3182     		.short	-32207
 3572 01f0 1382     		.short	-32237
 3573 01f2 1602     		.short	534
 3574 01f4 1C02     		.short	540
 3575 01f6 1982     		.short	-32231
 3576 01f8 0802     		.short	520
 3577 01fa 0D82     		.short	-32243
 3578 01fc 0782     		.short	-32249
 3579 01fe 0202     		.short	514
 3580              		.section	.bss.err,"aw",%nobits
 3581              		.align	1
 3582              		.set	.LANCHOR1,. + 0
 3585              	err:
 3586 0000 0000     		.space	2
 3587              		.section	.rodata.field_addr,"a",%progbits
 3588              		.align	2
 3589              		.set	.LANCHOR2,. + 0
 3592              	field_addr:
 3593 0000 03       		.byte	3
 3594 0001 04       		.byte	4
 3595 0002 05       		.byte	5
ARM GAS  /tmp/ccsfp71n.s 			page 83


 3596 0003 06       		.byte	6
 3597 0004 08       		.byte	8
 3598 0005 0B       		.byte	11
 3599 0006 0C       		.byte	12
 3600 0007 0D       		.byte	13
 3601 0008 0E       		.byte	14
 3602 0009 0F       		.byte	15
 3603 000a 11       		.byte	17
 3604 000b 12       		.byte	18
 3605 000c 00       		.byte	0
 3606 000d 02       		.byte	2
 3607 000e 18       		.byte	24
 3608 000f 19       		.byte	25
 3609 0010 1B       		.byte	27
 3610 0011 1C       		.byte	28
 3611 0012 1D       		.byte	29
 3612 0013 1E       		.byte	30
 3613 0014 20       		.byte	32
 3614 0015 23       		.byte	35
 3615 0016 33       		.byte	51
 3616 0017 25       		.byte	37
 3617 0018 27       		.byte	39
 3618 0019 29       		.byte	41
 3619 001a 2D       		.byte	45
 3620 001b 2E       		.byte	46
 3621 001c 2F       		.byte	47
 3622 001d 31       		.byte	49
 3623 001e 32       		.byte	50
 3624              		.section	.bss.params.5523,"aw",%nobits
 3625              		.align	2
 3626              		.set	.LANCHOR4,. + 0
 3629              	params.5523:
 3630 0000 00000000 		.space	4
 3631              		.section	.bss.packet.5522,"aw",%nobits
 3632              		.align	2
 3633              		.set	.LANCHOR5,. + 0
 3636              	packet.5522:
 3637 0000 00000000 		.space	8
 3637      00000000 
 3638              		.section	.rodata.field_length,"a",%progbits
 3639              		.align	2
 3640              		.set	.LANCHOR3,. + 0
 3643              	field_length:
 3644 0000 01       		.byte	1
 3645 0001 01       		.byte	1
 3646 0002 01       		.byte	1
 3647 0003 02       		.byte	2
 3648 0004 02       		.byte	2
 3649 0005 01       		.byte	1
 3650 0006 01       		.byte	1
 3651 0007 01       		.byte	1
 3652 0008 01       		.byte	1
 3653 0009 02       		.byte	2
 3654 000a 01       		.byte	1
 3655 000b 01       		.byte	1
 3656 000c 02       		.byte	2
 3657 000d 01       		.byte	1
ARM GAS  /tmp/ccsfp71n.s 			page 84


 3658 000e 01       		.byte	1
 3659 000f 01       		.byte	1
 3660 0010 01       		.byte	1
 3661 0011 01       		.byte	1
 3662 0012 01       		.byte	1
 3663 0013 02       		.byte	2
 3664 0014 02       		.byte	2
 3665 0015 02       		.byte	2
 3666 0016 02       		.byte	2
 3667 0017 02       		.byte	2
 3668 0018 02       		.byte	2
 3669 0019 02       		.byte	2
 3670 001a 01       		.byte	1
 3671 001b 01       		.byte	1
 3672 001c 01       		.byte	1
 3673 001d 01       		.byte	1
 3674 001e 01       		.byte	1
 3675              		.text
 3676              	.Letext0:
 3677              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 3678              		.file 3 "/usr/include/newlib/sys/_stdint.h"
 3679              		.file 4 "../Inc/xl_320.h"
ARM GAS  /tmp/ccsfp71n.s 			page 85


DEFINED SYMBOLS
                            *ABS*:0000000000000000 xl_320.c
     /tmp/ccsfp71n.s:21     .text.XL_FSM_HEADER_0:0000000000000000 $t
     /tmp/ccsfp71n.s:26     .text.XL_FSM_HEADER_0:0000000000000000 XL_FSM_HEADER_0
     /tmp/ccsfp71n.s:51     .text.XL_FSM_HEADER_0:0000000000000014 $d
     /tmp/ccsfp71n.s:61     .text.XL_FSM_HEADER_1:0000000000000000 XL_FSM_HEADER_1
     /tmp/ccsfp71n.s:56     .text.XL_FSM_HEADER_1:0000000000000000 $t
     /tmp/ccsfp71n.s:91     .text.XL_FSM_HEADER_1:000000000000001c $d
     /tmp/ccsfp71n.s:102    .text.XL_FSM_HEADER_2:0000000000000000 XL_FSM_HEADER_2
     /tmp/ccsfp71n.s:97     .text.XL_FSM_HEADER_2:0000000000000000 $t
     /tmp/ccsfp71n.s:132    .text.XL_FSM_HEADER_2:000000000000001c $d
     /tmp/ccsfp71n.s:143    .text.XL_FSM_HEADER_3:0000000000000000 XL_FSM_HEADER_3
     /tmp/ccsfp71n.s:138    .text.XL_FSM_HEADER_3:0000000000000000 $t
     /tmp/ccsfp71n.s:173    .text.XL_FSM_HEADER_3:000000000000001c $d
     /tmp/ccsfp71n.s:184    .text.XL_FSM_ID:0000000000000000 XL_FSM_ID
     /tmp/ccsfp71n.s:179    .text.XL_FSM_ID:0000000000000000 $t
     /tmp/ccsfp71n.s:217    .text.XL_FSM_ID:0000000000000020 $d
     /tmp/ccsfp71n.s:228    .text.XL_FSM_LENGTH_LOW:0000000000000000 XL_FSM_LENGTH_LOW
     /tmp/ccsfp71n.s:223    .text.XL_FSM_LENGTH_LOW:0000000000000000 $t
     /tmp/ccsfp71n.s:249    .text.XL_FSM_LENGTH_LOW:0000000000000010 $d
     /tmp/ccsfp71n.s:259    .text.XL_FSM_LENGTH_HIGH:0000000000000000 XL_FSM_LENGTH_HIGH
     /tmp/ccsfp71n.s:254    .text.XL_FSM_LENGTH_HIGH:0000000000000000 $t
     /tmp/ccsfp71n.s:299    .text.XL_FSM_LENGTH_HIGH:000000000000002c $d
     /tmp/ccsfp71n.s:310    .text.XL_FSM_INSTRUCTION:0000000000000000 XL_FSM_INSTRUCTION
     /tmp/ccsfp71n.s:305    .text.XL_FSM_INSTRUCTION:0000000000000000 $t
     /tmp/ccsfp71n.s:344    .text.XL_FSM_INSTRUCTION:0000000000000024 $d
     /tmp/ccsfp71n.s:355    .text.XL_FSM_RECEIVING:0000000000000000 XL_FSM_RECEIVING
     /tmp/ccsfp71n.s:350    .text.XL_FSM_RECEIVING:0000000000000000 $t
     /tmp/ccsfp71n.s:383    .text.XL_Update_CRC:0000000000000000 $t
     /tmp/ccsfp71n.s:388    .text.XL_Update_CRC:0000000000000000 XL_Update_CRC
     /tmp/ccsfp71n.s:453    .text.XL_Update_CRC:000000000000003c $d
     /tmp/ccsfp71n.s:458    .text.XL_Extract_Status_Packet:0000000000000000 $t
     /tmp/ccsfp71n.s:463    .text.XL_Extract_Status_Packet:0000000000000000 XL_Extract_Status_Packet
     /tmp/ccsfp71n.s:593    .text.XL_Extract_Status_Packet:000000000000008c $d
     /tmp/ccsfp71n.s:598    .text.XL_Receive:0000000000000000 $t
     /tmp/ccsfp71n.s:603    .text.XL_Receive:0000000000000000 XL_Receive
     /tmp/ccsfp71n.s:726    .text.XL_Receive:0000000000000094 $d
     /tmp/ccsfp71n.s:732    .text.XL_Build_Frame:0000000000000000 $t
     /tmp/ccsfp71n.s:737    .text.XL_Build_Frame:0000000000000000 XL_Build_Frame
     /tmp/ccsfp71n.s:926    .text.XL_Build_Frame:00000000000000c4 $d
     /tmp/ccsfp71n.s:932    .text.XL_Send:0000000000000000 $t
     /tmp/ccsfp71n.s:937    .text.XL_Send:0000000000000000 XL_Send
     /tmp/ccsfp71n.s:1003   .text.XL_Send:000000000000003c $d
     /tmp/ccsfp71n.s:1008   .text.XL_Get_Error:0000000000000000 $t
     /tmp/ccsfp71n.s:1013   .text.XL_Get_Error:0000000000000000 XL_Get_Error
     /tmp/ccsfp71n.s:1027   .text.XL_Get_Error:0000000000000008 $d
     /tmp/ccsfp71n.s:1032   .text.XL_Check_Status:0000000000000000 $t
     /tmp/ccsfp71n.s:1037   .text.XL_Check_Status:0000000000000000 XL_Check_Status
     /tmp/ccsfp71n.s:1063   .text.XL_Check_Status:0000000000000018 $d
     /tmp/ccsfp71n.s:1068   .text.XL_Ping:0000000000000000 $t
     /tmp/ccsfp71n.s:1073   .text.XL_Ping:0000000000000000 XL_Ping
     /tmp/ccsfp71n.s:1145   .text.XL_Ping:000000000000004c $d
     /tmp/ccsfp71n.s:1150   .text.XL_Discover:0000000000000000 $t
     /tmp/ccsfp71n.s:1155   .text.XL_Discover:0000000000000000 XL_Discover
     /tmp/ccsfp71n.s:1228   .text.XL_Read:0000000000000000 $t
     /tmp/ccsfp71n.s:1233   .text.XL_Read:0000000000000000 XL_Read
     /tmp/ccsfp71n.s:1343   .text.XL_Read:0000000000000090 $d
ARM GAS  /tmp/ccsfp71n.s 			page 86


     /tmp/ccsfp71n.s:1350   .text.XL_Factory_Reset:0000000000000000 $t
     /tmp/ccsfp71n.s:1355   .text.XL_Factory_Reset:0000000000000000 XL_Factory_Reset
     /tmp/ccsfp71n.s:1413   .text.XL_Reboot:0000000000000000 $t
     /tmp/ccsfp71n.s:1418   .text.XL_Reboot:0000000000000000 XL_Reboot
     /tmp/ccsfp71n.s:1473   .text.XL_Configure_Baud_Rate:0000000000000000 $t
     /tmp/ccsfp71n.s:1478   .text.XL_Configure_Baud_Rate:0000000000000000 XL_Configure_Baud_Rate
     /tmp/ccsfp71n.s:1497   .text.XL_Configure_Baud_Rate:000000000000000c $d
     /tmp/ccsfp71n.s:1502   .text.XL_Configure_Control_Mode:0000000000000000 $t
     /tmp/ccsfp71n.s:1507   .text.XL_Configure_Control_Mode:0000000000000000 XL_Configure_Control_Mode
     /tmp/ccsfp71n.s:1526   .text.XL_Configure_Control_Mode:000000000000000c $d
     /tmp/ccsfp71n.s:1531   .text.XL_Configure_Return_Level:0000000000000000 $t
     /tmp/ccsfp71n.s:1536   .text.XL_Configure_Return_Level:0000000000000000 XL_Configure_Return_Level
     /tmp/ccsfp71n.s:1555   .text.XL_Configure_Return_Level:000000000000000c $d
     /tmp/ccsfp71n.s:1560   .text.XL_Get_Current_Position:0000000000000000 $t
     /tmp/ccsfp71n.s:1565   .text.XL_Get_Current_Position:0000000000000000 XL_Get_Current_Position
     /tmp/ccsfp71n.s:1589   .text.XL_Get_Current_Speed:0000000000000000 $t
     /tmp/ccsfp71n.s:1594   .text.XL_Get_Current_Speed:0000000000000000 XL_Get_Current_Speed
     /tmp/ccsfp71n.s:1636   .text.XL_Get_Current_Load:0000000000000000 $t
     /tmp/ccsfp71n.s:1641   .text.XL_Get_Current_Load:0000000000000000 XL_Get_Current_Load
     /tmp/ccsfp71n.s:1683   .text.XL_Get_Current_Voltage:0000000000000000 $t
     /tmp/ccsfp71n.s:1688   .text.XL_Get_Current_Voltage:0000000000000000 XL_Get_Current_Voltage
     /tmp/ccsfp71n.s:1712   .text.XL_Get_Current_Temperature:0000000000000000 $t
     /tmp/ccsfp71n.s:1717   .text.XL_Get_Current_Temperature:0000000000000000 XL_Get_Current_Temperature
     /tmp/ccsfp71n.s:1741   .text.XL_Is_Working:0000000000000000 $t
     /tmp/ccsfp71n.s:1746   .text.XL_Is_Working:0000000000000000 XL_Is_Working
     /tmp/ccsfp71n.s:1770   .text.XL_Is_Moving:0000000000000000 $t
     /tmp/ccsfp71n.s:1775   .text.XL_Is_Moving:0000000000000000 XL_Is_Moving
     /tmp/ccsfp71n.s:1799   .text.XL_Get_Hardware_Error:0000000000000000 $t
     /tmp/ccsfp71n.s:1804   .text.XL_Get_Hardware_Error:0000000000000000 XL_Get_Hardware_Error
     /tmp/ccsfp71n.s:1828   .text.XL_Check_Alert:0000000000000000 $t
     /tmp/ccsfp71n.s:1833   .text.XL_Check_Alert:0000000000000000 XL_Check_Alert
     /tmp/ccsfp71n.s:1884   .text.XL_Check_Alert:0000000000000030 $d
     /tmp/ccsfp71n.s:1889   .text.XL_Action:0000000000000000 $t
     /tmp/ccsfp71n.s:1894   .text.XL_Action:0000000000000000 XL_Action
     /tmp/ccsfp71n.s:1963   .text.XL_Write:0000000000000000 $t
     /tmp/ccsfp71n.s:1968   .text.XL_Write:0000000000000000 XL_Write
     /tmp/ccsfp71n.s:2085   .text.XL_Write:0000000000000078 $d
     /tmp/ccsfp71n.s:2092   .text.XL_Configure_ID:0000000000000000 $t
     /tmp/ccsfp71n.s:2097   .text.XL_Configure_ID:0000000000000000 XL_Configure_ID
     /tmp/ccsfp71n.s:2143   .text.XL_Configure_ID:0000000000000024 $d
     /tmp/ccsfp71n.s:2148   .text.XL_Configure_Return_Delay_Time:0000000000000000 $t
     /tmp/ccsfp71n.s:2153   .text.XL_Configure_Return_Delay_Time:0000000000000000 XL_Configure_Return_Delay_Time
     /tmp/ccsfp71n.s:2199   .text.XL_Configure_Return_Delay_Time:0000000000000024 $d
     /tmp/ccsfp71n.s:2204   .text.XL_Configure_CW_Angle_Limit:0000000000000000 $t
     /tmp/ccsfp71n.s:2209   .text.XL_Configure_CW_Angle_Limit:0000000000000000 XL_Configure_CW_Angle_Limit
     /tmp/ccsfp71n.s:2256   .text.XL_Configure_CW_Angle_Limit:0000000000000028 $d
     /tmp/ccsfp71n.s:2261   .text.XL_Configure_CCW_Angle_Limit:0000000000000000 $t
     /tmp/ccsfp71n.s:2266   .text.XL_Configure_CCW_Angle_Limit:0000000000000000 XL_Configure_CCW_Angle_Limit
     /tmp/ccsfp71n.s:2313   .text.XL_Configure_CCW_Angle_Limit:0000000000000028 $d
     /tmp/ccsfp71n.s:2318   .text.XL_Configure_Limit_Temperature:0000000000000000 $t
     /tmp/ccsfp71n.s:2323   .text.XL_Configure_Limit_Temperature:0000000000000000 XL_Configure_Limit_Temperature
     /tmp/ccsfp71n.s:2369   .text.XL_Configure_Limit_Temperature:0000000000000024 $d
     /tmp/ccsfp71n.s:2374   .text.XL_Configure_Lower_Limit_Voltage:0000000000000000 $t
     /tmp/ccsfp71n.s:2379   .text.XL_Configure_Lower_Limit_Voltage:0000000000000000 XL_Configure_Lower_Limit_Voltage
     /tmp/ccsfp71n.s:2427   .text.XL_Configure_Lower_Limit_Voltage:000000000000002c $d
     /tmp/ccsfp71n.s:2432   .text.XL_Configure_Upper_Limit_Voltage:0000000000000000 $t
     /tmp/ccsfp71n.s:2437   .text.XL_Configure_Upper_Limit_Voltage:0000000000000000 XL_Configure_Upper_Limit_Voltage
ARM GAS  /tmp/ccsfp71n.s 			page 87


     /tmp/ccsfp71n.s:2485   .text.XL_Configure_Upper_Limit_Voltage:000000000000002c $d
     /tmp/ccsfp71n.s:2490   .text.XL_Configure_Max_Torque:0000000000000000 $t
     /tmp/ccsfp71n.s:2495   .text.XL_Configure_Max_Torque:0000000000000000 XL_Configure_Max_Torque
     /tmp/ccsfp71n.s:2542   .text.XL_Configure_Max_Torque:0000000000000028 $d
     /tmp/ccsfp71n.s:2547   .text.XL_Configure_Alarm_Shutdown:0000000000000000 $t
     /tmp/ccsfp71n.s:2552   .text.XL_Configure_Alarm_Shutdown:0000000000000000 XL_Configure_Alarm_Shutdown
     /tmp/ccsfp71n.s:2598   .text.XL_Configure_Alarm_Shutdown:0000000000000024 $d
     /tmp/ccsfp71n.s:2603   .text.XL_Power_On:0000000000000000 $t
     /tmp/ccsfp71n.s:2608   .text.XL_Power_On:0000000000000000 XL_Power_On
     /tmp/ccsfp71n.s:2640   .text.XL_Power_Off:0000000000000000 $t
     /tmp/ccsfp71n.s:2645   .text.XL_Power_Off:0000000000000000 XL_Power_Off
     /tmp/ccsfp71n.s:2677   .text.XL_Set_LED:0000000000000000 $t
     /tmp/ccsfp71n.s:2682   .text.XL_Set_LED:0000000000000000 XL_Set_LED
     /tmp/ccsfp71n.s:2731   .text.XL_Set_LED:0000000000000028 $d
     /tmp/ccsfp71n.s:2736   .text.XL_Say_Hello:0000000000000000 $t
     /tmp/ccsfp71n.s:2741   .text.XL_Say_Hello:0000000000000000 XL_Say_Hello
     /tmp/ccsfp71n.s:2820   .text.XL_Set_D_Gain:0000000000000000 $t
     /tmp/ccsfp71n.s:2825   .text.XL_Set_D_Gain:0000000000000000 XL_Set_D_Gain
     /tmp/ccsfp71n.s:2874   .text.XL_Set_D_Gain:0000000000000028 $d
     /tmp/ccsfp71n.s:2879   .text.XL_Set_I_Gain:0000000000000000 $t
     /tmp/ccsfp71n.s:2884   .text.XL_Set_I_Gain:0000000000000000 XL_Set_I_Gain
     /tmp/ccsfp71n.s:2933   .text.XL_Set_I_Gain:0000000000000028 $d
     /tmp/ccsfp71n.s:2938   .text.XL_Set_P_Gain:0000000000000000 $t
     /tmp/ccsfp71n.s:2943   .text.XL_Set_P_Gain:0000000000000000 XL_Set_P_Gain
     /tmp/ccsfp71n.s:2992   .text.XL_Set_P_Gain:0000000000000028 $d
     /tmp/ccsfp71n.s:2997   .text.XL_Set_Goal_Position:0000000000000000 $t
     /tmp/ccsfp71n.s:3002   .text.XL_Set_Goal_Position:0000000000000000 XL_Set_Goal_Position
     /tmp/ccsfp71n.s:3051   .text.XL_Set_Goal_Position:0000000000000028 $d
     /tmp/ccsfp71n.s:3056   .text.XL_Set_Goal_Speed_Join:0000000000000000 $t
     /tmp/ccsfp71n.s:3061   .text.XL_Set_Goal_Speed_Join:0000000000000000 XL_Set_Goal_Speed_Join
     /tmp/ccsfp71n.s:3110   .text.XL_Set_Goal_Speed_Join:0000000000000028 $d
     /tmp/ccsfp71n.s:3115   .text.XL_Set_Goal_Speed_Wheel:0000000000000000 $t
     /tmp/ccsfp71n.s:3120   .text.XL_Set_Goal_Speed_Wheel:0000000000000000 XL_Set_Goal_Speed_Wheel
     /tmp/ccsfp71n.s:3196   .text.XL_Set_Goal_Speed_Wheel:0000000000000040 $d
     /tmp/ccsfp71n.s:3201   .text.XL_Set_Torque_Limit:0000000000000000 $t
     /tmp/ccsfp71n.s:3206   .text.XL_Set_Torque_Limit:0000000000000000 XL_Set_Torque_Limit
     /tmp/ccsfp71n.s:3255   .text.XL_Set_Torque_Limit:0000000000000028 $d
     /tmp/ccsfp71n.s:3260   .text.XL_Set_Punch:0000000000000000 $t
     /tmp/ccsfp71n.s:3265   .text.XL_Set_Punch:0000000000000000 XL_Set_Punch
     /tmp/ccsfp71n.s:3316   .text.XL_Set_Punch:0000000000000030 $d
     /tmp/ccsfp71n.s:3321   .rodata:0000000000000000 $d
     /tmp/ccsfp71n.s:3581   .bss.err:0000000000000000 $d
     /tmp/ccsfp71n.s:3585   .bss.err:0000000000000000 err
     /tmp/ccsfp71n.s:3588   .rodata.field_addr:0000000000000000 $d
     /tmp/ccsfp71n.s:3592   .rodata.field_addr:0000000000000000 field_addr
     /tmp/ccsfp71n.s:3625   .bss.params.5523:0000000000000000 $d
     /tmp/ccsfp71n.s:3629   .bss.params.5523:0000000000000000 params.5523
     /tmp/ccsfp71n.s:3632   .bss.packet.5522:0000000000000000 $d
     /tmp/ccsfp71n.s:3636   .bss.packet.5522:0000000000000000 packet.5522
     /tmp/ccsfp71n.s:3639   .rodata.field_length:0000000000000000 $d
     /tmp/ccsfp71n.s:3643   .rodata.field_length:0000000000000000 field_length
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
memcpy
